name: CLI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build:
    name: Build and test ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
    env:
      VAULT_VERSION: "1.1.3"
      VAULT_TOKEN: "root"
      VAULT_ADDR: "http://127.0.0.1:8200"
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install git -y
      - name: Set up Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: 1.13
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: GOOS=${{ matrix.os }} go build -o sops-${{ matrix.os }}-${{ github.sha }} -v go.mozilla.org/sops/cmd/sops
      - name: Import test GPG keys
        run: for i in 1 2 3 4 5; do gpg --import pgp/sops_functional_tests_key.asc && break || sleep 15; done
      - name: Test
        run: make test
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: sops-${{ matrix.os }}-${{ github.sha }}
          path: sops-${{ matrix.os }}-${{ github.sha }}
  test:
    name: Functional tests
    runs-on: ubuntu-latest
    needs: [build]
    env:
      VAULT_VERSION: "1.1.3"
      VAULT_TOKEN: "root"
      VAULT_ADDR: "http://127.0.0.1:8200"
    steps:
      - name: Install rustup
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y --default-toolchain 1.47.0
      - name: Check out code
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: sops-linux-${{ github.sha }}
      - name: Move SOPS binary
        run: mv sops-linux-${{ github.sha }} ./functional-tests/sops
      - name: Make SOPS binary executable
        run: chmod +x ./functional-tests/sops
      - name: Download Vault
        run: curl -O "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip" && sudo unzip vault_${VAULT_VERSION}_linux_amd64.zip -d /usr/local/bin/
      - name: Start Vault server
        run: vault server -dev -dev-root-token-id="$VAULT_TOKEN" &
      - name: Enable Vault KV
        run: vault secrets enable -version=1 kv
      - name: Import test GPG keys
        run: for i in 1 2 3 4 5; do gpg --import pgp/sops_functional_tests_key.asc && break || sleep 15; done
      - name: Run tests
        run: cargo test
        working-directory: ./functional-tests
