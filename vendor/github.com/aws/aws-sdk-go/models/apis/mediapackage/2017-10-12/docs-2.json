{
  "version" : "2.0",
  "service" : "AWS Elemental MediaPackage",
  "operations" : {
    "CreateChannel" : "Creates a new Channel.",
    "CreateOriginEndpoint" : "Creates a new OriginEndpoint record.",
    "DeleteChannel" : "Deletes an existing Channel.",
    "DeleteOriginEndpoint" : "Deletes an existing OriginEndpoint.",
    "DescribeChannel" : "Gets details about a Channel.",
    "DescribeOriginEndpoint" : "Gets details about an existing OriginEndpoint.",
    "ListChannels" : "Returns a collection of Channels.",
    "ListOriginEndpoints" : "Returns a collection of OriginEndpoint records.",
    "ListTagsForResource" : null,
    "RotateChannelCredentials" : "Changes the Channel's first IngestEndpoint's username and password. WARNING - This API is deprecated. Please use RotateIngestEndpointCredentials instead",
    "RotateIngestEndpointCredentials" : "Rotate the IngestEndpoint's username and password, as specified by the IngestEndpoint's id.",
    "TagResource" : null,
    "UntagResource" : null,
    "UpdateChannel" : "Updates an existing Channel.",
    "UpdateOriginEndpoint" : "Updates an existing OriginEndpoint."
  },
  "shapes" : {
    "AdMarkers" : {
      "base" : null,
      "refs" : {
        "HlsManifest$AdMarkers" : "This setting controls how ad markers are included in the packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers from the output.\n\"PASSTHROUGH\" causes the manifest to contain a copy of the SCTE-35 ad\nmarkers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates ad markers and blackout tags based on SCTE-35\nmessages in the input source.\n",
        "HlsManifestCreateOrUpdateParameters$AdMarkers" : "This setting controls how ad markers are included in the packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers from the output.\n\"PASSTHROUGH\" causes the manifest to contain a copy of the SCTE-35 ad\nmarkers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates ad markers and blackout tags based on SCTE-35\nmessages in the input source.\n",
        "HlsPackage$AdMarkers" : "This setting controls how ad markers are included in the packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers from the output.\n\"PASSTHROUGH\" causes the manifest to contain a copy of the SCTE-35 ad\nmarkers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates ad markers and blackout tags based on SCTE-35\nmessages in the input source.\n"
      }
    },
    "Channel" : {
      "base" : "A Channel resource configuration.",
      "refs" : {
        "__listOfChannel$member" : null
      }
    },
    "ChannelCreateParameters" : {
      "base" : "Configuration parameters for a new Channel.",
      "refs" : { }
    },
    "ChannelList" : {
      "base" : "A collection of Channel records.",
      "refs" : { }
    },
    "ChannelUpdateParameters" : {
      "base" : "Configuration parameters for updating an existing Channel.",
      "refs" : { }
    },
    "CmafEncryption" : {
      "base" : "A Common Media Application Format (CMAF) encryption configuration.",
      "refs" : {
        "CmafPackage$Encryption" : null,
        "CmafPackageCreateOrUpdateParameters$Encryption" : null
      }
    },
    "CmafPackage" : {
      "base" : "A Common Media Application Format (CMAF) packaging configuration.",
      "refs" : {
        "OriginEndpoint$CmafPackage" : null
      }
    },
    "CmafPackageCreateOrUpdateParameters" : {
      "base" : "A Common Media Application Format (CMAF) packaging configuration.",
      "refs" : {
        "OriginEndpointCreateParameters$CmafPackage" : null,
        "OriginEndpointUpdateParameters$CmafPackage" : null
      }
    },
    "DashEncryption" : {
      "base" : "A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.",
      "refs" : {
        "DashPackage$Encryption" : null
      }
    },
    "DashPackage" : {
      "base" : "A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.",
      "refs" : {
        "OriginEndpoint$DashPackage" : null,
        "OriginEndpointCreateParameters$DashPackage" : null,
        "OriginEndpointUpdateParameters$DashPackage" : null
      }
    },
    "EncryptionMethod" : {
      "base" : null,
      "refs" : {
        "HlsEncryption$EncryptionMethod" : "The encryption method to use."
      }
    },
    "HlsEncryption" : {
      "base" : "An HTTP Live Streaming (HLS) encryption configuration.",
      "refs" : {
        "HlsPackage$Encryption" : null
      }
    },
    "HlsIngest" : {
      "base" : "An HTTP Live Streaming (HLS) ingest resource configuration.",
      "refs" : {
        "Channel$HlsIngest" : null
      }
    },
    "HlsManifest" : {
      "base" : "A HTTP Live Streaming (HLS) manifest configuration.",
      "refs" : {
        "__listOfHlsManifest$member" : null
      }
    },
    "HlsManifestCreateOrUpdateParameters" : {
      "base" : "A HTTP Live Streaming (HLS) manifest configuration.",
      "refs" : {
        "__listOfHlsManifestCreateOrUpdateParameters$member" : null
      }
    },
    "HlsPackage" : {
      "base" : "An HTTP Live Streaming (HLS) packaging configuration.",
      "refs" : {
        "OriginEndpoint$HlsPackage" : null,
        "OriginEndpointCreateParameters$HlsPackage" : null,
        "OriginEndpointUpdateParameters$HlsPackage" : null
      }
    },
    "IngestEndpoint" : {
      "base" : "An endpoint for ingesting source content for a Channel.",
      "refs" : {
        "__listOfIngestEndpoint$member" : null
      }
    },
    "ManifestLayout" : {
      "base" : null,
      "refs" : {
        "DashPackage$ManifestLayout" : "Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level."
      }
    },
    "MssEncryption" : {
      "base" : "A Microsoft Smooth Streaming (MSS) encryption configuration.",
      "refs" : {
        "MssPackage$Encryption" : null
      }
    },
    "MssPackage" : {
      "base" : "A Microsoft Smooth Streaming (MSS) packaging configuration.",
      "refs" : {
        "OriginEndpoint$MssPackage" : null,
        "OriginEndpointCreateParameters$MssPackage" : null,
        "OriginEndpointUpdateParameters$MssPackage" : null
      }
    },
    "OriginEndpoint" : {
      "base" : "An OriginEndpoint resource configuration.",
      "refs" : {
        "__listOfOriginEndpoint$member" : null
      }
    },
    "OriginEndpointCreateParameters" : {
      "base" : "Configuration parameters for a new OriginEndpoint.",
      "refs" : { }
    },
    "OriginEndpointList" : {
      "base" : "A collection of OriginEndpoint records.",
      "refs" : { }
    },
    "OriginEndpointUpdateParameters" : {
      "base" : "Configuration parameters for updating an existing OriginEndpoint.",
      "refs" : { }
    },
    "PlaylistType" : {
      "base" : null,
      "refs" : {
        "HlsManifest$PlaylistType" : "The HTTP Live Streaming (HLS) playlist type.\nWhen either \"EVENT\" or \"VOD\" is specified, a corresponding EXT-X-PLAYLIST-TYPE\nentry will be included in the media playlist.\n",
        "HlsManifestCreateOrUpdateParameters$PlaylistType" : "The HTTP Live Streaming (HLS) playlist type.\nWhen either \"EVENT\" or \"VOD\" is specified, a corresponding EXT-X-PLAYLIST-TYPE\nentry will be included in the media playlist.\n",
        "HlsPackage$PlaylistType" : "The HTTP Live Streaming (HLS) playlist type.\nWhen either \"EVENT\" or \"VOD\" is specified, a corresponding EXT-X-PLAYLIST-TYPE\nentry will be included in the media playlist.\n"
      }
    },
    "Profile" : {
      "base" : null,
      "refs" : {
        "DashPackage$Profile" : "The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled."
      }
    },
    "SegmentTemplateFormat" : {
      "base" : null,
      "refs" : {
        "DashPackage$SegmentTemplateFormat" : "Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs."
      }
    },
    "SpekeKeyProvider" : {
      "base" : "A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.",
      "refs" : {
        "CmafEncryption$SpekeKeyProvider" : null,
        "DashEncryption$SpekeKeyProvider" : null,
        "HlsEncryption$SpekeKeyProvider" : null,
        "MssEncryption$SpekeKeyProvider" : null
      }
    },
    "StreamOrder" : {
      "base" : null,
      "refs" : {
        "StreamSelection$StreamOrder" : "A directive that determines the order of streams in the output."
      }
    },
    "StreamSelection" : {
      "base" : "A StreamSelection configuration.",
      "refs" : {
        "CmafPackage$StreamSelection" : null,
        "CmafPackageCreateOrUpdateParameters$StreamSelection" : null,
        "DashPackage$StreamSelection" : null,
        "HlsPackage$StreamSelection" : null,
        "MssPackage$StreamSelection" : null
      }
    },
    "Tags" : {
      "base" : "A collection of tags associated with a resource",
      "refs" : {
        "Channel$Tags" : null,
        "ChannelCreateParameters$Tags" : null,
        "OriginEndpoint$Tags" : null,
        "OriginEndpointCreateParameters$Tags" : null
      }
    },
    "TagsModel" : {
      "base" : null,
      "refs" : { }
    },
    "__PeriodTriggersElement" : {
      "base" : null,
      "refs" : {
        "__listOf__PeriodTriggersElement$member" : null
      }
    },
    "__boolean" : {
      "base" : null,
      "refs" : {
        "HlsEncryption$RepeatExtXKey" : "When enabled, the EXT-X-KEY tag will be repeated in output manifests.",
        "HlsManifest$IncludeIframeOnlyStream" : "When enabled, an I-Frame only stream will be included in the output.",
        "HlsManifestCreateOrUpdateParameters$IncludeIframeOnlyStream" : "When enabled, an I-Frame only stream will be included in the output.",
        "HlsPackage$IncludeIframeOnlyStream" : "When enabled, an I-Frame only stream will be included in the output.",
        "HlsPackage$UseAudioRenditionGroup" : "When enabled, audio streams will be placed in rendition groups in the output."
      }
    },
    "__integer" : {
      "base" : null,
      "refs" : {
        "CmafEncryption$KeyRotationIntervalSeconds" : "Time (in seconds) between each encryption key rotation.",
        "CmafPackage$SegmentDurationSeconds" : "Duration (in seconds) of each segment. Actual segments will be\nrounded to the nearest multiple of the source segment duration.\n",
        "CmafPackageCreateOrUpdateParameters$SegmentDurationSeconds" : "Duration (in seconds) of each segment. Actual segments will be\nrounded to the nearest multiple of the source segment duration.\n",
        "DashEncryption$KeyRotationIntervalSeconds" : "Time (in seconds) between each encryption key rotation.",
        "DashPackage$ManifestWindowSeconds" : "Time window (in seconds) contained in each manifest.",
        "DashPackage$MinBufferTimeSeconds" : "Minimum duration (in seconds) that a player will buffer media before starting the presentation.",
        "DashPackage$MinUpdatePeriodSeconds" : "Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).",
        "DashPackage$SegmentDurationSeconds" : "Duration (in seconds) of each segment. Actual segments will be\nrounded to the nearest multiple of the source segment duration.\n",
        "DashPackage$SuggestedPresentationDelaySeconds" : "Duration (in seconds) to delay live content before presentation.",
        "HlsEncryption$KeyRotationIntervalSeconds" : "Interval (in seconds) between each encryption key rotation.",
        "HlsManifest$PlaylistWindowSeconds" : "Time window (in seconds) contained in each parent manifest.",
        "HlsManifest$ProgramDateTimeIntervalSeconds" : "The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag\ninserted into manifests. Additionally, when an interval is specified\nID3Timed Metadata messages will be generated every 5 seconds using the\ningest time of the content.\nIf the interval is not specified, or set to 0, then\nno EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no\nID3Timed Metadata messages will be generated. Note that irrespective\nof this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,\nit will be passed through to HLS output.\n",
        "HlsManifestCreateOrUpdateParameters$PlaylistWindowSeconds" : "Time window (in seconds) contained in each parent manifest.",
        "HlsManifestCreateOrUpdateParameters$ProgramDateTimeIntervalSeconds" : "The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag\ninserted into manifests. Additionally, when an interval is specified\nID3Timed Metadata messages will be generated every 5 seconds using the\ningest time of the content.\nIf the interval is not specified, or set to 0, then\nno EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no\nID3Timed Metadata messages will be generated. Note that irrespective\nof this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,\nit will be passed through to HLS output.\n",
        "HlsPackage$PlaylistWindowSeconds" : "Time window (in seconds) contained in each parent manifest.",
        "HlsPackage$ProgramDateTimeIntervalSeconds" : "The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag\ninserted into manifests. Additionally, when an interval is specified\nID3Timed Metadata messages will be generated every 5 seconds using the\ningest time of the content.\nIf the interval is not specified, or set to 0, then\nno EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no\nID3Timed Metadata messages will be generated. Note that irrespective\nof this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,\nit will be passed through to HLS output.\n",
        "HlsPackage$SegmentDurationSeconds" : "Duration (in seconds) of each fragment. Actual fragments will be\nrounded to the nearest multiple of the source fragment duration.\n",
        "MssPackage$ManifestWindowSeconds" : "The time window (in seconds) contained in each manifest.",
        "MssPackage$SegmentDurationSeconds" : "The duration (in seconds) of each segment.",
        "OriginEndpoint$StartoverWindowSeconds" : "Maximum duration (seconds) of content to retain for startover playback.\nIf not specified, startover playback will be disabled for the OriginEndpoint.\n",
        "OriginEndpoint$TimeDelaySeconds" : "Amount of delay (seconds) to enforce on the playback of live content.\nIf not specified, there will be no time delay in effect for the OriginEndpoint.\n",
        "OriginEndpointCreateParameters$StartoverWindowSeconds" : "Maximum duration (seconds) of content to retain for startover playback.\nIf not specified, startover playback will be disabled for the OriginEndpoint.\n",
        "OriginEndpointCreateParameters$TimeDelaySeconds" : "Amount of delay (seconds) to enforce on the playback of live content.\nIf not specified, there will be no time delay in effect for the OriginEndpoint.\n",
        "OriginEndpointUpdateParameters$StartoverWindowSeconds" : "Maximum duration (in seconds) of content to retain for startover playback.\nIf not specified, startover playback will be disabled for the OriginEndpoint.\n",
        "OriginEndpointUpdateParameters$TimeDelaySeconds" : "Amount of delay (in seconds) to enforce on the playback of live content.\nIf not specified, there will be no time delay in effect for the OriginEndpoint.\n",
        "StreamSelection$MaxVideoBitsPerSecond" : "The maximum video bitrate (bps) to include in output.",
        "StreamSelection$MinVideoBitsPerSecond" : "The minimum video bitrate (bps) to include in output."
      }
    },
    "__listOfChannel" : {
      "base" : null,
      "refs" : {
        "ChannelList$Channels" : "A list of Channel records."
      }
    },
    "__listOfHlsManifest" : {
      "base" : null,
      "refs" : {
        "CmafPackage$HlsManifests" : "A list of HLS manifest configurations"
      }
    },
    "__listOfHlsManifestCreateOrUpdateParameters" : {
      "base" : null,
      "refs" : {
        "CmafPackageCreateOrUpdateParameters$HlsManifests" : "A list of HLS manifest configurations"
      }
    },
    "__listOfIngestEndpoint" : {
      "base" : null,
      "refs" : {
        "HlsIngest$IngestEndpoints" : "A list of endpoints to which the source stream should be sent."
      }
    },
    "__listOfOriginEndpoint" : {
      "base" : null,
      "refs" : {
        "OriginEndpointList$OriginEndpoints" : "A list of OriginEndpoint records."
      }
    },
    "__listOf__PeriodTriggersElement" : {
      "base" : null,
      "refs" : {
        "DashPackage$PeriodTriggers" : "A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)\nMedia Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not\nbe partitioned into more than one period. If the list contains \"ADS\", new periods will be created where\nthe Channel source contains SCTE-35 ad markers.\n"
      }
    },
    "__listOf__string" : {
      "base" : null,
      "refs" : {
        "OriginEndpoint$Whitelist" : "A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.",
        "OriginEndpointCreateParameters$Whitelist" : "A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.",
        "OriginEndpointUpdateParameters$Whitelist" : "A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.",
        "SpekeKeyProvider$SystemIds" : "The system IDs to include in key requests."
      }
    },
    "__mapOf__string" : {
      "base" : null,
      "refs" : {
        "TagsModel$Tags" : null
      }
    },
    "__string" : {
      "base" : null,
      "refs" : {
        "Channel$Arn" : "The Amazon Resource Name (ARN) assigned to the Channel.",
        "Channel$Description" : "A short text description of the Channel.",
        "Channel$Id" : "The ID of the Channel.",
        "ChannelCreateParameters$Description" : "A short text description of the Channel.",
        "ChannelCreateParameters$Id" : "The ID of the Channel. The ID must be unique within the region and it\ncannot be changed after a Channel is created.\n",
        "ChannelList$NextToken" : "A token that can be used to resume pagination from the end of the collection.",
        "ChannelUpdateParameters$Description" : "A short text description of the Channel.",
        "CmafPackage$SegmentPrefix" : "An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.",
        "CmafPackageCreateOrUpdateParameters$SegmentPrefix" : "An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.",
        "HlsEncryption$ConstantInitializationVector" : "A constant initialization vector for encryption (optional).\nWhen not specified the initialization vector will be periodically rotated.\n",
        "HlsManifest$Id" : "The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.",
        "HlsManifest$ManifestName" : "An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.",
        "HlsManifest$Url" : "The URL of the packaged OriginEndpoint for consumption.",
        "HlsManifestCreateOrUpdateParameters$Id" : "The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.",
        "HlsManifestCreateOrUpdateParameters$ManifestName" : "An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.",
        "IngestEndpoint$Id" : "The system generated unique identifier for the IngestEndpoint",
        "IngestEndpoint$Password" : "The system generated password for ingest authentication.",
        "IngestEndpoint$Url" : "The ingest URL to which the source stream should be sent.",
        "IngestEndpoint$Username" : "The system generated username for ingest authentication.",
        "OriginEndpoint$Arn" : "The Amazon Resource Name (ARN) assigned to the OriginEndpoint.",
        "OriginEndpoint$ChannelId" : "The ID of the Channel the OriginEndpoint is associated with.",
        "OriginEndpoint$Description" : "A short text description of the OriginEndpoint.",
        "OriginEndpoint$Id" : "The ID of the OriginEndpoint.",
        "OriginEndpoint$ManifestName" : "A short string appended to the end of the OriginEndpoint URL.",
        "OriginEndpoint$Url" : "The URL of the packaged OriginEndpoint for consumption.",
        "OriginEndpointCreateParameters$ChannelId" : "The ID of the Channel that the OriginEndpoint will be associated with.\nThis cannot be changed after the OriginEndpoint is created.\n",
        "OriginEndpointCreateParameters$Description" : "A short text description of the OriginEndpoint.",
        "OriginEndpointCreateParameters$Id" : "The ID of the OriginEndpoint.  The ID must be unique within the region\nand it cannot be changed after the OriginEndpoint is created.\n",
        "OriginEndpointCreateParameters$ManifestName" : "A short string that will be used as the filename of the OriginEndpoint URL (defaults to \"index\").",
        "OriginEndpointList$NextToken" : "A token that can be used to resume pagination from the end of the collection.",
        "OriginEndpointUpdateParameters$Description" : "A short text description of the OriginEndpoint.",
        "OriginEndpointUpdateParameters$ManifestName" : "A short string that will be appended to the end of the Endpoint URL.",
        "SpekeKeyProvider$CertificateArn" : "An Amazon Resource Name (ARN) of a Certificate Manager certificate\nthat MediaPackage will use for enforcing secure end-to-end data\ntransfer with the key provider service.\n",
        "SpekeKeyProvider$ResourceId" : "The resource ID to include in key requests.",
        "SpekeKeyProvider$RoleArn" : "An Amazon Resource Name (ARN) of an IAM role that AWS Elemental\nMediaPackage will assume when accessing the key provider service.\n",
        "SpekeKeyProvider$Url" : "The URL of the external key provider service.",
        "Tags$member" : null,
        "__listOf__string$member" : null,
        "__mapOf__string$member" : null
      }
    }
  }
}