{
  "version": "2.0",
  "service": "<p>AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur.</p>",
  "operations": {
    "BatchPutMessage": "<p>Sends a set of messages to the AWS IoT Events system. Each message payload will be transformed into the input you specify (<code>inputName</code>) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed is not guaranteed--you must send messages one at a time and wait for a successful response to guarantee ordering. </p>",
    "BatchUpdateDetector": "<p>Updates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model.</p>",
    "DescribeDetector": "<p>Returns information about the specified detector (instance).</p>",
    "ListDetectors": "<p>Lists detectors (the instances of a detector model).</p>"
  },
  "shapes": {
    "BatchPutMessageErrorEntries": {
      "base": null,
      "refs": {
        "BatchPutMessageResponse$BatchPutMessageErrorEntries": "<p>A list of any errors encountered when sending the messages.</p>"
      }
    },
    "BatchPutMessageErrorEntry": {
      "base": "<p>Contains informations about the errors encountered.</p>",
      "refs": {
        "BatchPutMessageErrorEntries$member": null
      }
    },
    "BatchPutMessageRequest": {
      "base": null,
      "refs": {
      }
    },
    "BatchPutMessageResponse": {
      "base": null,
      "refs": {
      }
    },
    "BatchUpdateDetectorErrorEntries": {
      "base": null,
      "refs": {
        "BatchUpdateDetectorResponse$batchUpdateDetectorErrorEntries": "<p>A list of those detector updates which resulted in errors. (The specific update did not occur if an error is listed here.)</p>"
      }
    },
    "BatchUpdateDetectorErrorEntry": {
      "base": "<p>Information about the error which occured when attempting to update a detector.</p>",
      "refs": {
        "BatchUpdateDetectorErrorEntries$member": null
      }
    },
    "BatchUpdateDetectorRequest": {
      "base": null,
      "refs": {
      }
    },
    "BatchUpdateDetectorResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeDetectorRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeDetectorResponse": {
      "base": null,
      "refs": {
      }
    },
    "Detector": {
      "base": "<p>Information about the detector (instance).</p>",
      "refs": {
        "DescribeDetectorResponse$detector": "<p>Information about the detector (instance).</p>"
      }
    },
    "DetectorModelName": {
      "base": null,
      "refs": {
        "DescribeDetectorRequest$detectorModelName": "<p>The name of the detector model whose detectors (instances) you want information about.</p>",
        "Detector$detectorModelName": "<p>The name of the detector model that created this detector (instance).</p>",
        "DetectorSummary$detectorModelName": "<p>The name of the detector model that created this detector (instance).</p>",
        "ListDetectorsRequest$detectorModelName": "<p>The name of the detector model whose instances you want to list.</p>",
        "UpdateDetectorRequest$detectorModelName": "<p>The name of the detector model that created the detectors (instances).</p>"
      }
    },
    "DetectorModelVersion": {
      "base": null,
      "refs": {
        "Detector$detectorModelVersion": "<p>The version of the detector model that created this detector (instance).</p>",
        "DetectorSummary$detectorModelVersion": "<p>The version of the detector model that created this detector (instance).</p>"
      }
    },
    "DetectorState": {
      "base": "<p>Information about the current state of the detector instance.</p>",
      "refs": {
        "Detector$state": "<p>The current state of the detector (instance).</p>"
      }
    },
    "DetectorStateDefinition": {
      "base": "<p>The new state, variable values and timer settings of the detector (instance).</p>",
      "refs": {
        "UpdateDetectorRequest$state": "<p>The new state, variable values, and timer settings of the detector (instance).</p>"
      }
    },
    "DetectorStateSummary": {
      "base": "<p>Information about the detector state.</p>",
      "refs": {
        "DetectorSummary$state": "<p>The current state of the detector (instance).</p>"
      }
    },
    "DetectorSummaries": {
      "base": null,
      "refs": {
        "ListDetectorsResponse$detectorSummaries": "<p>A list of summary information about the detectors (instances).</p>"
      }
    },
    "DetectorSummary": {
      "base": "<p>Information about the detector (instance).</p>",
      "refs": {
        "DetectorSummaries$member": null
      }
    },
    "ErrorCode": {
      "base": null,
      "refs": {
        "BatchPutMessageErrorEntry$errorCode": "<p>The code associated with the error.</p>",
        "BatchUpdateDetectorErrorEntry$errorCode": "<p>The code of the error.</p>"
      }
    },
    "ErrorMessage": {
      "base": null,
      "refs": {
        "BatchPutMessageErrorEntry$errorMessage": "<p>More information about the error.</p>",
        "BatchUpdateDetectorErrorEntry$errorMessage": "<p>A message describing the error.</p>"
      }
    },
    "InputName": {
      "base": null,
      "refs": {
        "Message$inputName": "<p>The name of the input into which the message payload will be transformed.</p>"
      }
    },
    "InternalFailureException": {
      "base": "<p>An internal failure occured.</p>",
      "refs": {
      }
    },
    "InvalidRequestException": {
      "base": "<p>The request was invalid.</p>",
      "refs": {
      }
    },
    "KeyValue": {
      "base": null,
      "refs": {
        "DescribeDetectorRequest$keyValue": "<p>A filter used to limit results to detectors (instances) created because of the given key ID.</p>",
        "Detector$keyValue": "<p>The value of the key (identifying the device or system) that caused the creation of this detector (instance).</p>",
        "DetectorSummary$keyValue": "<p>The value of the key (identifying the device or system) that caused the creation of this detector (instance).</p>",
        "UpdateDetectorRequest$keyValue": "<p>The value of the input key attribute (identifying the device or system) that caused the creation of this detector (instance).</p>"
      }
    },
    "ListDetectorsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListDetectorsResponse": {
      "base": null,
      "refs": {
      }
    },
    "MaxResults": {
      "base": null,
      "refs": {
        "ListDetectorsRequest$maxResults": "<p>The maximum number of results to return at one time.</p>"
      }
    },
    "Message": {
      "base": "<p>Information about a message.</p>",
      "refs": {
        "Messages$member": null
      }
    },
    "MessageId": {
      "base": null,
      "refs": {
        "BatchPutMessageErrorEntry$messageId": "<p>The ID of the message that caused the error. (See the value corresponding to the <code>messageId</code> key in the <code>message</code> object.)</p>",
        "BatchUpdateDetectorErrorEntry$messageId": "<p>The \"messageId\" of the update request that caused the error. (The value of the <code>messageId</code> in the update request <code>Detector</code> object.)</p>",
        "Message$messageId": "<p>The ID you wish to assign to the message. Each \"messageId\" must be unique within each batch sent.</p>",
        "UpdateDetectorRequest$messageId": "<p>The ID you wish to assign to the detector update \"message\". Each \"messageId\" must be unique within each batch sent.</p>"
      }
    },
    "Messages": {
      "base": null,
      "refs": {
        "BatchPutMessageRequest$messages": "<p>The list of messages to send. Each message has format: <code>'{ \"messageId\": \"string\", \"inputName\": \"string\", \"payload\": \"string\"}'</code>.</p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListDetectorsRequest$nextToken": "<p>The token for the next set of results.</p>",
        "ListDetectorsResponse$nextToken": "<p>A token to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>"
      }
    },
    "Payload": {
      "base": null,
      "refs": {
        "Message$payload": "<p>The payload of the message. This can be a JSON string or a Base-64-encoded string representing binary data (in which case you must decode it).</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The resource was not found.</p>",
      "refs": {
      }
    },
    "Seconds": {
      "base": null,
      "refs": {
        "TimerDefinition$seconds": "<p>The new setting of the timer (the number of seconds before the timer elapses).</p>"
      }
    },
    "ServiceUnavailableException": {
      "base": "<p>The service is currently unavailable.</p>",
      "refs": {
      }
    },
    "StateName": {
      "base": null,
      "refs": {
        "DetectorState$stateName": "<p>The name of the state.</p>",
        "DetectorStateDefinition$stateName": "<p>The name of the new state of the detector (instance).</p>",
        "DetectorStateSummary$stateName": "<p>The name of the state.</p>",
        "ListDetectorsRequest$stateName": "<p>A filter that limits results to those detectors (instances) in the given state.</p>"
      }
    },
    "ThrottlingException": {
      "base": "<p>The request could not be completed due to throttling.</p>",
      "refs": {
      }
    },
    "Timer": {
      "base": "<p>The current state of a timer.</p>",
      "refs": {
        "Timers$member": null
      }
    },
    "TimerDefinition": {
      "base": "<p>The new setting of a timer.</p>",
      "refs": {
        "TimerDefinitions$member": null
      }
    },
    "TimerDefinitions": {
      "base": null,
      "refs": {
        "DetectorStateDefinition$timers": "<p>The new values of the detector's timers. Any timer whose value is not specified will be cleared and its timeout event will not occur.</p>"
      }
    },
    "TimerName": {
      "base": null,
      "refs": {
        "Timer$name": "<p>The name of the timer.</p>",
        "TimerDefinition$name": "<p>The name of the timer.</p>"
      }
    },
    "Timers": {
      "base": null,
      "refs": {
        "DetectorState$timers": "<p>The current state of the detector's timers.</p>"
      }
    },
    "Timestamp": {
      "base": null,
      "refs": {
        "Detector$creationTime": "<p>The time the detector (instance) was created.</p>",
        "Detector$lastUpdateTime": "<p>The time the detector (instance) was last updated.</p>",
        "DetectorSummary$creationTime": "<p>The time the detector (instance) was created.</p>",
        "DetectorSummary$lastUpdateTime": "<p>The time the detector (instance) was last updated.</p>",
        "Timer$timestamp": "<p>The number of seconds which have elapsed on the timer.</p>"
      }
    },
    "UpdateDetectorRequest": {
      "base": "<p>Information used to update the detector (instance).</p>",
      "refs": {
        "UpdateDetectorRequests$member": null
      }
    },
    "UpdateDetectorRequests": {
      "base": null,
      "refs": {
        "BatchUpdateDetectorRequest$detectors": "<p>The list of detectors (instances) to be updated, along with the values to be updated.</p>"
      }
    },
    "Variable": {
      "base": "<p>The current state of the variable.</p>",
      "refs": {
        "Variables$member": null
      }
    },
    "VariableDefinition": {
      "base": "<p>The new value of the variable.</p>",
      "refs": {
        "VariableDefinitions$member": null
      }
    },
    "VariableDefinitions": {
      "base": null,
      "refs": {
        "DetectorStateDefinition$variables": "<p>The new values of the detector's variables. Any variable whose value is not specified will be cleared.</p>"
      }
    },
    "VariableName": {
      "base": null,
      "refs": {
        "Variable$name": "<p>The name of the variable.</p>",
        "VariableDefinition$name": "<p>The name of the variable.</p>"
      }
    },
    "VariableValue": {
      "base": null,
      "refs": {
        "Variable$value": "<p>The current value of the variable.</p>",
        "VariableDefinition$value": "<p>The new value of the variable.</p>"
      }
    },
    "Variables": {
      "base": null,
      "refs": {
        "DetectorState$variables": "<p>The current state of the detector's variables.</p>"
      }
    },
    "errorMessage": {
      "base": null,
      "refs": {
        "InternalFailureException$message": "<p>The message for the exception.</p>",
        "InvalidRequestException$message": "<p>The message for the exception.</p>",
        "ResourceNotFoundException$message": "<p>The message for the exception.</p>",
        "ServiceUnavailableException$message": "<p>The message for the exception.</p>",
        "ThrottlingException$message": "<p>The message for the exception.</p>"
      }
    }
  }
}
