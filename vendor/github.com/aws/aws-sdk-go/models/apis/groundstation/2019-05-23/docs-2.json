{
  "version": "2.0",
  "service": "<p>Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that\n      enables you to control satellite communications, downlink and process satellite data, and\n      scale your satellite operations efficiently and cost-effectively without having\n      to build or manage your own ground station infrastructure.</p>",
  "operations": {
    "CancelContact": "<p>Cancels a contact with a specified contact ID.</p>",
    "CreateConfig": "<p>Creates a <code>Config</code> with the specified <code>configData</code> parameters.</p>\n         <p>Only one type of <code>configData</code> can be specified.</p>",
    "CreateDataflowEndpointGroup": "<p>Creates a <code>DataflowEndpoint</code> group containing the specified list of <code>DataflowEndpoint</code> objects.</p>\n         <p>The <code>name</code> field in each endpoint is used in your mission profile <code>DataflowEndpointConfig</code> \n         to specify which endpoints to use during a contact.</p> \n         <p>When a contact uses multiple <code>DataflowEndpointConfig</code> objects, each <code>Config</code> \n         must match a <code>DataflowEndpoint</code> in the same group.</p>",
    "CreateMissionProfile": "<p>Creates a mission profile.</p>\n         <p>\n            <code>dataflowEdges</code> is a list of lists of strings. Each lower level list of strings\n         has two elements: a <i>from ARN</i> and a <i>to ARN</i>.</p>",
    "DeleteConfig": "<p>Deletes a <code>Config</code>.</p>",
    "DeleteDataflowEndpointGroup": "<p>Deletes a dataflow endpoint group.</p>",
    "DeleteMissionProfile": "<p>Deletes a mission profile.</p>",
    "DescribeContact": "<p>Describes an existing contact.</p>",
    "GetConfig": "<p>Returns <code>Config</code> information.</p>\n         <p>Only one <code>Config</code> response can be returned.</p>",
    "GetDataflowEndpointGroup": "<p>Returns the dataflow endpoint group.</p>",
    "GetMissionProfile": "<p>Returns a mission profile.</p>",
    "ListConfigs": "<p>Returns a list of <code>Config</code> objects.</p>",
    "ListContacts": "<p>Returns a list of contacts.</p>\n         <p>If <code>statusList</code> contains AVAILABLE, the request must include\n      <code>groundstation</code>, <code>missionprofileArn</code>, and <code>satelliteArn</code>.\n      </p>",
    "ListDataflowEndpointGroups": "<p>Returns a list of <code>DataflowEndpoint</code> groups.</p>",
    "ListMissionProfiles": "<p>Returns a list of mission profiles.</p>",
    "ReserveContact": "<p>Reserves a contact using specified parameters.</p>",
    "UpdateConfig": "<p>Updates the <code>Config</code> used when scheduling contacts.</p>\n         <p>Updating a <code>Config</code> will not update the execution parameters\n         for existing future contacts scheduled with this <code>Config</code>.</p>",
    "UpdateMissionProfile": "<p>Updates a mission profile.</p>\n         <p>Updating a mission profile will not update the execution parameters\n         for existing future contacts.</p>",
    "GetMinuteUsage": "<p>Returns the number of minutes used by account.</p>",
    "GetSatellite": "<p>Returns a satellite.</p>",
    "ListGroundStations": "<p>Returns a list of ground stations. </p>",
    "ListSatellites": "<p>Returns a list of satellites.</p>",
    "ListTagsForResource": "<p>Returns a list of tags or a specified resource.</p>",
    "TagResource": "<p>Assigns a tag to a resource.</p>",
    "UntagResource": "<p>Deassigns a resource tag.</p>"
  },
  "shapes": {
    "AngleUnits": {
      "base": null,
      "refs": { }
    },
    "AntennaDownlinkConfig": {
      "base": "<p>Information about how AWS Ground Station should configure an\n         antenna for downlink during a contact.</p>",
      "refs": {
        "AntennaDownlinkConfig$spectrumConfig": "<p>Object that describes a spectral <code>Config</code>.</p>"
      }
    },
    "AntennaDownlinkDemodDecodeConfig": {
      "base": "<p>Information about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.</p>",
      "refs": {
        "AntennaDownlinkDemodDecodeConfig$decodeConfig": "<p>Information about the decode <code>Config</code>.</p>",
        "AntennaDownlinkDemodDecodeConfig$demodulationConfig": "<p>Information about the demodulation <code>Config</code>.</p>",
        "AntennaDownlinkDemodDecodeConfig$spectrumConfig": "<p>Information about the spectral <code>Config</code>.</p>"
      }
    },
    "AntennaUplinkConfig": {
      "base": "<p>Information about the uplink <code>Config</code> of an antenna.</p>",
      "refs": {
        "AntennaUplinkConfig$spectrumConfig": "<p>Information about the uplink spectral <code>Config</code>.</p>",
        "AntennaUplinkConfig$targetEirp": "<p>EIRP of the target.</p>"
      }
    },
    "BandwidthUnits": {
      "base": null,
      "refs": { }
    },
    "Boolean": {
      "base": null,
      "refs": { }
    },
    "CancelContactRequest": {
      "base": "<p/>",
      "refs": {
        "CancelContactRequest$contactId": "<p>UUID of a contact.</p>"
      }
    },
    "ConfigArn": {
      "base": null,
      "refs": { }
    },
    "ConfigCapabilityType": {
      "base": null,
      "refs": { }
    },
    "ConfigIdResponse": {
      "base": "<p/>",
      "refs": {
        "ConfigIdResponse$configArn": "<p>ARN of a <code>Config</code>.</p>",
        "ConfigIdResponse$configId": "<p>UUID of a <code>Config</code>.</p>",
        "ConfigIdResponse$configType": "<p>Type of a <code>Config</code>.</p>"
      }
    },
    "ConfigList": {
      "base": null,
      "refs": {
        "ConfigList$member": null
      }
    },
    "ConfigListItem": {
      "base": "<p>An item in a list of <code>Config</code> objects.</p>",
      "refs": {
        "ConfigListItem$configArn": "<p>ARN of a <code>Config</code>.</p>",
        "ConfigListItem$configId": "<p>UUID of a <code>Config</code>.</p>",
        "ConfigListItem$configType": "<p>Type of a <code>Config</code>.</p>",
        "ConfigListItem$name": "<p>Name of a <code>Config</code>.</p>"
      }
    },
    "ConfigTypeData": {
      "base": "<p>Object containing the parameters for a <code>Config</code>.</p>\n         <p>See the subtype definitions for what each type of <code>Config</code> contains.</p>",
      "refs": {
        "ConfigTypeData$antennaDownlinkConfig": "<p>Information about how AWS Ground Station should configure an antenna for downlink during a contact.</p>",
        "ConfigTypeData$antennaDownlinkDemodDecodeConfig": "<p>Information about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.</p>",
        "ConfigTypeData$antennaUplinkConfig": "<p>Information about how AWS Ground Station should conﬁgure an antenna for uplink during a contact.</p>",
        "ConfigTypeData$dataflowEndpointConfig": "<p>Information about the dataflow endpoint <code>Config</code>.</p>",
        "ConfigTypeData$trackingConfig": "<p>Object that determines whether tracking should be used during a contact executed with this <code>Config</code> in the mission profile. </p>",
        "ConfigTypeData$uplinkEchoConfig": "<p>Information about an uplink echo <code>Config</code>.</p>\n         <p>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the specified <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code> is used in a contact.</p>"
      }
    },
    "ContactData": {
      "base": "<p>Data describing a contact.</p>",
      "refs": {
        "ContactData$contactId": "<p>UUID of a contact.</p>",
        "ContactData$contactStatus": "<p>Status of a contact.</p>",
        "ContactData$endTime": "<p>End time of a contact.</p>",
        "ContactData$errorMessage": "<p>Error message of a contact.</p>",
        "ContactData$groundStation": "<p>Name of a ground station.</p>",
        "ContactData$maximumElevation": "<p>Maximum elevation angle of a contact.</p>",
        "ContactData$missionProfileArn": "<p>ARN of a mission profile.</p>",
        "ContactData$postPassEndTime": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>",
        "ContactData$prePassStartTime": "<p>Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.</p>",
        "ContactData$satelliteArn": "<p>ARN of a satellite.</p>",
        "ContactData$startTime": "<p>Start time of a contact.</p>",
        "ContactData$tags": "<p>Tags assigned to a contact.</p>"
      }
    },
    "ContactIdResponse": {
      "base": "<p/>",
      "refs": {
        "ContactIdResponse$contactId": "<p>UUID of a contact.</p>"
      }
    },
    "ContactList": {
      "base": null,
      "refs": {
        "ContactList$member": null
      }
    },
    "ContactStatus": {
      "base": null,
      "refs": { }
    },
    "CreateConfigRequest": {
      "base": "<p/>",
      "refs": {
        "CreateConfigRequest$configData": "<p>Parameters of a <code>Config</code>.</p>",
        "CreateConfigRequest$name": "<p>Name of a <code>Config</code>.</p>",
        "CreateConfigRequest$tags": "<p>Tags assigned to a <code>Config</code>.</p>"
      }
    },
    "CreateDataflowEndpointGroupRequest": {
      "base": "<p/>",
      "refs": {
        "CreateDataflowEndpointGroupRequest$endpointDetails": "<p>Endpoint details of each endpoint in the dataflow endpoint group.</p>",
        "CreateDataflowEndpointGroupRequest$tags": "<p>Tags of a dataflow endpoint group.</p>"
      }
    },
    "CreateMissionProfileRequest": {
      "base": "<p/>",
      "refs": {
        "CreateMissionProfileRequest$contactPostPassDurationSeconds": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>",
        "CreateMissionProfileRequest$contactPrePassDurationSeconds": "<p>Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.</p>",
        "CreateMissionProfileRequest$dataflowEdges": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a from <code>Config</code> and a to \n         <code>Config</code>.</p>",
        "CreateMissionProfileRequest$minimumViableContactDurationSeconds": "<p>Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>",
        "CreateMissionProfileRequest$name": "<p>Name of a mission profile.</p>",
        "CreateMissionProfileRequest$tags": "<p>Tags assigned to a mission profile.</p>",
        "CreateMissionProfileRequest$trackingConfigArn": "<p>ARN of a tracking <code>Config</code>.</p>"
      }
    },
    "Criticality": {
      "base": null,
      "refs": { }
    },
    "DataflowEdge": {
      "base": null,
      "refs": {
        "DataflowEdge$member": null
      }
    },
    "DataflowEdgeList": {
      "base": null,
      "refs": {
        "DataflowEdgeList$member": null
      }
    },
    "DataflowEndpoint": {
      "base": "<p>Information about a dataflow endpoint.</p>",
      "refs": {
        "DataflowEndpoint$address": "<p>Socket address of a dataflow endpoint.</p>",
        "DataflowEndpoint$name": "<p>Name of a dataflow endpoint.</p>",
        "DataflowEndpoint$status": "<p>Status of a dataflow endpoint.</p>"
      }
    },
    "DataflowEndpointConfig": {
      "base": "<p>Information about the dataflow endpoint <code>Config</code>.</p>",
      "refs": {
        "DataflowEndpointConfig$dataflowEndpointName": "<p>Name of a dataflow endpoint.</p>"
      }
    },
    "DataflowEndpointGroupArn": {
      "base": null,
      "refs": { }
    },
    "DataflowEndpointGroupIdResponse": {
      "base": "<p/>",
      "refs": {
        "DataflowEndpointGroupIdResponse$dataflowEndpointGroupId": "<p>ID of a dataflow endpoint group.</p>"
      }
    },
    "DataflowEndpointGroupList": {
      "base": null,
      "refs": {
        "DataflowEndpointGroupList$member": null
      }
    },
    "DataflowEndpointListItem": {
      "base": "<p>Item in a list of <code>DataflowEndpoint</code> groups.</p>",
      "refs": {
        "DataflowEndpointListItem$dataflowEndpointGroupArn": "<p>ARN of a dataflow endpoint group.</p>",
        "DataflowEndpointListItem$dataflowEndpointGroupId": "<p>UUID of a dataflow endpoint group.</p>"
      }
    },
    "DecodeConfig": {
      "base": "<p>Information about the decode <code>Config</code>.</p>",
      "refs": {
        "DecodeConfig$unvalidatedJSON": "<p>Unvalidated JSON of a decode <code>Config</code>.</p>"
      }
    },
    "DeleteConfigRequest": {
      "base": "<p/>",
      "refs": {
        "DeleteConfigRequest$configId": "<p>UUID of a <code>Config</code>.</p>",
        "DeleteConfigRequest$configType": "<p>Type of a <code>Config</code>.</p>"
      }
    },
    "DeleteDataflowEndpointGroupRequest": {
      "base": "<p/>",
      "refs": {
        "DeleteDataflowEndpointGroupRequest$dataflowEndpointGroupId": "<p>ID of a dataflow endpoint group.</p>"
      }
    },
    "DeleteMissionProfileRequest": {
      "base": "<p/>",
      "refs": {
        "DeleteMissionProfileRequest$missionProfileId": "<p>UUID of a mission profile.</p>"
      }
    },
    "DemodulationConfig": {
      "base": "<p>Information about the demodulation <code>Config</code>.</p>",
      "refs": {
        "DemodulationConfig$unvalidatedJSON": "<p>Unvalidated JSON of a demodulation <code>Config</code>.</p>"
      }
    },
    "DependencyException": {
      "base": "<p>Dependency encountered an error.</p>",
      "refs": {
        "DependencyException$parameterName": "<p/>"
      }
    },
    "DescribeContactRequest": {
      "base": "<p/>",
      "refs": {
        "DescribeContactRequest$contactId": "<p>UUID of a contact.</p>"
      }
    },
    "DescribeContactResponse": {
      "base": "<p/>",
      "refs": {
        "DescribeContactResponse$contactId": "<p>UUID of a contact.</p>",
        "DescribeContactResponse$contactStatus": "<p>Status of a contact.</p>",
        "DescribeContactResponse$endTime": "<p>End time of a contact.</p>",
        "DescribeContactResponse$errorMessage": "<p>Error message for a contact.</p>",
        "DescribeContactResponse$groundStation": "<p>Ground station for a contact.</p>",
        "DescribeContactResponse$maximumElevation": "<p>Maximum elevation angle of a contact.</p>",
        "DescribeContactResponse$missionProfileArn": "<p>ARN of a mission profile.</p>",
        "DescribeContactResponse$postPassEndTime": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>",
        "DescribeContactResponse$prePassStartTime": "<p>Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.</p>",
        "DescribeContactResponse$satelliteArn": "<p>ARN of a satellite.</p>",
        "DescribeContactResponse$startTime": "<p>Start time of a contact.</p>",
        "DescribeContactResponse$tags": "<p>Tags assigned to a contact.</p>"
      }
    },
    "Double": {
      "base": null,
      "refs": { }
    },
    "DurationInSeconds": {
      "base": null,
      "refs": { }
    },
    "Eirp": {
      "base": "<p>Object that represents EIRP.</p>",
      "refs": {
        "Eirp$units": "<p>Units of an EIRP.</p>",
        "Eirp$value": "<p>Value of an EIRP.</p>"
      }
    },
    "EirpUnits": {
      "base": null,
      "refs": { }
    },
    "Elevation": {
      "base": "<p>Elevation angle of the satellite in the sky during a contact.</p>",
      "refs": {
        "Elevation$unit": "<p>Elevation angle units.</p>",
        "Elevation$value": "<p>Elevation angle value.</p>"
      }
    },
    "EndpointDetails": {
      "base": "<p>Information about the endpoint details.</p>",
      "refs": {
        "EndpointDetails$endpoint": "<p>A dataflow endpoint.</p>",
        "EndpointDetails$securityDetails": "<p>Endpoint security details.</p>"
      }
    },
    "EndpointDetailsList": {
      "base": null,
      "refs": {
        "EndpointDetailsList$member": null
      }
    },
    "EndpointStatus": {
      "base": null,
      "refs": { }
    },
    "Frequency": {
      "base": "<p>Object that describes the frequency.</p>",
      "refs": {
        "Frequency$units": "<p>Frequency units.</p>",
        "Frequency$value": "<p>Frequency value.</p>"
      }
    },
    "FrequencyBandwidth": {
      "base": "<p>Object that describes the frequency bandwidth.</p>",
      "refs": {
        "FrequencyBandwidth$units": "<p>Frequency bandwidth units.</p>",
        "FrequencyBandwidth$value": "<p>Frequency bandwidth value.</p>"
      }
    },
    "FrequencyUnits": {
      "base": null,
      "refs": { }
    },
    "GetConfigRequest": {
      "base": "<p/>",
      "refs": {
        "GetConfigRequest$configId": "<p>UUID of a <code>Config</code>.</p>",
        "GetConfigRequest$configType": "<p>Type of a <code>Config</code>.</p>"
      }
    },
    "GetConfigResponse": {
      "base": "<p/>",
      "refs": {
        "GetConfigResponse$configArn": "<p>ARN of a <code>Config</code>\n         </p>",
        "GetConfigResponse$configData": "<p>Data elements in a <code>Config</code>.</p>",
        "GetConfigResponse$configId": "<p>UUID of a <code>Config</code>.</p>",
        "GetConfigResponse$configType": "<p>Type of a <code>Config</code>.</p>",
        "GetConfigResponse$name": "<p>Name of a <code>Config</code>.</p>",
        "GetConfigResponse$tags": "<p>Tags assigned to a <code>Config</code>.</p>"
      }
    },
    "GetDataflowEndpointGroupRequest": {
      "base": "<p/>",
      "refs": {
        "GetDataflowEndpointGroupRequest$dataflowEndpointGroupId": "<p>UUID of a dataflow endpoint group.</p>"
      }
    },
    "GetDataflowEndpointGroupResponse": {
      "base": "<p/>",
      "refs": {
        "GetDataflowEndpointGroupResponse$dataflowEndpointGroupArn": "<p>ARN of a dataflow endpoint group.</p>",
        "GetDataflowEndpointGroupResponse$dataflowEndpointGroupId": "<p>UUID of a dataflow endpoint group.</p>",
        "GetDataflowEndpointGroupResponse$endpointsDetails": "<p>Details of a dataflow endpoint.</p>",
        "GetDataflowEndpointGroupResponse$tags": "<p>Tags assigned to a dataflow endpoint group.</p>"
      }
    },
    "GetMinuteUsageRequest": {
      "base": "<p/>",
      "refs": {
        "GetMinuteUsageRequest$month": "<p>The month being requested, with a value of 1-12.</p>",
        "GetMinuteUsageRequest$year": "<p>The year being requested, in the format of YYYY.</p>"
      }
    },
    "GetMinuteUsageResponse": {
      "base": "<p/>",
      "refs": {
        "GetMinuteUsageResponse$estimatedMinutesRemaining": "<p>Estimated number of minutes remaining for an account, specific to the month being requested.</p>",
        "GetMinuteUsageResponse$isReservedMinutesCustomer": "<p>Returns whether or not an account has signed up for the reserved minutes pricing plan, specific to the month being requested.</p>",
        "GetMinuteUsageResponse$totalReservedMinuteAllocation": "<p>Total number of reserved minutes allocated, specific to the month being requested.</p>",
        "GetMinuteUsageResponse$totalScheduledMinutes": "<p>Total scheduled minutes for an account, specific to the month being requested.</p>",
        "GetMinuteUsageResponse$upcomingMinutesScheduled": "<p>Upcoming minutes scheduled for an account, specific to the month being requested.</p>"
      }
    },
    "GetMissionProfileRequest": {
      "base": "<p/>",
      "refs": {
        "GetMissionProfileRequest$missionProfileId": "<p>UUID of a mission profile.</p>"
      }
    },
    "GetMissionProfileResponse": {
      "base": "<p/>",
      "refs": {
        "GetMissionProfileResponse$contactPostPassDurationSeconds": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>",
        "GetMissionProfileResponse$contactPrePassDurationSeconds": "<p>Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.</p>",
        "GetMissionProfileResponse$dataflowEdges": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a from <code>Config</code> and a to \n         <code>Config</code>.</p>",
        "GetMissionProfileResponse$minimumViableContactDurationSeconds": "<p>Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>",
        "GetMissionProfileResponse$missionProfileArn": "<p>ARN of a mission profile.</p>",
        "GetMissionProfileResponse$missionProfileId": "<p>ID of a mission profile.</p>",
        "GetMissionProfileResponse$name": "<p>Name of a mission profile.</p>",
        "GetMissionProfileResponse$region": "<p>Region of a mission profile.</p>",
        "GetMissionProfileResponse$tags": "<p>Tags assigned to a mission profile.</p>",
        "GetMissionProfileResponse$trackingConfigArn": "<p>ARN of a tracking <code>Config</code>.</p>"
      }
    },
    "GetSatelliteRequest": {
      "base": "<p/>",
      "refs": {
        "GetSatelliteRequest$satelliteId": "<p>UUID of a satellite.</p>"
      }
    },
    "GetSatelliteResponse": {
      "base": "<p/>",
      "refs": {
        "GetSatelliteResponse$dateCreated": "<p>When a satellite was created.</p>",
        "GetSatelliteResponse$lastUpdated": "<p>When a satellite was last updated.</p>",
        "GetSatelliteResponse$noradSatelliteID": "<p>NORAD satellite ID number.</p>",
        "GetSatelliteResponse$satelliteArn": "<p>ARN of a satellite.</p>",
        "GetSatelliteResponse$satelliteId": "<p>UUID of a satellite.</p>",
        "GetSatelliteResponse$tags": "<p>Tags assigned to a satellite.</p>"
      }
    },
    "GroundStationData": {
      "base": "<p>Information about the ground station data.</p>",
      "refs": {
        "GroundStationData$groundStationId": "<p>ID of a ground station.</p>",
        "GroundStationData$groundStationName": "<p>Name of a ground station.</p>",
        "GroundStationData$region": "<p>Ground station Region.</p>"
      }
    },
    "GroundStationList": {
      "base": null,
      "refs": {
        "GroundStationList$member": null
      }
    },
    "Integer": {
      "base": null,
      "refs": { }
    },
    "InvalidParameterException": {
      "base": "<p>One or more parameters are not valid.</p>",
      "refs": {
        "InvalidParameterException$parameterName": "<p/>"
      }
    },
    "JsonString": {
      "base": null,
      "refs": { }
    },
    "ListConfigsRequest": {
      "base": "<p/>",
      "refs": {
        "ListConfigsRequest$maxResults": "<p>Maximum number of <code>Configs</code> returned.</p>",
        "ListConfigsRequest$nextToken": "<p>Next token returned in the request of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>"
      }
    },
    "ListConfigsResponse": {
      "base": "<p/>",
      "refs": {
        "ListConfigsResponse$configList": "<p>List of <code>Config</code> items.</p>",
        "ListConfigsResponse$nextToken": "<p>Next token returned in the response of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>"
      }
    },
    "ListContactsRequest": {
      "base": "<p/>",
      "refs": {
        "ListContactsRequest$endTime": "<p>End time of a contact.</p>",
        "ListContactsRequest$groundStation": "<p>Name of a ground station.</p>",
        "ListContactsRequest$maxResults": "<p>Maximum number of contacts returned.</p>",
        "ListContactsRequest$missionProfileArn": "<p>ARN of a mission profile.</p>",
        "ListContactsRequest$nextToken": "<p>Next token returned in the request of a previous <code>ListContacts</code> call. Used to get the next page of results.</p>",
        "ListContactsRequest$satelliteArn": "<p>ARN of a satellite.</p>",
        "ListContactsRequest$startTime": "<p>Start time of a contact.</p>",
        "ListContactsRequest$statusList": "<p>Status of a contact reservation.</p>"
      }
    },
    "ListContactsResponse": {
      "base": "<p/>",
      "refs": {
        "ListContactsResponse$contactList": "<p>List of contacts.</p>",
        "ListContactsResponse$nextToken": "<p>Next token returned in the response of a previous <code>ListContacts</code> call. Used to get the next page of results.</p>"
      }
    },
    "ListDataflowEndpointGroupsRequest": {
      "base": "<p/>",
      "refs": {
        "ListDataflowEndpointGroupsRequest$maxResults": "<p>Maximum number of dataflow endpoint groups returned.</p>",
        "ListDataflowEndpointGroupsRequest$nextToken": "<p>Next token returned in the request of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>"
      }
    },
    "ListDataflowEndpointGroupsResponse": {
      "base": "<p/>",
      "refs": {
        "ListDataflowEndpointGroupsResponse$dataflowEndpointGroupList": "<p>A list of dataflow endpoint groups.</p>",
        "ListDataflowEndpointGroupsResponse$nextToken": "<p>Next token returned in the response of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>"
      }
    },
    "ListGroundStationsRequest": {
      "base": "<p/>",
      "refs": {
        "ListGroundStationsRequest$maxResults": "<p>Maximum number of ground stations returned.</p>",
        "ListGroundStationsRequest$nextToken": "<p>Next token that can be supplied in the next call to get the next page of ground stations.</p>"
      }
    },
    "ListGroundStationsResponse": {
      "base": "<p/>",
      "refs": {
        "ListGroundStationsResponse$groundStationList": "<p>List of ground stations.</p>",
        "ListGroundStationsResponse$nextToken": "<p>Next token that can be supplied in the next call to get the next page of ground stations.</p>"
      }
    },
    "ListMissionProfilesRequest": {
      "base": "<p/>",
      "refs": {
        "ListMissionProfilesRequest$maxResults": "<p>Maximum number of mission profiles returned.</p>",
        "ListMissionProfilesRequest$nextToken": "<p>Next token returned in the request of a previous <code>ListMissionProfiles</code> call. Used to get the next page of results.</p>"
      }
    },
    "ListMissionProfilesResponse": {
      "base": "<p/>",
      "refs": {
        "ListMissionProfilesResponse$missionProfileList": "<p>List of mission profiles</p>",
        "ListMissionProfilesResponse$nextToken": "<p>Next token returned in the response of a previous <code>ListMissionProfiles</code> call. Used to get the next page of results.</p>"
      }
    },
    "ListSatellitesRequest": {
      "base": "<p/>",
      "refs": {
        "ListSatellitesRequest$maxResults": "<p>Maximum number of satellites returned.</p>",
        "ListSatellitesRequest$nextToken": "<p>Next token that can be supplied in the next call to get the next page of satellites.</p>"
      }
    },
    "ListSatellitesResponse": {
      "base": "<p/>",
      "refs": {
        "ListSatellitesResponse$nextToken": "<p>Next token that can be supplied in the next call to get the next page of satellites.</p>",
        "ListSatellitesResponse$satellites": "<p>List of satellites.</p>"
      }
    },
    "ListTagsForResourceRequest": {
      "base": "<p/>",
      "refs": {
        "ListTagsForResourceRequest$resourceArn": "<p>ARN of a resource.</p>"
      }
    },
    "ListTagsForResourceResponse": {
      "base": "<p/>",
      "refs": {
        "ListTagsForResourceResponse$tags": "<p>Tags assigned to a resource.</p>"
      }
    },
    "MissionProfileArn": {
      "base": null,
      "refs": { }
    },
    "MissionProfileIdResponse": {
      "base": "<p/>",
      "refs": {
        "MissionProfileIdResponse$missionProfileId": "<p>ID of a mission profile.</p>"
      }
    },
    "MissionProfileList": {
      "base": null,
      "refs": {
        "MissionProfileList$member": null
      }
    },
    "MissionProfileListItem": {
      "base": "<p>Item in a list of mission profiles.</p>",
      "refs": {
        "MissionProfileListItem$missionProfileArn": "<p>ARN of a mission profile.</p>",
        "MissionProfileListItem$missionProfileId": "<p>ID of a mission profile.</p>",
        "MissionProfileListItem$name": "<p>Name of a mission profile.</p>",
        "MissionProfileListItem$region": "<p>Region of a mission profile.</p>"
      }
    },
    "Polarization": {
      "base": null,
      "refs": { }
    },
    "ReserveContactRequest": {
      "base": "<p/>",
      "refs": {
        "ReserveContactRequest$endTime": "<p>End time of a contact.</p>",
        "ReserveContactRequest$groundStation": "<p>Name of a ground station.</p>",
        "ReserveContactRequest$missionProfileArn": "<p>ARN of a mission profile.</p>",
        "ReserveContactRequest$satelliteArn": "<p>ARN of a satellite</p>",
        "ReserveContactRequest$startTime": "<p>Start time of a contact.</p>",
        "ReserveContactRequest$tags": "<p>Tags assigned to a contact.</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>Resource was not found.</p>",
      "refs": { }
    },
    "RoleArn": {
      "base": null,
      "refs": { }
    },
    "SafeName": {
      "base": null,
      "refs": { }
    },
    "SatelliteList": {
      "base": null,
      "refs": {
        "SatelliteList$member": null
      }
    },
    "SatelliteListItem": {
      "base": "<p>Item in a list of satellites.</p>",
      "refs": {
        "SatelliteListItem$noradSatelliteID": "<p>NORAD satellite ID number.</p>",
        "SatelliteListItem$satelliteArn": "<p>ARN of a satellite.</p>",
        "SatelliteListItem$satelliteId": "<p>ID of a satellite.</p>"
      }
    },
    "SecurityDetails": {
      "base": "<p>Information about endpoints.</p>",
      "refs": {
        "SecurityDetails$roleArn": "<p>ARN to a role needed for connecting streams to your instances. </p>",
        "SecurityDetails$securityGroupIds": "<p>The security groups to attach to the elastic network interfaces.</p>",
        "SecurityDetails$subnetIds": "<p>A list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances.</p>"
      }
    },
    "SecurityGroupIdList": {
      "base": null,
      "refs": {
        "SecurityGroupIdList$member": null
      }
    },
    "SocketAddress": {
      "base": "<p>Information about the socket address.</p>",
      "refs": {
        "SocketAddress$name": "<p>Name of a socket address.</p>",
        "SocketAddress$port": "<p>Port of a socket address.</p>"
      }
    },
    "SpectrumConfig": {
      "base": "<p>Object that describes a spectral <code>Config</code>.</p>",
      "refs": {
        "SpectrumConfig$bandwidth": "<p>Bandwidth of a spectral <code>Config</code>.</p>",
        "SpectrumConfig$centerFrequency": "<p>Center frequency of a spectral <code>Config</code>.</p>",
        "SpectrumConfig$polarization": "<p>Polarization of a spectral <code>Config</code>.</p>"
      }
    },
    "StatusList": {
      "base": null,
      "refs": {
        "StatusList$member": null
      }
    },
    "String": {
      "base": null,
      "refs": { }
    },
    "SubnetList": {
      "base": null,
      "refs": {
        "SubnetList$member": null
      }
    },
    "TagKeys": {
      "base": null,
      "refs": {
        "TagKeys$member": null
      }
    },
    "TagResourceRequest": {
      "base": "<p/>",
      "refs": {
        "TagResourceRequest$resourceArn": "<p>ARN of a resource tag.</p>",
        "TagResourceRequest$tags": "<p>Tags assigned to a resource.</p>"
      }
    },
    "TagResourceResponse": {
      "base": "<p/>",
      "refs": { }
    },
    "TagsMap": {
      "base": null,
      "refs": {
        "TagsMap$key": null,
        "TagsMap$value": null
      }
    },
    "Timestamp": {
      "base": null,
      "refs": { }
    },
    "TrackingConfig": {
      "base": "<p>Object that determines whether tracking should be used during a contact\n         executed with this <code>Config</code> in the mission profile.</p>",
      "refs": {
        "TrackingConfig$autotrack": "<p>Current setting for autotrack.</p>"
      }
    },
    "UntagResourceRequest": {
      "base": "<p/>",
      "refs": {
        "UntagResourceRequest$resourceArn": "<p>ARN of a resource.</p>",
        "UntagResourceRequest$tagKeys": "<p>Keys of a resource tag.</p>"
      }
    },
    "UntagResourceResponse": {
      "base": "<p/>",
      "refs": { }
    },
    "UpdateConfigRequest": {
      "base": "<p/>",
      "refs": {
        "UpdateConfigRequest$configData": "<p>Parameters for a <code>Config</code>.</p>",
        "UpdateConfigRequest$configId": "<p>UUID of a <code>Config</code>.</p>",
        "UpdateConfigRequest$configType": "<p>Type of a <code>Config</code>.</p>",
        "UpdateConfigRequest$name": "<p>Name of a <code>Config</code>.</p>"
      }
    },
    "UpdateMissionProfileRequest": {
      "base": "<p/>",
      "refs": {
        "UpdateMissionProfileRequest$contactPostPassDurationSeconds": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>",
        "UpdateMissionProfileRequest$contactPrePassDurationSeconds": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>",
        "UpdateMissionProfileRequest$dataflowEdges": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a from <code>Config</code> and a to \n         <code>Config</code>.</p>",
        "UpdateMissionProfileRequest$minimumViableContactDurationSeconds": "<p>Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>",
        "UpdateMissionProfileRequest$missionProfileId": "<p>ID of a mission profile.</p>",
        "UpdateMissionProfileRequest$name": "<p>Name of a mission profile.</p>",
        "UpdateMissionProfileRequest$trackingConfigArn": "<p>ARN of a tracking <code>Config</code>.</p>"
      }
    },
    "UplinkEchoConfig": {
      "base": "<p>Information about an uplink echo <code>Config</code>.</p>\n         <p>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the \n         specified <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code> \n         is used in a contact.</p>",
      "refs": {
        "UplinkEchoConfig$antennaUplinkConfigArn": "<p>ARN of an uplink <code>Config</code>.</p>",
        "UplinkEchoConfig$enabled": "<p>Whether or not an uplink <code>Config</code> is enabled.</p>"
      }
    },
    "UplinkSpectrumConfig": {
      "base": "<p>Information about the uplink spectral <code>Config</code>.</p>",
      "refs": {
        "UplinkSpectrumConfig$centerFrequency": "<p>Center frequency of an uplink spectral <code>Config</code>.</p>",
        "UplinkSpectrumConfig$polarization": "<p>Polarization of an uplink spectral <code>Config</code>.</p>"
      }
    },
    "Uuid": {
      "base": null,
      "refs": { }
    },
    "noradSatelliteID": {
      "base": null,
      "refs": { }
    },
    "satelliteArn": {
      "base": null,
      "refs": { }
    }
  }
}