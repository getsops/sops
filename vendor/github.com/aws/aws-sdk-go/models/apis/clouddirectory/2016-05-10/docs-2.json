{
  "version": "2.0",
  "service": "<fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile and IoT applications. This guide describes the Cloud Directory operations that you can call programatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href=\"https://aws.amazon.com/directoryservice/\">AWS Directory Service</a> and the <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\">AWS Directory Service Administration Guide</a>.</p>",
  "operations": {
    "AddFacetToObject": "<p>Adds a new <a>Facet</a> to an object.</p>",
    "ApplySchema": "<p>Copies input published schema into <a>Directory</a> with same name and version as that of published schema .</p>",
    "AttachObject": "<p>Attaches an existing object to another object. An object can be accessed in two ways:</p> <ol> <li> <p>Using the path</p> </li> <li> <p>Using <code>ObjectIdentifier</code> </p> </li> </ol>",
    "AttachPolicy": "<p>Attaches a policy object to a regular object. An object can have a limited number of attached policies.</p>",
    "AttachToIndex": "<p>Attaches the specified object to the specified index.</p>",
    "BatchRead": "<p>Performs all the read operations in a batch. </p>",
    "BatchWrite": "<p>Performs all the write operations in a batch. Either all the operations succeed or none. Batch writes supports only object-related operations.</p>",
    "CreateDirectory": "<p>Creates a <a>Directory</a> by copying the published schema into the directory. A directory cannot be created without a schema.</p>",
    "CreateFacet": "<p>Creates a new <a>Facet</a> in a schema. Facet creation is allowed only in development or applied schemas.</p>",
    "CreateIndex": "<p>Creates an index object. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html\">Indexing</a> for more information.</p>",
    "CreateObject": "<p>Creates an object in a <a>Directory</a>. Additionally attaches the object to a parent, if a parent reference and LinkName is specified. An object is simply a collection of <a>Facet</a> attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet. </p>",
    "CreateSchema": "<p>Creates a new schema in a development state. A schema can exist in three phases:</p> <ul> <li> <p> <i>Development:</i> This is a mutable phase of the schema. All new schemas are in the development phase. Once the schema is finalized, it can be published.</p> </li> <li> <p> <i>Published:</i> Published schemas are immutable and have a version associated with them.</p> </li> <li> <p> <i>Applied:</i> Applied schemas are mutable in a way that allows you to add new schema facets. You can also add new, nonrequired attributes to existing schema facets. You can apply only published schemas to directories. </p> </li> </ul>",
    "DeleteDirectory": "<p>Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.</p>",
    "DeleteFacet": "<p>Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s associated with the facet will be deleted. Only development schema facets are allowed deletion.</p>",
    "DeleteObject": "<p>Deletes an object and its associated attributes. Only objects with no children and no parents can be deleted.</p>",
    "DeleteSchema": "<p>Deletes a given schema. Schemas in a development and published state can only be deleted. </p>",
    "DetachFromIndex": "<p>Detaches the specified object from the specified index.</p>",
    "DetachObject": "<p>Detaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.</p>",
    "DetachPolicy": "<p>Detaches a policy from an object.</p>",
    "DisableDirectory": "<p>Disables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.</p>",
    "EnableDirectory": "<p>Enables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.</p>",
    "GetDirectory": "<p>Retrieves metadata about a directory.</p>",
    "GetFacet": "<p>Gets details of the <a>Facet</a>, such as Facet Name, Attributes, <a>Rule</a>s, or ObjectType. You can call this on all kinds of schema facets -- published, development, or applied.</p>",
    "GetObjectInformation": "<p>Retrieves metadata about an object.</p>",
    "GetSchemaAsJson": "<p>Retrieves a JSON representation of the schema. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_schemas.html#jsonformat\">JSON Schema Format</a> for more information.</p>",
    "ListAppliedSchemaArns": "<p>Lists schemas applied to a directory.</p>",
    "ListAttachedIndices": "<p>Lists indices attached to an object.</p>",
    "ListDevelopmentSchemaArns": "<p>Retrieves the ARNs of schemas in the development state.</p>",
    "ListDirectories": "<p>Lists directories created within an account.</p>",
    "ListFacetAttributes": "<p>Retrieves attributes attached to the facet.</p>",
    "ListFacetNames": "<p>Retrieves the names of facets that exist in a schema.</p>",
    "ListIndex": "<p>Lists objects attached to the specified index.</p>",
    "ListObjectAttributes": "<p>Lists all attributes associated with an object. </p>",
    "ListObjectChildren": "<p>Returns a paginated list of child objects associated with a given object.</p>",
    "ListObjectParentPaths": "<p>Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure\">Directory Structure</a>.</p> <p>Use this API to evaluate all parents for an object. The call returns all objects from the root of the directory up to the requested object. The API returns the number of paths based on user-defined <code>MaxResults</code>, in case there are multiple paths to the parent. The order of the paths and nodes returned is consistent among multiple API calls unless the objects are deleted or moved. Paths not leading to directory root are ignored from the target object.</p>",
    "ListObjectParents": "<p>Lists parent objects associated with a given object in pagination fashion.</p>",
    "ListObjectPolicies": "<p>Returns policies attached to an object in pagination fashion.</p>",
    "ListPolicyAttachments": "<p>Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.</p>",
    "ListPublishedSchemaArns": "<p>Retrieves published schema ARNs.</p>",
    "ListTagsForResource": "<p>Returns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.</p>",
    "LookupPolicy": "<p>Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don't have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don't lead to the root from the target object are ignored.</p>",
    "PublishSchema": "<p>Publishes a development schema with a version. If description and attributes are specified, PublishSchema overrides the development schema description and attributes. If not, the development schema description and attributes are used.</p>",
    "PutSchemaFromJson": "<p>Allows a schema to be updated using JSON upload. Only available for development schemas. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_schemas.html#jsonformat\">JSON Schema Format</a> for more information.</p>",
    "RemoveFacetFromObject": "<p>Removes the specified facet from the specified object.</p>",
    "TagResource": "<p>API for adding tags to a resource.</p>",
    "UntagResource": "<p>API for removing tags from a resource.</p>",
    "UpdateFacet": "<p>Does the following:</p> <ol> <li> <p>Adds new <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Updates existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Deletes existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> </ol>",
    "UpdateObjectAttributes": "<p>Updates a given object's attributes.</p>",
    "UpdateSchema": "<p>Updates the schema name with a new name. Only development schema names can be updated.</p>"
  },
  "shapes": {
    "AccessDeniedException": {
      "base": "<p>Access denied. Check your permissions.</p>",
      "refs": {
      }
    },
    "AddFacetToObjectRequest": {
      "base": null,
      "refs": {
      }
    },
    "AddFacetToObjectResponse": {
      "base": null,
      "refs": {
      }
    },
    "ApplySchemaRequest": {
      "base": null,
      "refs": {
      }
    },
    "ApplySchemaResponse": {
      "base": null,
      "refs": {
      }
    },
    "Arn": {
      "base": null,
      "refs": {
        "AddFacetToObjectRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.</p>",
        "ApplySchemaRequest$PublishedSchemaArn": "<p>Published schema ARN that needs to be copied. For more information, see <a>arns</a>.</p>",
        "ApplySchemaRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> into which the schema is copied. For more information, see <a>arns</a>.</p>",
        "ApplySchemaResponse$AppliedSchemaArn": "<p>Applied schema ARN associated with the copied schema in the <a>Directory</a>. You can use this ARN to describe the schema information applied on this directory. For more information, see <a>arns</a>.</p>",
        "ApplySchemaResponse$DirectoryArn": "<p>ARN associated with the <a>Directory</a>. For more information, see <a>arns</a>.</p>",
        "Arns$member": null,
        "AttachObjectRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.</p>",
        "AttachPolicyRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.</p>",
        "AttachToIndexRequest$DirectoryArn": "<p>The ARN of the directory where the object and index exist.</p>",
        "AttributeKey$SchemaArn": "<p>The ARN of the schema that contains the facet and attribute.</p>",
        "BatchReadRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a>. For more information, see <a>arns</a>.</p>",
        "BatchWriteRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a>. For more information, see <a>arns</a>.</p>",
        "CreateDirectoryRequest$SchemaArn": "<p>ARN of the published schema that will be copied into the data <a>Directory</a>. For more information, see <a>arns</a>.</p>",
        "CreateDirectoryResponse$AppliedSchemaArn": "<p>ARN of the published schema in the <a>Directory</a>. Once a published schema is copied into the directory, it has its own ARN which is referred to applied schema ARN. For more information, see <a>arns</a>.</p>",
        "CreateFacetRequest$SchemaArn": "<p>Schema ARN in which the new <a>Facet</a> will be created. For more information, see <a>arns</a>.</p>",
        "CreateIndexRequest$DirectoryArn": "<p>The ARN of the directory where the index should be created.</p>",
        "CreateObjectRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> in which the object will be created. For more information, see <a>arns</a>.</p>",
        "CreateSchemaResponse$SchemaArn": "<p>ARN associated with the schema. For more information, see <a>arns</a>.</p>",
        "DeleteDirectoryRequest$DirectoryArn": "<p>The ARN of the directory to delete.</p>",
        "DeleteDirectoryResponse$DirectoryArn": "<p>The ARN of the deleted directory.</p>",
        "DeleteFacetRequest$SchemaArn": "<p>ARN associated with the <a>Facet</a>. For more information, see <a>arns</a>.</p>",
        "DeleteObjectRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.</p>",
        "DeleteSchemaRequest$SchemaArn": "<p>ARN of the development schema. For more information, see <a>arns</a>.</p>",
        "DeleteSchemaResponse$SchemaArn": "<p>Input ARN that is returned as part of the response. For more information, see <a>arns</a>.</p>",
        "DetachFromIndexRequest$DirectoryArn": "<p>The ARN of the directory the index and object exist in.</p>",
        "DetachObjectRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.</p>",
        "DetachPolicyRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.</p>",
        "DisableDirectoryRequest$DirectoryArn": "<p>The ARN of the directory to disable.</p>",
        "DisableDirectoryResponse$DirectoryArn": "<p>The ARN of the directory that has been disabled.</p>",
        "EnableDirectoryRequest$DirectoryArn": "<p>The ARN of the directory to enable.</p>",
        "EnableDirectoryResponse$DirectoryArn": "<p>The ARN of the enabled directory.</p>",
        "GetFacetRequest$SchemaArn": "<p>ARN associated with the <a>Facet</a>. For more information, see <a>arns</a>.</p>",
        "GetObjectInformationRequest$DirectoryArn": "<p>The ARN of the directory being retrieved.</p>",
        "GetSchemaAsJsonRequest$SchemaArn": "<p>The ARN of the schema to retrieve.</p>",
        "ListAppliedSchemaArnsRequest$DirectoryArn": "<p>The ARN of the directory you are listing.</p>",
        "ListAttachedIndicesRequest$DirectoryArn": "<p>The ARN of the directory.</p>",
        "ListFacetAttributesRequest$SchemaArn": "<p>The ARN of the schema where the facet resides.</p>",
        "ListFacetNamesRequest$SchemaArn": "<p>The ARN to retrieve facet names from.</p>",
        "ListIndexRequest$DirectoryArn": "<p>The ARN of the directory that the index exists in.</p>",
        "ListObjectAttributesRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.</p>",
        "ListObjectChildrenRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.</p>",
        "ListObjectParentPathsRequest$DirectoryArn": "<p>The ARN of the directory to which the parent path applies.</p>",
        "ListObjectParentsRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.</p>",
        "ListObjectPoliciesRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.</p>",
        "ListPolicyAttachmentsRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.</p>",
        "ListTagsForResourceRequest$ResourceArn": "<p>ARN of the resource. Tagging is only supported for directories.</p>",
        "LookupPolicyRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a>. For more information, see <a>arns</a>.</p>",
        "PublishSchemaRequest$DevelopmentSchemaArn": "<p>ARN associated with the development schema. For more information, see <a>arns</a>.</p>",
        "PublishSchemaResponse$PublishedSchemaArn": "<p>ARN associated with the published schema. For more information, see <a>arns</a>.</p>",
        "PutSchemaFromJsonRequest$SchemaArn": "<p>The ARN of the schema to update.</p>",
        "PutSchemaFromJsonResponse$Arn": "<p>The ARN of the schema to update.</p>",
        "RemoveFacetFromObjectRequest$DirectoryArn": "<p>The ARN of the directory in which the object resides.</p>",
        "SchemaFacet$SchemaArn": "<p>The ARN of the schema that contains the facet.</p>",
        "TagResourceRequest$ResourceArn": "<p>ARN of the resource. Tagging is only supported for directories.</p>",
        "UntagResourceRequest$ResourceArn": "<p>ARN of the resource. Tagging is only supported for directories.</p>",
        "UpdateFacetRequest$SchemaArn": "<p>ARN associated with the <a>Facet</a>. For more information, see <a>arns</a>.</p>",
        "UpdateObjectAttributesRequest$DirectoryArn": "<p>ARN associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.</p>",
        "UpdateSchemaRequest$SchemaArn": "<p>ARN of the development schema. For more information, see <a>arns</a>.</p>",
        "UpdateSchemaResponse$SchemaArn": "<p>ARN associated with the updated schema. For more information, see <a>arns</a>.</p>"
      }
    },
    "Arns": {
      "base": null,
      "refs": {
        "ListAppliedSchemaArnsResponse$SchemaArns": "<p>The ARNs of schemas that are applied to the directory.</p>",
        "ListDevelopmentSchemaArnsResponse$SchemaArns": "<p>The ARNs of retrieved development schemas.</p>",
        "ListPublishedSchemaArnsResponse$SchemaArns": "<p>The ARNs of published schemas.</p>"
      }
    },
    "AttachObjectRequest": {
      "base": null,
      "refs": {
      }
    },
    "AttachObjectResponse": {
      "base": null,
      "refs": {
      }
    },
    "AttachPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "AttachPolicyResponse": {
      "base": null,
      "refs": {
      }
    },
    "AttachToIndexRequest": {
      "base": null,
      "refs": {
      }
    },
    "AttachToIndexResponse": {
      "base": null,
      "refs": {
      }
    },
    "AttributeKey": {
      "base": "<p>A unique identifier for an attribute.</p>",
      "refs": {
        "AttributeKeyAndValue$Key": "<p>The key of the attribute.</p>",
        "AttributeKeyList$member": null,
        "ObjectAttributeRange$AttributeKey": "<p>The key of the attribute the attribute range covers.</p>",
        "ObjectAttributeUpdate$ObjectAttributeKey": "<p>The key of the attribute being updated.</p>"
      }
    },
    "AttributeKeyAndValue": {
      "base": "<p>The combination of an attribute key and an attribute value.</p>",
      "refs": {
        "AttributeKeyAndValueList$member": null
      }
    },
    "AttributeKeyAndValueList": {
      "base": null,
      "refs": {
        "AddFacetToObjectRequest$ObjectAttributeList": "<p>Attributes on the facet you are adding to the object.</p>",
        "BatchAddFacetToObject$ObjectAttributeList": "<p>The attributes to set on the object.</p>",
        "BatchCreateObject$ObjectAttributeList": "<p>Attribute map, which contains an attribute ARN as the key and attribute value as the map value.</p>",
        "BatchListObjectAttributesResponse$Attributes": "<p>Attributes map associated with the object. <code>AttributeArn</code> is the key; attribute value is the value.</p>",
        "CreateObjectRequest$ObjectAttributeList": "<p>Attribute map whose attribute ARN contains the key and attribute value as the map value.</p>",
        "IndexAttachment$IndexedAttributes": "<p>The indexed attribute values.</p>",
        "ListObjectAttributesResponse$Attributes": "<p>Attributes map associated with the object. AttributeArn is the key, and attribute value is the value.</p>"
      }
    },
    "AttributeKeyList": {
      "base": null,
      "refs": {
        "CreateIndexRequest$OrderedIndexedAttributeList": "<p>Specifies the Attributes that should be indexed on. Currently only a single attribute is supported.</p>"
      }
    },
    "AttributeName": {
      "base": null,
      "refs": {
        "AttributeKey$Name": "<p>The name of the attribute.</p>",
        "FacetAttribute$Name": "<p>The name of the facet attribute.</p>",
        "FacetAttributeReference$TargetAttributeName": "<p>Target attribute name associated with the facet reference. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences\">Attribute References</a> for more information.</p>"
      }
    },
    "BatchAddFacetToObject": {
      "base": "<p>Represents the output of a batch add facet to object operation.</p>",
      "refs": {
        "BatchWriteOperation$AddFacetToObject": "<p>Batch operation adding a facet to an object.</p>"
      }
    },
    "BatchAddFacetToObjectResponse": {
      "base": "<p>The result of a batch add facet to object operation.</p>",
      "refs": {
        "BatchWriteOperationResponse$AddFacetToObject": "<p>Result of an add facet to object batch operation.</p>"
      }
    },
    "BatchAttachObject": {
      "base": "<p>Represents the output of an AttachObject operation.</p>",
      "refs": {
        "BatchWriteOperation$AttachObject": "<p>Attaches an object to a <a>Directory</a>.</p>"
      }
    },
    "BatchAttachObjectResponse": {
      "base": "<p>Represents the output batch AttachObject response operation.</p>",
      "refs": {
        "BatchWriteOperationResponse$AttachObject": "<p>Attaches an object to a <a>Directory</a>.</p>"
      }
    },
    "BatchCreateObject": {
      "base": "<p>Represents the output of a CreateObject operation.</p>",
      "refs": {
        "BatchWriteOperation$CreateObject": "<p>Creates an object.</p>"
      }
    },
    "BatchCreateObjectResponse": {
      "base": "<p>Represents the output of a <code>CreateObject</code> response operation.</p>",
      "refs": {
        "BatchWriteOperationResponse$CreateObject": "<p>Creates an object in a <a>Directory</a>.</p>"
      }
    },
    "BatchDeleteObject": {
      "base": "<p>Represents the output of a <code>DeleteObject</code> operation.</p>",
      "refs": {
        "BatchWriteOperation$DeleteObject": "<p>Deletes an object in a <a>Directory</a>.</p>"
      }
    },
    "BatchDeleteObjectResponse": {
      "base": "<p>Represents the output of a <code>DeleteObject</code> response operation.</p>",
      "refs": {
        "BatchWriteOperationResponse$DeleteObject": "<p>Deletes an object in a <a>Directory</a>.</p>"
      }
    },
    "BatchDetachObject": {
      "base": "<p>Represents the output of a <code>DetachObject</code> operation.</p>",
      "refs": {
        "BatchWriteOperation$DetachObject": "<p>Detaches an object from a <a>Directory</a>.</p>"
      }
    },
    "BatchDetachObjectResponse": {
      "base": "<p>Represents the output of a <code>DetachObject</code> response operation.</p>",
      "refs": {
        "BatchWriteOperationResponse$DetachObject": "<p>Detaches an object from a <a>Directory</a>.</p>"
      }
    },
    "BatchListObjectAttributes": {
      "base": "<p>Represents the output of a <code>ListObjectAttributes</code> operation.</p>",
      "refs": {
        "BatchReadOperation$ListObjectAttributes": "<p>Lists all attributes associated with an object.</p>"
      }
    },
    "BatchListObjectAttributesResponse": {
      "base": "<p>Represents the output of a <code>ListObjectAttributes</code> response operation.</p>",
      "refs": {
        "BatchReadSuccessfulResponse$ListObjectAttributes": "<p>Lists all attributes associated with an object.</p>"
      }
    },
    "BatchListObjectChildren": {
      "base": "<p>Represents the output of a <code>ListObjectChildren</code> operation.</p>",
      "refs": {
        "BatchReadOperation$ListObjectChildren": "<p>Returns a paginated list of child objects that are associated with a given object.</p>"
      }
    },
    "BatchListObjectChildrenResponse": {
      "base": "<p>Represents the output of a <code>ListObjectChildren</code> response operation.</p>",
      "refs": {
        "BatchReadSuccessfulResponse$ListObjectChildren": "<p>Returns a paginated list of child objects associated with a given object.</p>"
      }
    },
    "BatchOperationIndex": {
      "base": null,
      "refs": {
        "BatchWriteException$Index": null
      }
    },
    "BatchReadException": {
      "base": "<p>Batch Read Exception structure, which contains exception type and message.</p>",
      "refs": {
        "BatchReadOperationResponse$ExceptionResponse": "<p>Identifies which operation in a batch has failed.</p>"
      }
    },
    "BatchReadExceptionType": {
      "base": null,
      "refs": {
        "BatchReadException$Type": "<p>Type of exception, such as <code>InvalidArnException</code>.</p>"
      }
    },
    "BatchReadOperation": {
      "base": "<p>Represents the output of a <code>BatchRead</code> operation.</p>",
      "refs": {
        "BatchReadOperationList$member": null
      }
    },
    "BatchReadOperationList": {
      "base": null,
      "refs": {
        "BatchReadRequest$Operations": "<p>List of operations that are part of the batch.</p>"
      }
    },
    "BatchReadOperationResponse": {
      "base": "<p>Represents the output of a <code>BatchRead</code> response operation.</p>",
      "refs": {
        "BatchReadOperationResponseList$member": null
      }
    },
    "BatchReadOperationResponseList": {
      "base": null,
      "refs": {
        "BatchReadResponse$Responses": "<p>List of all the responses for each batch read.</p>"
      }
    },
    "BatchReadRequest": {
      "base": null,
      "refs": {
      }
    },
    "BatchReadResponse": {
      "base": null,
      "refs": {
      }
    },
    "BatchReadSuccessfulResponse": {
      "base": "<p>Represents the output of a <code>BatchRead</code> success response operation.</p>",
      "refs": {
        "BatchReadOperationResponse$SuccessfulResponse": "<p>Identifies which operation in a batch has succeeded.</p>"
      }
    },
    "BatchReferenceName": {
      "base": null,
      "refs": {
        "BatchCreateObject$BatchReferenceName": "<p>The batch reference name. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches\">Batches</a> for more information.</p>",
        "BatchDetachObject$BatchReferenceName": "<p>The batch reference name. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches\">Batches</a> for more information.</p>"
      }
    },
    "BatchRemoveFacetFromObject": {
      "base": "<p>Batch operation to remove a facet from an object.</p>",
      "refs": {
        "BatchWriteOperation$RemoveFacetFromObject": "<p>Batch operation removing a facet from an object.</p>"
      }
    },
    "BatchRemoveFacetFromObjectResponse": {
      "base": "<p>Empty result representing success.</p>",
      "refs": {
        "BatchWriteOperationResponse$RemoveFacetFromObject": "<p>Result of a batch remove facet from object operation.</p>"
      }
    },
    "BatchUpdateObjectAttributes": {
      "base": "<p>Represents the output of a <code>BatchUpdate</code> operation. </p>",
      "refs": {
        "BatchWriteOperation$UpdateObjectAttributes": "<p>Update a given object's attributes.</p>"
      }
    },
    "BatchUpdateObjectAttributesResponse": {
      "base": "<p>Represents the output of a <code>BatchUpdate</code> response operation.</p>",
      "refs": {
        "BatchWriteOperationResponse$UpdateObjectAttributes": "<p>Updates a given object’s attributes.</p>"
      }
    },
    "BatchWriteException": {
      "base": "<p>A <code>BatchWrite</code> exception has occurred.</p>",
      "refs": {
      }
    },
    "BatchWriteExceptionType": {
      "base": null,
      "refs": {
        "BatchWriteException$Type": null
      }
    },
    "BatchWriteOperation": {
      "base": "<p>Represents the output of a <code>BatchWrite</code> operation. </p>",
      "refs": {
        "BatchWriteOperationList$member": null
      }
    },
    "BatchWriteOperationList": {
      "base": null,
      "refs": {
        "BatchWriteRequest$Operations": "<p>List of operations that are part of the batch.</p>"
      }
    },
    "BatchWriteOperationResponse": {
      "base": "<p>Represents the output of a <code>BatchWrite</code> response operation.</p>",
      "refs": {
        "BatchWriteOperationResponseList$member": null
      }
    },
    "BatchWriteOperationResponseList": {
      "base": null,
      "refs": {
        "BatchWriteResponse$Responses": "<p>List of all the responses for each batch write.</p>"
      }
    },
    "BatchWriteRequest": {
      "base": null,
      "refs": {
      }
    },
    "BatchWriteResponse": {
      "base": null,
      "refs": {
      }
    },
    "BinaryAttributeValue": {
      "base": null,
      "refs": {
        "TypedAttributeValue$BinaryValue": "<p>A binary data value.</p>"
      }
    },
    "Bool": {
      "base": null,
      "refs": {
        "CreateIndexRequest$IsUnique": "<p>Indicates whether objects with the same indexed attribute value can be added to the index.</p>",
        "FacetAttributeDefinition$IsImmutable": "<p>Whether the attribute is mutable or not.</p>"
      }
    },
    "BooleanAttributeValue": {
      "base": null,
      "refs": {
        "TypedAttributeValue$BooleanValue": "<p>A Boolean data value.</p>"
      }
    },
    "CannotListParentOfRootException": {
      "base": "<p>Cannot list the parents of a <a>Directory</a> root.</p>",
      "refs": {
      }
    },
    "ConsistencyLevel": {
      "base": null,
      "refs": {
        "BatchReadRequest$ConsistencyLevel": "<p>Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.</p>",
        "GetObjectInformationRequest$ConsistencyLevel": "<p>The consistency level at which to retrieve the object information.</p>",
        "ListAttachedIndicesRequest$ConsistencyLevel": "<p>The consistency level to use for this operation.</p>",
        "ListIndexRequest$ConsistencyLevel": "<p>The consistency level to execute the request at.</p>",
        "ListObjectAttributesRequest$ConsistencyLevel": "<p>Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.</p>",
        "ListObjectChildrenRequest$ConsistencyLevel": "<p>Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.</p>",
        "ListObjectParentsRequest$ConsistencyLevel": "<p>Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.</p>",
        "ListObjectPoliciesRequest$ConsistencyLevel": "<p>Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.</p>",
        "ListPolicyAttachmentsRequest$ConsistencyLevel": "<p>Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.</p>"
      }
    },
    "CreateDirectoryRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateDirectoryResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateFacetRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateFacetResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateIndexRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateIndexResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateObjectRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateObjectResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateSchemaRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateSchemaResponse": {
      "base": null,
      "refs": {
      }
    },
    "Date": {
      "base": null,
      "refs": {
        "Directory$CreationDateTime": "<p>The date and time when the directory was created.</p>"
      }
    },
    "DatetimeAttributeValue": {
      "base": null,
      "refs": {
        "TypedAttributeValue$DatetimeValue": "<p>A date and time value.</p>"
      }
    },
    "DeleteDirectoryRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteDirectoryResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteFacetRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteFacetResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteObjectRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteObjectResponse": {
      "base": null,
      "refs": {
      }
    },
    "DeleteSchemaRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteSchemaResponse": {
      "base": null,
      "refs": {
      }
    },
    "DetachFromIndexRequest": {
      "base": null,
      "refs": {
      }
    },
    "DetachFromIndexResponse": {
      "base": null,
      "refs": {
      }
    },
    "DetachObjectRequest": {
      "base": null,
      "refs": {
      }
    },
    "DetachObjectResponse": {
      "base": null,
      "refs": {
      }
    },
    "DetachPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "DetachPolicyResponse": {
      "base": null,
      "refs": {
      }
    },
    "Directory": {
      "base": "<p>Directory structure that includes the directory name and directory ARN.</p>",
      "refs": {
        "DirectoryList$member": null,
        "GetDirectoryResponse$Directory": "<p>Metadata about the directory.</p>"
      }
    },
    "DirectoryAlreadyExistsException": {
      "base": "<p>Indicates that a <a>Directory</a> could not be created due to a naming conflict. Choose a different name and try again.</p>",
      "refs": {
      }
    },
    "DirectoryArn": {
      "base": null,
      "refs": {
        "CreateDirectoryResponse$DirectoryArn": "<p>ARN associated with the <a>Directory</a>. For more information, see <a>arns</a>.</p>",
        "Directory$DirectoryArn": "<p>ARN associated with the directory. For more information, see <a>arns</a>.</p>",
        "GetDirectoryRequest$DirectoryArn": "<p>The ARN of the directory.</p>"
      }
    },
    "DirectoryDeletedException": {
      "base": "<p>A directory that has been deleted has been attempted to be accessed. Note: The requested resource will eventually cease to exist.</p>",
      "refs": {
      }
    },
    "DirectoryList": {
      "base": null,
      "refs": {
        "ListDirectoriesResponse$Directories": "<p>Lists all directories associated with your account in pagination fashion.</p>"
      }
    },
    "DirectoryName": {
      "base": null,
      "refs": {
        "CreateDirectoryRequest$Name": "<p>Name of the <a>Directory</a>. Should be unique per account, per region.</p>",
        "CreateDirectoryResponse$Name": "<p>Name of the <a>Directory</a>.</p>",
        "Directory$Name": "<p>The name of the directory.</p>"
      }
    },
    "DirectoryNotDisabledException": {
      "base": "<p>An operation can only operate on a disabled directory.</p>",
      "refs": {
      }
    },
    "DirectoryNotEnabledException": {
      "base": "<p>An operation can only operate on a directory that is not enabled.</p>",
      "refs": {
      }
    },
    "DirectoryState": {
      "base": null,
      "refs": {
        "Directory$State": "<p>The state of the directory. Can be either <code>Enabled</code>, <code>Disabled</code>, or <code>Deleted</code>.</p>",
        "ListDirectoriesRequest$state": "<p>The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.</p>"
      }
    },
    "DisableDirectoryRequest": {
      "base": null,
      "refs": {
      }
    },
    "DisableDirectoryResponse": {
      "base": null,
      "refs": {
      }
    },
    "EnableDirectoryRequest": {
      "base": null,
      "refs": {
      }
    },
    "EnableDirectoryResponse": {
      "base": null,
      "refs": {
      }
    },
    "ExceptionMessage": {
      "base": null,
      "refs": {
        "AccessDeniedException$Message": null,
        "BatchReadException$Message": "<p>Exception message associated with the failure.</p>",
        "BatchWriteException$Message": null,
        "CannotListParentOfRootException$Message": null,
        "DirectoryAlreadyExistsException$Message": null,
        "DirectoryDeletedException$Message": null,
        "DirectoryNotDisabledException$Message": null,
        "DirectoryNotEnabledException$Message": null,
        "FacetAlreadyExistsException$Message": null,
        "FacetInUseException$Message": null,
        "FacetNotFoundException$Message": null,
        "FacetValidationException$Message": null,
        "IndexedAttributeMissingException$Message": null,
        "InternalServiceException$Message": null,
        "InvalidArnException$Message": null,
        "InvalidAttachmentException$Message": null,
        "InvalidFacetUpdateException$Message": null,
        "InvalidNextTokenException$Message": null,
        "InvalidRuleException$Message": null,
        "InvalidSchemaDocException$Message": null,
        "InvalidTaggingRequestException$Message": null,
        "LimitExceededException$Message": null,
        "LinkNameAlreadyInUseException$Message": null,
        "NotIndexException$Message": null,
        "NotNodeException$Message": null,
        "NotPolicyException$Message": null,
        "ObjectAlreadyDetachedException$Message": null,
        "ObjectNotDetachedException$Message": null,
        "ResourceNotFoundException$Message": null,
        "RetryableConflictException$Message": null,
        "SchemaAlreadyExistsException$Message": null,
        "SchemaAlreadyPublishedException$Message": null,
        "StillContainsLinksException$Message": null,
        "UnsupportedIndexTypeException$Message": null,
        "ValidationException$Message": null
      }
    },
    "Facet": {
      "base": "<p>A structure that contains <code>Name</code>, <code>ARN</code>, <code>Attributes</code>, <a>Rule</a>s, and <code>ObjectTypes</code>.</p>",
      "refs": {
        "GetFacetResponse$Facet": "<p> <a>Facet</a> structure associated with the facet.</p>"
      }
    },
    "FacetAlreadyExistsException": {
      "base": "<p>A facet with the same name already exists.</p>",
      "refs": {
      }
    },
    "FacetAttribute": {
      "base": "<p>Attribute associated with the <a>Facet</a>.</p>",
      "refs": {
        "FacetAttributeList$member": null,
        "FacetAttributeUpdate$Attribute": "<p>The attribute to update.</p>"
      }
    },
    "FacetAttributeDefinition": {
      "base": "<p>A facet attribute definition. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences\">Attribute References</a> for more information.</p>",
      "refs": {
        "FacetAttribute$AttributeDefinition": "<p>A facet attribute consists of either a definition or a reference. This structure contains the attribute definition. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences\">Attribute References</a> for more information.</p>"
      }
    },
    "FacetAttributeList": {
      "base": null,
      "refs": {
        "CreateFacetRequest$Attributes": "<p>Attributes associated with the <a>Facet</a>.e</p>",
        "ListFacetAttributesResponse$Attributes": "<p>The attributes attached to the facet.</p>"
      }
    },
    "FacetAttributeReference": {
      "base": "<p>Facet attribute reference that specifies the attribute definition which contains attribute facet name and attribute name.</p>",
      "refs": {
        "FacetAttribute$AttributeReference": "<p>Attribute reference associated with the attribute. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences\">Attribute References</a> for more information.</p>"
      }
    },
    "FacetAttributeType": {
      "base": null,
      "refs": {
        "FacetAttributeDefinition$Type": "<p>The type of the attribute.</p>"
      }
    },
    "FacetAttributeUpdate": {
      "base": "<p>A structure that contains information used to update an attribute.</p>",
      "refs": {
        "FacetAttributeUpdateList$member": null
      }
    },
    "FacetAttributeUpdateList": {
      "base": null,
      "refs": {
        "UpdateFacetRequest$AttributeUpdates": "<p>List of attributes that need to be updated in a given schema <a>Facet</a>. Each attribute is followed by AttributeAction, which specifies the type of update operation to perform. </p>"
      }
    },
    "FacetInUseException": {
      "base": "<p>Occurs when deleting a facet that contains an attribute which is a target to an attribute reference in a different facet.</p>",
      "refs": {
      }
    },
    "FacetName": {
      "base": null,
      "refs": {
        "AttributeKey$FacetName": "<p>The name of the facet the attribute exists within.</p>",
        "CreateFacetRequest$Name": "<p>Name of the <a>Facet</a>, which is unique for a given schema.</p>",
        "DeleteFacetRequest$Name": "<p>The name of the facet to delete.</p>",
        "Facet$Name": "<p>The name of the <a>Facet</a>.</p>",
        "FacetAttributeReference$TargetFacetName": "<p>Target facet name associated with the facet reference. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences\">Attribute References</a> for more information.</p>",
        "FacetNameList$member": null,
        "GetFacetRequest$Name": "<p>The name of the facet to retrieve.</p>",
        "ListFacetAttributesRequest$Name": "<p>The name of the facet whose attributes will be retrieved.</p>",
        "SchemaFacet$FacetName": "<p>The name of the facet.</p>",
        "UpdateFacetRequest$Name": "<p> </p>"
      }
    },
    "FacetNameList": {
      "base": null,
      "refs": {
        "ListFacetNamesResponse$FacetNames": "<p>The names of facets that exist within the schema.</p>"
      }
    },
    "FacetNotFoundException": {
      "base": "<p>The specified <a>Facet</a> could not be found.</p>",
      "refs": {
      }
    },
    "FacetValidationException": {
      "base": "<p>The <a>Facet</a> you provided was not well formed or could not be validated with the schema.</p>",
      "refs": {
      }
    },
    "GetDirectoryRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetDirectoryResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetFacetRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetFacetResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetObjectInformationRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetObjectInformationResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetSchemaAsJsonRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetSchemaAsJsonResponse": {
      "base": null,
      "refs": {
      }
    },
    "IndexAttachment": {
      "base": "<p>Represents an index and an attached object.</p>",
      "refs": {
        "IndexAttachmentList$member": null
      }
    },
    "IndexAttachmentList": {
      "base": null,
      "refs": {
        "ListAttachedIndicesResponse$IndexAttachments": "<p>The indices attached to the specified object.</p>",
        "ListIndexResponse$IndexAttachments": "<p>The objects and indexed values attached to the index.</p>"
      }
    },
    "IndexedAttributeMissingException": {
      "base": "<p>An object has been attempted to be attached to an object that does not have the appropriate attribute value.</p>",
      "refs": {
      }
    },
    "InternalServiceException": {
      "base": "<p>Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the <a href=\"http://status.aws.amazon.com/\">AWS Service Health Dashboard</a> site to see if there are any operational issues with the service.</p>",
      "refs": {
      }
    },
    "InvalidArnException": {
      "base": "<p>Indicates that the provided ARN value is not valid.</p>",
      "refs": {
      }
    },
    "InvalidAttachmentException": {
      "base": "<p>Indicates that an attempt to attach an object with the same link name or to apply a schema with same name has occurred. Rename the link or the schema and then try again.</p>",
      "refs": {
      }
    },
    "InvalidFacetUpdateException": {
      "base": "<p>An attempt to modify a <a>Facet</a> resulted in an invalid schema exception.</p>",
      "refs": {
      }
    },
    "InvalidNextTokenException": {
      "base": "<p>Indicates that the <code>NextToken</code> value is not valid.</p>",
      "refs": {
      }
    },
    "InvalidRuleException": {
      "base": "<p>Occurs when any of the rule parameter keys or values are invalid.</p>",
      "refs": {
      }
    },
    "InvalidSchemaDocException": {
      "base": "<p>Indicates that the provided <code>SchemaDoc</code> value is not valid.</p>",
      "refs": {
      }
    },
    "InvalidTaggingRequestException": {
      "base": "<p>Can occur for multiple reasons such as when you tag a resource that doesn’t exist or if you specify a higher number of tags for a resource than the allowed limit. Allowed limit is 50 tags per resource.</p>",
      "refs": {
      }
    },
    "LimitExceededException": {
      "base": "<p>Indicates limits are exceeded. See <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html\">Limits</a> for more information.</p>",
      "refs": {
      }
    },
    "LinkName": {
      "base": null,
      "refs": {
        "AttachObjectRequest$LinkName": "<p>Link name with which the child object is attached to the parent.</p>",
        "BatchAttachObject$LinkName": "<p>The name of the link.</p>",
        "BatchCreateObject$LinkName": "<p>The name of the link.</p>",
        "BatchDetachObject$LinkName": "<p>The name of the link.</p>",
        "CreateIndexRequest$LinkName": "<p>The name of the link between the parent object and the index object.</p>",
        "CreateObjectRequest$LinkName": "<p>The name of link that is used to attach this object to a parent.</p>",
        "DetachObjectRequest$LinkName": "<p>Link name associated with the object that needs to be detached.</p>",
        "LinkNameToObjectIdentifierMap$key": null,
        "ObjectIdentifierToLinkNameMap$value": null
      }
    },
    "LinkNameAlreadyInUseException": {
      "base": "<p>Indicates that a link could not be created due to a naming conflict. Choose a different name and then try again.</p>",
      "refs": {
      }
    },
    "LinkNameToObjectIdentifierMap": {
      "base": null,
      "refs": {
        "BatchListObjectChildrenResponse$Children": "<p>Children structure, which is a map with key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.</p>",
        "ListObjectChildrenResponse$Children": "<p>Children structure, which is a map with key as the LinkName and <code>ObjectIdentifier</code> as the value.</p>"
      }
    },
    "ListAppliedSchemaArnsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAppliedSchemaArnsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListAttachedIndicesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListAttachedIndicesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListDevelopmentSchemaArnsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListDevelopmentSchemaArnsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListDirectoriesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListDirectoriesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListFacetAttributesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListFacetAttributesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListFacetNamesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListFacetNamesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListIndexRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListIndexResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectAttributesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectAttributesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectChildrenRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectChildrenResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectParentPathsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectParentPathsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectParentsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectParentsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectPoliciesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListObjectPoliciesResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListPolicyAttachmentsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListPolicyAttachmentsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListPublishedSchemaArnsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListPublishedSchemaArnsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "LookupPolicyRequest": {
      "base": null,
      "refs": {
      }
    },
    "LookupPolicyResponse": {
      "base": null,
      "refs": {
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "BatchListObjectAttributes$NextToken": "<p>The pagination token.</p>",
        "BatchListObjectAttributesResponse$NextToken": "<p>The pagination token.</p>",
        "BatchListObjectChildren$NextToken": "<p>The pagination token.</p>",
        "BatchListObjectChildrenResponse$NextToken": "<p>The pagination token.</p>",
        "ListAppliedSchemaArnsRequest$NextToken": "<p>The pagination token.</p>",
        "ListAppliedSchemaArnsResponse$NextToken": "<p>The pagination token.</p>",
        "ListAttachedIndicesRequest$NextToken": "<p>The pagination token.</p>",
        "ListAttachedIndicesResponse$NextToken": "<p>The pagination token.</p>",
        "ListDevelopmentSchemaArnsRequest$NextToken": "<p>The pagination token.</p>",
        "ListDevelopmentSchemaArnsResponse$NextToken": "<p>The pagination token.</p>",
        "ListDirectoriesRequest$NextToken": "<p>The pagination token.</p>",
        "ListDirectoriesResponse$NextToken": "<p>The pagination token.</p>",
        "ListFacetAttributesRequest$NextToken": "<p>The pagination token.</p>",
        "ListFacetAttributesResponse$NextToken": "<p>The pagination token.</p>",
        "ListFacetNamesRequest$NextToken": "<p>The pagination token.</p>",
        "ListFacetNamesResponse$NextToken": "<p>The pagination token.</p>",
        "ListIndexRequest$NextToken": "<p>The pagination token.</p>",
        "ListIndexResponse$NextToken": "<p>The pagination token.</p>",
        "ListObjectAttributesRequest$NextToken": "<p>The pagination token.</p>",
        "ListObjectAttributesResponse$NextToken": "<p>The pagination token.</p>",
        "ListObjectChildrenRequest$NextToken": "<p>The pagination token.</p>",
        "ListObjectChildrenResponse$NextToken": "<p>The pagination token.</p>",
        "ListObjectParentPathsRequest$NextToken": "<p>The pagination token.</p>",
        "ListObjectParentPathsResponse$NextToken": "<p>The pagination token.</p>",
        "ListObjectParentsRequest$NextToken": "<p>The pagination token.</p>",
        "ListObjectParentsResponse$NextToken": "<p>The pagination token.</p>",
        "ListObjectPoliciesRequest$NextToken": "<p>The pagination token.</p>",
        "ListObjectPoliciesResponse$NextToken": "<p>The pagination token.</p>",
        "ListPolicyAttachmentsRequest$NextToken": "<p>The pagination token.</p>",
        "ListPolicyAttachmentsResponse$NextToken": "<p>The pagination token.</p>",
        "ListPublishedSchemaArnsRequest$NextToken": "<p>The pagination token.</p>",
        "ListPublishedSchemaArnsResponse$NextToken": "<p>The pagination token.</p>",
        "ListTagsForResourceRequest$NextToken": "<p>The pagination token. This is for future use. Currently pagination is not supported for tagging.</p>",
        "ListTagsForResourceResponse$NextToken": "<p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>",
        "LookupPolicyRequest$NextToken": "<p>The token to request the next page of results.</p>",
        "LookupPolicyResponse$NextToken": "<p>The pagination token.</p>"
      }
    },
    "NotIndexException": {
      "base": "<p>Indicates the requested operation can only operate on index objects.</p>",
      "refs": {
      }
    },
    "NotNodeException": {
      "base": "<p>Occurs when any invalid operations are performed on an object which is not a node, such as calling <code>ListObjectChildren</code> for a leaf node object.</p>",
      "refs": {
      }
    },
    "NotPolicyException": {
      "base": "<p>Indicates the requested operation can only operate on policy objects.</p>",
      "refs": {
      }
    },
    "NumberAttributeValue": {
      "base": null,
      "refs": {
        "TypedAttributeValue$NumberValue": "<p>A number data value.</p>"
      }
    },
    "NumberResults": {
      "base": null,
      "refs": {
        "BatchListObjectAttributes$MaxResults": "<p>Maximum number of items to be retrieved in a single call. This is an approximate number.</p>",
        "BatchListObjectChildren$MaxResults": "<p>Maximum number of items to be retrieved in a single call. This is an approximate number.</p>",
        "ListAppliedSchemaArnsRequest$MaxResults": "<p>The maximum number of results to retrieve.</p>",
        "ListAttachedIndicesRequest$MaxResults": "<p>The maximum number of results to retrieve.</p>",
        "ListDevelopmentSchemaArnsRequest$MaxResults": "<p>The maximum number of results to retrieve.</p>",
        "ListDirectoriesRequest$MaxResults": "<p>The maximum number of results to retrieve.</p>",
        "ListFacetAttributesRequest$MaxResults": "<p>The maximum number of results to retrieve.</p>",
        "ListFacetNamesRequest$MaxResults": "<p>The maximum number of results to retrieve</p>",
        "ListIndexRequest$MaxResults": "<p>The maximum number of results to retrieve from the index.</p>",
        "ListObjectAttributesRequest$MaxResults": "<p>Maximum number of items to be retrieved in a single call. This is an approximate number.</p>",
        "ListObjectChildrenRequest$MaxResults": "<p>Maximum number of items to be retrieved in a single call. This is an approximate number.</p>",
        "ListObjectParentPathsRequest$MaxResults": "<p>Maximum number of items to be retrieved in a single call. This is an approximate number.</p>",
        "ListObjectParentsRequest$MaxResults": "<p>Maximum number of items to be retrieved in a single call. This is an approximate number.</p>",
        "ListObjectPoliciesRequest$MaxResults": "<p>Maximum number of items to be retrieved in a single call. This is an approximate number.</p>",
        "ListPolicyAttachmentsRequest$MaxResults": "<p>Maximum number of items to be retrieved in a single call. This is an approximate number.</p>",
        "ListPublishedSchemaArnsRequest$MaxResults": "<p>The maximum number of results to retrieve.</p>",
        "LookupPolicyRequest$MaxResults": "<p>Maximum number of items to be retrieved in a single call. This is an approximate number.</p>"
      }
    },
    "ObjectAlreadyDetachedException": {
      "base": "<p>Indicates the object is not attached to the index.</p>",
      "refs": {
      }
    },
    "ObjectAttributeAction": {
      "base": "<p>The action to take on the object attribute.</p>",
      "refs": {
        "ObjectAttributeUpdate$ObjectAttributeAction": "<p>The action to perform as part of the attribute update.</p>"
      }
    },
    "ObjectAttributeRange": {
      "base": "<p>A range of attributes.</p>",
      "refs": {
        "ObjectAttributeRangeList$member": null
      }
    },
    "ObjectAttributeRangeList": {
      "base": null,
      "refs": {
        "ListIndexRequest$RangesOnIndexedValues": "<p>Specifies the ranges of indexed values that you want to query.</p>"
      }
    },
    "ObjectAttributeUpdate": {
      "base": "<p>Structure that contains attribute update information.</p>",
      "refs": {
        "ObjectAttributeUpdateList$member": null
      }
    },
    "ObjectAttributeUpdateList": {
      "base": null,
      "refs": {
        "BatchUpdateObjectAttributes$AttributeUpdates": "<p>Attributes update structure.</p>",
        "UpdateObjectAttributesRequest$AttributeUpdates": "<p>Attributes update structure.</p>"
      }
    },
    "ObjectIdentifier": {
      "base": null,
      "refs": {
        "AttachObjectResponse$AttachedObjectIdentifier": "<p>Attached <code>ObjectIdentifier</code>, which is the child <code>ObjectIdentifier</code>.</p>",
        "AttachToIndexResponse$AttachedObjectIdentifier": "<p>The <code>ObjectIdentifier</code> of the object that was attached to the index.</p>",
        "BatchAttachObjectResponse$attachedObjectIdentifier": "<p>The <code>ObjectIdentifier</code> of the object that has been attached.</p>",
        "BatchCreateObjectResponse$ObjectIdentifier": "<p>ID associated with the object.</p>",
        "BatchDetachObjectResponse$detachedObjectIdentifier": "<p>The <code>ObjectIdentifier</code> of the detached object.</p>",
        "BatchUpdateObjectAttributesResponse$ObjectIdentifier": "<p>ID associated with the object.</p>",
        "CreateDirectoryResponse$ObjectIdentifier": "<p>The root object node of the created directory.</p>",
        "CreateIndexResponse$ObjectIdentifier": "<p>The <code>ObjectIdentifier</code> of the index created by this operation.</p>",
        "CreateObjectResponse$ObjectIdentifier": "<p>Identifier associated with the object.</p>",
        "DetachFromIndexResponse$DetachedObjectIdentifier": "<p>The <code>ObjectIdentifier</code> of the object that was detached from the index.</p>",
        "DetachObjectResponse$DetachedObjectIdentifier": "<p>The <code>ObjectIdentifier</code> that was detached from the object.</p>",
        "GetObjectInformationResponse$ObjectIdentifier": "<p>The <code>ObjectIdentifier</code> of the specified object.</p>",
        "IndexAttachment$ObjectIdentifier": "<p>The <code>ObjectIdentifier</code> of the object attached to the index.</p>",
        "LinkNameToObjectIdentifierMap$value": null,
        "ObjectIdentifierList$member": null,
        "ObjectIdentifierToLinkNameMap$key": null,
        "PolicyAttachment$PolicyId": "<p>The ID of <code>PolicyAttachment</code>.</p>",
        "PolicyAttachment$ObjectIdentifier": "<p>The <code>ObjectIdentifier</code> associated with <code>PolicyAttachment</code>.</p>",
        "UpdateObjectAttributesResponse$ObjectIdentifier": "<p> <code>ObjectIdentifier</code> of the updated object.</p>"
      }
    },
    "ObjectIdentifierList": {
      "base": null,
      "refs": {
        "ListObjectPoliciesResponse$AttachedPolicyIds": "<p>List of policy <code>ObjectIdentifiers</code>, that are attached to the object.</p>",
        "ListPolicyAttachmentsResponse$ObjectIdentifiers": "<p>List of <code>ObjectIdentifiers</code> to which the policy is attached.</p>",
        "PathToObjectIdentifiers$ObjectIdentifiers": "<p>Lists <code>ObjectIdentifiers</code> starting from directory root to the object in the request.</p>"
      }
    },
    "ObjectIdentifierToLinkNameMap": {
      "base": null,
      "refs": {
        "ListObjectParentsResponse$Parents": "<p>Parent structure, which is a map with key as the <code>ObjectIdentifier</code> and LinkName as the value.</p>"
      }
    },
    "ObjectNotDetachedException": {
      "base": "<p>Indicates the requested operation cannot be completed because the object has not been detached from the tree.</p>",
      "refs": {
      }
    },
    "ObjectReference": {
      "base": "<p>Reference that identifies an object.</p>",
      "refs": {
        "AddFacetToObjectRequest$ObjectReference": "<p>A reference to the object you are adding the specified facet to.</p>",
        "AttachObjectRequest$ParentReference": "<p>Parent object reference.</p>",
        "AttachObjectRequest$ChildReference": "<p>Child object reference to be attached to the object.</p>",
        "AttachPolicyRequest$PolicyReference": "<p>Reference associated with the policy object.</p>",
        "AttachPolicyRequest$ObjectReference": "<p>Reference that identifies the object to which the policy will be attached.</p>",
        "AttachToIndexRequest$IndexReference": "<p>A reference to the index that you are attaching the object to.</p>",
        "AttachToIndexRequest$TargetReference": "<p>A reference to the object that you are attaching to the index.</p>",
        "BatchAddFacetToObject$ObjectReference": "<p>A reference to the object being mutated.</p>",
        "BatchAttachObject$ParentReference": "<p>Parent object reference.</p>",
        "BatchAttachObject$ChildReference": "<p>Child object reference to be attached to the object.</p>",
        "BatchCreateObject$ParentReference": "<p>If specified, the parent reference to which this object will be attached.</p>",
        "BatchDeleteObject$ObjectReference": "<p>Reference that identifies the object.</p>",
        "BatchDetachObject$ParentReference": "<p>Parent reference from which the object with the specified link name is detached.</p>",
        "BatchListObjectAttributes$ObjectReference": "<p>Reference of the object whose attributes need to be listed.</p>",
        "BatchListObjectChildren$ObjectReference": "<p>Reference of the object for which child objects are being listed.</p>",
        "BatchRemoveFacetFromObject$ObjectReference": "<p>A reference to the object whose facet will be removed.</p>",
        "BatchUpdateObjectAttributes$ObjectReference": "<p>Reference that identifies the object.</p>",
        "CreateIndexRequest$ParentReference": "<p>A reference to the parent object that contains the index object.</p>",
        "CreateObjectRequest$ParentReference": "<p>If specified, the parent reference to which this object will be attached.</p>",
        "DeleteObjectRequest$ObjectReference": "<p>Reference that identifies the object.</p>",
        "DetachFromIndexRequest$IndexReference": "<p>A reference to the index object.</p>",
        "DetachFromIndexRequest$TargetReference": "<p>A reference to the object being detached from the index.</p>",
        "DetachObjectRequest$ParentReference": "<p>Parent reference from which the object with the specified link name is detached.</p>",
        "DetachPolicyRequest$PolicyReference": "<p>Reference that identifies the policy object.</p>",
        "DetachPolicyRequest$ObjectReference": "<p>Reference that identifies the object whose policy object will be detached.</p>",
        "GetObjectInformationRequest$ObjectReference": "<p>A reference to the object.</p>",
        "ListAttachedIndicesRequest$TargetReference": "<p>A reference to the object to that has indices attached.</p>",
        "ListIndexRequest$IndexReference": "<p>The reference to the index to list.</p>",
        "ListObjectAttributesRequest$ObjectReference": "<p>Reference that identifies the object whose attributes will be listed.</p>",
        "ListObjectChildrenRequest$ObjectReference": "<p>Reference that identifies the object for which child objects are being listed.</p>",
        "ListObjectParentPathsRequest$ObjectReference": "<p>Reference that identifies the object whose parent paths are listed.</p>",
        "ListObjectParentsRequest$ObjectReference": "<p>Reference that identifies the object for which parent objects are being listed.</p>",
        "ListObjectPoliciesRequest$ObjectReference": "<p>Reference that identifies the object for which policies will be listed.</p>",
        "ListPolicyAttachmentsRequest$PolicyReference": "<p>Reference that identifies the policy object.</p>",
        "LookupPolicyRequest$ObjectReference": "<p>Reference that identifies the object whose policies will be looked up.</p>",
        "RemoveFacetFromObjectRequest$ObjectReference": "<p>A reference to the object to remove the facet from.</p>",
        "UpdateObjectAttributesRequest$ObjectReference": "<p>Reference that identifies the object.</p>"
      }
    },
    "ObjectType": {
      "base": null,
      "refs": {
        "CreateFacetRequest$ObjectType": "<p>Specifies whether a given object created from this facet is of type Node, Leaf Node, Policy or Index.</p> <ul> <li> <p>Node: Can have multiple children but one parent.</p> </li> </ul> <ul> <li> <p>Leaf Node: Cannot have children but can have multiple parents.</p> </li> </ul> <ul> <li> <p>Policy: Allows you to store a policy document and policy type. For more information, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies\">Policies</a>.</p> </li> </ul> <ul> <li> <p>Index: Can be created with the Index API.</p> </li> </ul>",
        "Facet$ObjectType": "<p>Object type associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.</p>",
        "UpdateFacetRequest$ObjectType": "<p>Object type associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.</p>"
      }
    },
    "PathString": {
      "base": null,
      "refs": {
        "PathToObjectIdentifiers$Path": "<p>The path used to identify the object starting from directory root.</p>",
        "PolicyToPath$Path": "<p>The path that is referenced from the root.</p>"
      }
    },
    "PathToObjectIdentifiers": {
      "base": "<p>Returns the path to the <code>ObjectIdentifiers</code> associated with the directory.</p>",
      "refs": {
        "PathToObjectIdentifiersList$member": null
      }
    },
    "PathToObjectIdentifiersList": {
      "base": null,
      "refs": {
        "ListObjectParentPathsResponse$PathToObjectIdentifiersList": "<p>Returns the path to the <code>ObjectIdentifiers</code> associated with the directory.</p>"
      }
    },
    "PolicyAttachment": {
      "base": "<p>Contains the <code>PolicyType</code>, <code>PolicyId</code>, and the <code>ObjectIdentifier</code> to which it is attached.</p>",
      "refs": {
        "PolicyAttachmentList$member": null
      }
    },
    "PolicyAttachmentList": {
      "base": null,
      "refs": {
        "PolicyToPath$Policies": "<p>List of policy objects.</p>"
      }
    },
    "PolicyToPath": {
      "base": "<p>Used when a regular object exists in a <a>Directory</a> and you want to find all of the policies associated with that object and the parent to that object.</p>",
      "refs": {
        "PolicyToPathList$member": null
      }
    },
    "PolicyToPathList": {
      "base": null,
      "refs": {
        "LookupPolicyResponse$PolicyToPathList": "<p>Provides list of path to policies. Policies contain <code>PolicyId</code>, <code>ObjectIdentifier</code>, and <code>PolicyType</code>.</p>"
      }
    },
    "PolicyType": {
      "base": null,
      "refs": {
        "PolicyAttachment$PolicyType": "<p>The type of policy that can be associated with <code>PolicyAttachment</code>.</p>"
      }
    },
    "PublishSchemaRequest": {
      "base": null,
      "refs": {
      }
    },
    "PublishSchemaResponse": {
      "base": null,
      "refs": {
      }
    },
    "PutSchemaFromJsonRequest": {
      "base": null,
      "refs": {
      }
    },
    "PutSchemaFromJsonResponse": {
      "base": null,
      "refs": {
      }
    },
    "RangeMode": {
      "base": null,
      "refs": {
        "TypedAttributeValueRange$StartMode": "<p>Inclusive or exclusive range start.</p>",
        "TypedAttributeValueRange$EndMode": "<p>Inclusive or exclusive range end.</p>"
      }
    },
    "RemoveFacetFromObjectRequest": {
      "base": null,
      "refs": {
      }
    },
    "RemoveFacetFromObjectResponse": {
      "base": null,
      "refs": {
      }
    },
    "RequiredAttributeBehavior": {
      "base": null,
      "refs": {
        "FacetAttribute$RequiredBehavior": "<p>The required behavior of the <code>FacetAttribute</code>.</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>The specified resource could not be found.</p>",
      "refs": {
      }
    },
    "RetryableConflictException": {
      "base": "<p>Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.</p>",
      "refs": {
      }
    },
    "Rule": {
      "base": "<p>Contains an ARN and parameters associated with the rule.</p>",
      "refs": {
        "RuleMap$value": null
      }
    },
    "RuleKey": {
      "base": null,
      "refs": {
        "RuleMap$key": null
      }
    },
    "RuleMap": {
      "base": null,
      "refs": {
        "FacetAttributeDefinition$Rules": "<p>Validation rules attached to the attribute definition.</p>"
      }
    },
    "RuleParameterKey": {
      "base": null,
      "refs": {
        "RuleParameterMap$key": null
      }
    },
    "RuleParameterMap": {
      "base": null,
      "refs": {
        "Rule$Parameters": "<p>Min and max parameters associated with the rule.</p>"
      }
    },
    "RuleParameterValue": {
      "base": null,
      "refs": {
        "RuleParameterMap$value": null
      }
    },
    "RuleType": {
      "base": null,
      "refs": {
        "Rule$Type": "<p>The type of attribute validation rule.</p>"
      }
    },
    "SchemaAlreadyExistsException": {
      "base": "<p>Indicates that a schema could not be created due to a naming conflict. Please select a different name and then try again.</p>",
      "refs": {
      }
    },
    "SchemaAlreadyPublishedException": {
      "base": "<p>Indicates a schema is already published.</p>",
      "refs": {
      }
    },
    "SchemaFacet": {
      "base": "<p>A facet.</p>",
      "refs": {
        "AddFacetToObjectRequest$SchemaFacet": "<p>Identifiers for the facet that you are adding to the object.</p>",
        "BatchAddFacetToObject$SchemaFacet": "<p>Represents the facet being added to the object.</p>",
        "BatchListObjectAttributes$FacetFilter": "<p>Used to filter the list of object attributes associated with a certain facet.</p>",
        "BatchRemoveFacetFromObject$SchemaFacet": "<p>The facet to remove from the object.</p>",
        "ListObjectAttributesRequest$FacetFilter": "<p>Used to filter the list of object attributes associated with a certain facet.</p>",
        "RemoveFacetFromObjectRequest$SchemaFacet": "<p>The facet to remove.</p>",
        "SchemaFacetList$member": null
      }
    },
    "SchemaFacetList": {
      "base": null,
      "refs": {
        "BatchCreateObject$SchemaFacet": "<p>List of FacetArns that will be associated with the object. For more information, see <a>arns</a>.</p>",
        "CreateObjectRequest$SchemaFacets": "<p>List of facet ARNs to be associated with the object. For more information, see <a>arns</a>.</p>",
        "GetObjectInformationResponse$SchemaFacets": "<p>The facets attached to the specified object.</p>"
      }
    },
    "SchemaJsonDocument": {
      "base": null,
      "refs": {
        "GetSchemaAsJsonResponse$Document": "<p>The JSON representation of the schema document.</p>",
        "PutSchemaFromJsonRequest$Document": "<p>The replacement JSON schema.</p>"
      }
    },
    "SchemaName": {
      "base": null,
      "refs": {
        "CreateSchemaRequest$Name": "<p>Name associated with the schema. This is unique to each account and in each region.</p>",
        "GetSchemaAsJsonResponse$Name": "<p>The name of the retrieved schema.</p>",
        "PublishSchemaRequest$Name": "<p>New name under which the schema will be published. If this is not provided, the development schema is considered.</p>",
        "UpdateSchemaRequest$Name": "<p>Name of the schema.</p>"
      }
    },
    "SelectorObjectReference": {
      "base": null,
      "refs": {
        "ObjectReference$Selector": "<p>Allows you to specify an object. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - Identifies the object by <code>ObjectIdentifier</code> </p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>"
      }
    },
    "StillContainsLinksException": {
      "base": "<p>The object could not be deleted because links still exist. Remove the links and then try the operation again.</p>",
      "refs": {
      }
    },
    "StringAttributeValue": {
      "base": null,
      "refs": {
        "TypedAttributeValue$StringValue": "<p>A string data value.</p>"
      }
    },
    "Tag": {
      "base": "<p>Tag structure which contains tag key and value.</p>",
      "refs": {
        "TagList$member": null
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "Tag$Key": "<p>Key associated with the tag.</p>",
        "TagKeyList$member": null
      }
    },
    "TagKeyList": {
      "base": null,
      "refs": {
        "UntagResourceRequest$TagKeys": "<p>Keys of the tag that needs to be removed from the resource.</p>"
      }
    },
    "TagList": {
      "base": null,
      "refs": {
        "ListTagsForResourceResponse$Tags": "<p>List of tag key value pairs associated with the response.</p>",
        "TagResourceRequest$Tags": "<p>List of tag key value pairs.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "Tag$Value": "<p>Value associated with the tag.</p>"
      }
    },
    "TagsNumberResults": {
      "base": null,
      "refs": {
        "ListTagsForResourceRequest$MaxResults": "<p>The MaxResults parameter sets the maximum number of results returned in a single page. This is for future use and is not supported currently.</p>"
      }
    },
    "TypedAttributeValue": {
      "base": "<p>Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value.</p>",
      "refs": {
        "AttributeKeyAndValue$Value": "<p>The value of the attribute.</p>",
        "FacetAttributeDefinition$DefaultValue": "<p>The default value of the attribute (if configured).</p>",
        "ObjectAttributeAction$ObjectAttributeUpdateValue": "<p>The value that you want to update to.</p>",
        "TypedAttributeValueRange$StartValue": "<p>The value to start the range at.</p>",
        "TypedAttributeValueRange$EndValue": "<p>The attribute value to terminate the range at.</p>"
      }
    },
    "TypedAttributeValueRange": {
      "base": "<p>A range of attribute values.</p>",
      "refs": {
        "ObjectAttributeRange$Range": "<p>The range of attribute values being selected.</p>"
      }
    },
    "UnsupportedIndexTypeException": {
      "base": "<p>Indicates the requested index type is not supported.</p>",
      "refs": {
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateActionType": {
      "base": null,
      "refs": {
        "FacetAttributeUpdate$Action": "<p>The action to perform when updating the attribute.</p>",
        "ObjectAttributeAction$ObjectAttributeActionType": "<p>Type can be either Update or Delete.</p>"
      }
    },
    "UpdateFacetRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateFacetResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateObjectAttributesRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateObjectAttributesResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSchemaRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateSchemaResponse": {
      "base": null,
      "refs": {
      }
    },
    "ValidationException": {
      "base": "<p>Indicates your request is malformed in some manner. See the exception message.</p>",
      "refs": {
      }
    },
    "Version": {
      "base": null,
      "refs": {
        "PublishSchemaRequest$Version": "<p>Version under which the schema will be published.</p>"
      }
    }
  }
}
