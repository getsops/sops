{
  "version": "2.0",
  "service": "<p>Amazon Athena is an interactive query service that lets you use standard SQL to analyze data directly in Amazon S3. You can point Athena at your data in Amazon S3 and run ad-hoc queries and get results in seconds. Athena is serverless, so there is no infrastructure to set up or manage. You pay only for the queries you run. Athena scales automatically—executing queries in parallel—so results are fast, even with large datasets and complex queries. For more information, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/what-is.html\">What is Amazon Athena</a> in the <i>Amazon Athena User Guide</i>.</p> <p>If you connect to Athena using the JDBC driver, use version 1.1.0 of the driver or later with the Amazon Athena API. Earlier version drivers do not support the API. For more information and to download the driver, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/connect-with-jdbc.html\">Accessing Amazon Athena with JDBC</a>.</p> <p>For code samples using the AWS SDK for Java, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
  "operations": {
    "BatchGetNamedQuery": "<p>Returns the details of a single named query or a list of up to 50 queries, which you provide as an array of query ID strings. Requires you to have access to the workgroup in which the queries were saved. Use <a>ListNamedQueriesInput</a> to get the list of named query IDs in the specified workgroup. If information could not be retrieved for a submitted query ID, information about the query ID submitted is listed under <a>UnprocessedNamedQueryId</a>. Named queries differ from executed queries. Use <a>BatchGetQueryExecutionInput</a> to get details about each unique query execution, and <a>ListQueryExecutionsInput</a> to get a list of query execution IDs.</p>",
    "BatchGetQueryExecution": "<p>Returns the details of a single query execution or a list of up to 50 query executions, which you provide as an array of query execution ID strings. Requires you to have access to the workgroup in which the queries ran. To get a list of query execution IDs, use <a>ListQueryExecutionsInput$WorkGroup</a>. Query executions differ from named (saved) queries. Use <a>BatchGetNamedQueryInput</a> to get details about named queries.</p>",
    "CreateNamedQuery": "<p>Creates a named query in the specified workgroup. Requires that you have access to the workgroup.</p> <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
    "CreateWorkGroup": "<p>Creates a workgroup with the specified name.</p>",
    "DeleteNamedQuery": "<p>Deletes the named query if you have access to the workgroup in which the query was saved.</p> <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
    "DeleteWorkGroup": "<p>Deletes the workgroup with the specified name. The primary workgroup cannot be deleted.</p>",
    "GetNamedQuery": "<p>Returns information about a single query. Requires that you have access to the workgroup in which the query was saved.</p>",
    "GetQueryExecution": "<p>Returns information about a single execution of a query if you have access to the workgroup in which the query ran. Each time a query executes, information about the query execution is saved with a unique ID.</p>",
    "GetQueryResults": "<p>Returns the results of a single query execution specified by <code>QueryExecutionId</code> if you have access to the workgroup in which the query ran. This request does not execute the query but returns results. Use <a>StartQueryExecution</a> to run a query.</p>",
    "GetWorkGroup": "<p>Returns information about the workgroup with the specified name.</p>",
    "ListNamedQueries": "<p>Provides a list of available query IDs only for queries saved in the specified workgroup. Requires that you have access to the workgroup.</p> <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
    "ListQueryExecutions": "<p>Provides a list of available query execution IDs for the queries in the specified workgroup. Requires you to have access to the workgroup in which the queries ran.</p> <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
    "ListTagsForResource": "<p>Lists the tags associated with this workgroup.</p>",
    "ListWorkGroups": "<p>Lists available workgroups for the account.</p>",
    "StartQueryExecution": "<p>Runs the SQL query statements contained in the <code>Query</code>. Requires you to have access to the workgroup in which the query ran.</p> <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
    "StopQueryExecution": "<p>Stops a query execution. Requires you to have access to the workgroup in which the query ran.</p> <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
    "TagResource": "<p>Adds one or more tags to the resource, such as a workgroup. A tag is a label that you assign to an AWS Athena resource (a workgroup). Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize resources (workgroups) in Athena, for example, by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups in your account. For best practices, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS Tagging Strategies</a>. The key length is from 1 (minimum) to 128 (maximum) Unicode characters in UTF-8. The tag value length is from 0 (minimum) to 256 (maximum) Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one, separate them by commas.</p>",
    "UntagResource": "<p>Removes one or more tags from the workgroup resource. Takes as an input a list of TagKey Strings separated by commas, and removes their tags at the same time.</p>",
    "UpdateWorkGroup": "<p>Updates the workgroup with the specified name. The workgroup's name cannot be changed.</p>"
  },
  "shapes": {
    "AmazonResourceName": {
      "base": null,
      "refs": {
        "ListTagsForResourceInput$ResourceARN": "<p>Lists the tags for the workgroup resource with the specified ARN.</p>",
        "ResourceNotFoundException$ResourceName": null,
        "TagResourceInput$ResourceARN": "<p>Requests that one or more tags are added to the resource (such as a workgroup) for the specified ARN.</p>",
        "UntagResourceInput$ResourceARN": "<p>Removes one or more tags from the workgroup resource for the specified ARN.</p>"
      }
    },
    "BatchGetNamedQueryInput": {
      "base": null,
      "refs": {
      }
    },
    "BatchGetNamedQueryOutput": {
      "base": null,
      "refs": {
      }
    },
    "BatchGetQueryExecutionInput": {
      "base": null,
      "refs": {
      }
    },
    "BatchGetQueryExecutionOutput": {
      "base": null,
      "refs": {
      }
    },
    "Boolean": {
      "base": null,
      "refs": {
        "ColumnInfo$CaseSensitive": "<p>Indicates whether values in the column are case-sensitive.</p>"
      }
    },
    "BoxedBoolean": {
      "base": null,
      "refs": {
        "DeleteWorkGroupInput$RecursiveDeleteOption": "<p>The option to delete the workgroup and its contents even if the workgroup contains any named queries.</p>",
        "ResultConfigurationUpdates$RemoveOutputLocation": "<p>If set to \"true\", indicates that the previously-specified query results location (also known as a client-side setting) for queries in this workgroup should be ignored and set to null. If set to \"false\" or not set, and a value is present in the OutputLocation in ResultConfigurationUpdates (the client-side setting), the OutputLocation in the workgroup's ResultConfiguration will be updated with the new value. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>",
        "ResultConfigurationUpdates$RemoveEncryptionConfiguration": "<p>If set to \"true\", indicates that the previously-specified encryption configuration (also known as the client-side setting) for queries in this workgroup should be ignored and set to null. If set to \"false\" or not set, and a value is present in the EncryptionConfiguration in ResultConfigurationUpdates (the client-side setting), the EncryptionConfiguration in the workgroup's ResultConfiguration will be updated with the new value. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>",
        "WorkGroupConfiguration$EnforceWorkGroupConfiguration": "<p>If set to \"true\", the settings for the workgroup override client-side settings. If set to \"false\", client-side settings are used. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>",
        "WorkGroupConfiguration$PublishCloudWatchMetricsEnabled": "<p>Indicates that the Amazon CloudWatch metrics are enabled for the workgroup.</p>",
        "WorkGroupConfigurationUpdates$EnforceWorkGroupConfiguration": "<p>If set to \"true\", the settings for the workgroup override client-side settings. If set to \"false\" client-side settings are used. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>",
        "WorkGroupConfigurationUpdates$PublishCloudWatchMetricsEnabled": "<p>Indicates whether this workgroup enables publishing metrics to Amazon CloudWatch.</p>",
        "WorkGroupConfigurationUpdates$RemoveBytesScannedCutoffPerQuery": "<p>Indicates that the data usage control limit per query is removed. <a>WorkGroupConfiguration$BytesScannedCutoffPerQuery</a> </p>"
      }
    },
    "BytesScannedCutoffValue": {
      "base": null,
      "refs": {
        "WorkGroupConfiguration$BytesScannedCutoffPerQuery": "<p>The upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan.</p>",
        "WorkGroupConfigurationUpdates$BytesScannedCutoffPerQuery": "<p>The upper limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan.</p>"
      }
    },
    "ColumnInfo": {
      "base": "<p>Information about the columns in a query execution result.</p>",
      "refs": {
        "ColumnInfoList$member": null
      }
    },
    "ColumnInfoList": {
      "base": null,
      "refs": {
        "ResultSetMetadata$ColumnInfo": "<p>Information about the columns returned in a query result metadata.</p>"
      }
    },
    "ColumnNullable": {
      "base": null,
      "refs": {
        "ColumnInfo$Nullable": "<p>Indicates the column's nullable status.</p>"
      }
    },
    "CreateNamedQueryInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateNamedQueryOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreateWorkGroupInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateWorkGroupOutput": {
      "base": null,
      "refs": {
      }
    },
    "DatabaseString": {
      "base": null,
      "refs": {
        "CreateNamedQueryInput$Database": "<p>The database to which the query belongs.</p>",
        "NamedQuery$Database": "<p>The database to which the query belongs.</p>",
        "QueryExecutionContext$Database": "<p>The name of the database.</p>"
      }
    },
    "Date": {
      "base": null,
      "refs": {
        "QueryExecutionStatus$SubmissionDateTime": "<p>The date and time that the query was submitted.</p>",
        "QueryExecutionStatus$CompletionDateTime": "<p>The date and time that the query completed.</p>",
        "WorkGroup$CreationTime": "<p>The date and time the workgroup was created.</p>",
        "WorkGroupSummary$CreationTime": "<p>The workgroup creation date and time.</p>"
      }
    },
    "Datum": {
      "base": "<p>A piece of data (a field in the table).</p>",
      "refs": {
        "datumList$member": null
      }
    },
    "DeleteNamedQueryInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteNamedQueryOutput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteWorkGroupInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteWorkGroupOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescriptionString": {
      "base": null,
      "refs": {
        "CreateNamedQueryInput$Description": "<p>The query description.</p>",
        "NamedQuery$Description": "<p>The query description.</p>"
      }
    },
    "EncryptionConfiguration": {
      "base": "<p>If query results are encrypted in Amazon S3, indicates the encryption option used (for example, <code>SSE-KMS</code> or <code>CSE-KMS</code>) and key information.</p>",
      "refs": {
        "ResultConfiguration$EncryptionConfiguration": "<p>If query results are encrypted in Amazon S3, indicates the encryption option used (for example, <code>SSE-KMS</code> or <code>CSE-KMS</code>) and key information. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the encryption configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a> and <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>",
        "ResultConfigurationUpdates$EncryptionConfiguration": "<p>The encryption configuration for the query results.</p>"
      }
    },
    "EncryptionOption": {
      "base": null,
      "refs": {
        "EncryptionConfiguration$EncryptionOption": "<p>Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (<code>SSE-S3</code>), server-side encryption with KMS-managed keys (<code>SSE-KMS</code>), or client-side encryption with KMS-managed keys (CSE-KMS) is used.</p> <p>If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup. </p>"
      }
    },
    "ErrorCode": {
      "base": "<p>The error code returned when the query execution failed to process, or when the processing request for the named query failed.</p>",
      "refs": {
        "InvalidRequestException$AthenaErrorCode": null,
        "UnprocessedNamedQueryId$ErrorCode": "<p>The error code returned when the processing request for the named query failed, if applicable.</p>",
        "UnprocessedQueryExecutionId$ErrorCode": "<p>The error code returned when the query execution failed to process, if applicable.</p>"
      }
    },
    "ErrorMessage": {
      "base": null,
      "refs": {
        "InternalServerException$Message": null,
        "InvalidRequestException$Message": null,
        "ResourceNotFoundException$Message": null,
        "TooManyRequestsException$Message": null,
        "UnprocessedNamedQueryId$ErrorMessage": "<p>The error message returned when the processing request for the named query failed, if applicable.</p>",
        "UnprocessedQueryExecutionId$ErrorMessage": "<p>The error message returned when the query execution failed to process, if applicable.</p>"
      }
    },
    "GetNamedQueryInput": {
      "base": null,
      "refs": {
      }
    },
    "GetNamedQueryOutput": {
      "base": null,
      "refs": {
      }
    },
    "GetQueryExecutionInput": {
      "base": null,
      "refs": {
      }
    },
    "GetQueryExecutionOutput": {
      "base": null,
      "refs": {
      }
    },
    "GetQueryResultsInput": {
      "base": null,
      "refs": {
      }
    },
    "GetQueryResultsOutput": {
      "base": null,
      "refs": {
      }
    },
    "GetWorkGroupInput": {
      "base": null,
      "refs": {
      }
    },
    "GetWorkGroupOutput": {
      "base": null,
      "refs": {
      }
    },
    "IdempotencyToken": {
      "base": null,
      "refs": {
        "CreateNamedQueryInput$ClientRequestToken": "<p>A unique case-sensitive string used to ensure the request to create the query is idempotent (executes only once). If another <code>CreateNamedQuery</code> request is received, the same response is returned and another query is not created. If a parameter has changed, for example, the <code>QueryString</code>, an error is returned.</p> <important> <p>This token is listed as not required because AWS SDKs (for example the AWS SDK for Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the action will fail.</p> </important>",
        "StartQueryExecutionInput$ClientRequestToken": "<p>A unique case-sensitive string used to ensure the request to create the query is idempotent (executes only once). If another <code>StartQueryExecution</code> request is received, the same response is returned and another query is not created. If a parameter has changed, for example, the <code>QueryString</code>, an error is returned.</p> <important> <p>This token is listed as not required because AWS SDKs (for example the AWS SDK for Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the action will fail.</p> </important>"
      }
    },
    "Integer": {
      "base": null,
      "refs": {
        "ColumnInfo$Precision": "<p>For <code>DECIMAL</code> data types, specifies the total number of digits, up to 38. For performance reasons, we recommend up to 18 digits.</p>",
        "ColumnInfo$Scale": "<p>For <code>DECIMAL</code> data types, specifies the total number of digits in the fractional part of the value. Defaults to 0.</p>"
      }
    },
    "InternalServerException": {
      "base": "<p>Indicates a platform issue, which may be due to a transient condition or outage.</p>",
      "refs": {
      }
    },
    "InvalidRequestException": {
      "base": "<p>Indicates that something is wrong with the input to the request. For example, a required parameter may be missing or out of range.</p>",
      "refs": {
      }
    },
    "ListNamedQueriesInput": {
      "base": null,
      "refs": {
      }
    },
    "ListNamedQueriesOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListQueryExecutionsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListQueryExecutionsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceInput": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceOutput": {
      "base": null,
      "refs": {
      }
    },
    "ListWorkGroupsInput": {
      "base": null,
      "refs": {
      }
    },
    "ListWorkGroupsOutput": {
      "base": null,
      "refs": {
      }
    },
    "Long": {
      "base": null,
      "refs": {
        "GetQueryResultsOutput$UpdateCount": "<p>The number of rows inserted with a CREATE TABLE AS SELECT statement. </p>",
        "QueryExecutionStatistics$EngineExecutionTimeInMillis": "<p>The number of milliseconds that the query took to execute.</p>",
        "QueryExecutionStatistics$DataScannedInBytes": "<p>The number of bytes in the data that was queried.</p>"
      }
    },
    "MaxNamedQueriesCount": {
      "base": null,
      "refs": {
        "ListNamedQueriesInput$MaxResults": "<p>The maximum number of queries to return in this request.</p>"
      }
    },
    "MaxQueryExecutionsCount": {
      "base": null,
      "refs": {
        "ListQueryExecutionsInput$MaxResults": "<p>The maximum number of query executions to return in this request.</p>"
      }
    },
    "MaxQueryResults": {
      "base": null,
      "refs": {
        "GetQueryResultsInput$MaxResults": "<p>The maximum number of results (rows) to return in this request.</p>"
      }
    },
    "MaxTagsCount": {
      "base": null,
      "refs": {
        "ListTagsForResourceInput$MaxResults": "<p>The maximum number of results to be returned per request that lists the tags for the workgroup resource.</p>"
      }
    },
    "MaxWorkGroupsCount": {
      "base": null,
      "refs": {
        "ListWorkGroupsInput$MaxResults": "<p>The maximum number of workgroups to return in this request.</p>"
      }
    },
    "NameString": {
      "base": null,
      "refs": {
        "CreateNamedQueryInput$Name": "<p>The query name.</p>",
        "NamedQuery$Name": "<p>The query name.</p>"
      }
    },
    "NamedQuery": {
      "base": "<p>A query, where <code>QueryString</code> is the list of SQL query statements that comprise the query.</p>",
      "refs": {
        "GetNamedQueryOutput$NamedQuery": "<p>Information about the query.</p>",
        "NamedQueryList$member": null
      }
    },
    "NamedQueryId": {
      "base": null,
      "refs": {
        "CreateNamedQueryOutput$NamedQueryId": "<p>The unique ID of the query.</p>",
        "DeleteNamedQueryInput$NamedQueryId": "<p>The unique ID of the query to delete.</p>",
        "GetNamedQueryInput$NamedQueryId": "<p>The unique ID of the query. Use <a>ListNamedQueries</a> to get query IDs.</p>",
        "NamedQuery$NamedQueryId": "<p>The unique identifier of the query.</p>",
        "NamedQueryIdList$member": null,
        "UnprocessedNamedQueryId$NamedQueryId": "<p>The unique identifier of the named query.</p>"
      }
    },
    "NamedQueryIdList": {
      "base": null,
      "refs": {
        "BatchGetNamedQueryInput$NamedQueryIds": "<p>An array of query IDs.</p>",
        "ListNamedQueriesOutput$NamedQueryIds": "<p>The list of unique query IDs.</p>"
      }
    },
    "NamedQueryList": {
      "base": null,
      "refs": {
        "BatchGetNamedQueryOutput$NamedQueries": "<p>Information about the named query IDs submitted.</p>"
      }
    },
    "QueryExecution": {
      "base": "<p>Information about a single instance of a query execution.</p>",
      "refs": {
        "GetQueryExecutionOutput$QueryExecution": "<p>Information about the query execution.</p>",
        "QueryExecutionList$member": null
      }
    },
    "QueryExecutionContext": {
      "base": "<p>The database in which the query execution occurs.</p>",
      "refs": {
        "QueryExecution$QueryExecutionContext": "<p>The database in which the query execution occurred.</p>",
        "StartQueryExecutionInput$QueryExecutionContext": "<p>The database within which the query executes.</p>"
      }
    },
    "QueryExecutionId": {
      "base": null,
      "refs": {
        "GetQueryExecutionInput$QueryExecutionId": "<p>The unique ID of the query execution.</p>",
        "GetQueryResultsInput$QueryExecutionId": "<p>The unique ID of the query execution.</p>",
        "QueryExecution$QueryExecutionId": "<p>The unique identifier for each query execution.</p>",
        "QueryExecutionIdList$member": null,
        "StartQueryExecutionOutput$QueryExecutionId": "<p>The unique ID of the query that ran as a result of this request.</p>",
        "StopQueryExecutionInput$QueryExecutionId": "<p>The unique ID of the query execution to stop.</p>",
        "UnprocessedQueryExecutionId$QueryExecutionId": "<p>The unique identifier of the query execution.</p>"
      }
    },
    "QueryExecutionIdList": {
      "base": null,
      "refs": {
        "BatchGetQueryExecutionInput$QueryExecutionIds": "<p>An array of query execution IDs.</p>",
        "ListQueryExecutionsOutput$QueryExecutionIds": "<p>The unique IDs of each query execution as an array of strings.</p>"
      }
    },
    "QueryExecutionList": {
      "base": null,
      "refs": {
        "BatchGetQueryExecutionOutput$QueryExecutions": "<p>Information about a query execution.</p>"
      }
    },
    "QueryExecutionState": {
      "base": null,
      "refs": {
        "QueryExecutionStatus$State": "<p>The state of query execution. <code>QUEUED</code> state is listed but is not used by Athena and is reserved for future use. <code>RUNNING</code> indicates that the query has been submitted to the service, and Athena will execute the query as soon as resources are available. <code>SUCCEEDED</code> indicates that the query completed without errors. <code>FAILED</code> indicates that the query experienced an error and did not complete processing. <code>CANCELLED</code> indicates that a user input interrupted query execution. </p>"
      }
    },
    "QueryExecutionStatistics": {
      "base": "<p>The amount of data scanned during the query execution and the amount of time that it took to execute, and the type of statement that was run.</p>",
      "refs": {
        "QueryExecution$Statistics": "<p>The amount of data scanned during the query execution and the amount of time that it took to execute, and the type of statement that was run.</p>"
      }
    },
    "QueryExecutionStatus": {
      "base": "<p>The completion date, current state, submission time, and state change reason (if applicable) for the query execution.</p>",
      "refs": {
        "QueryExecution$Status": "<p>The completion date, current state, submission time, and state change reason (if applicable) for the query execution.</p>"
      }
    },
    "QueryString": {
      "base": null,
      "refs": {
        "CreateNamedQueryInput$QueryString": "<p>The contents of the query with all query statements.</p>",
        "NamedQuery$QueryString": "<p>The SQL query statements that comprise the query.</p>",
        "QueryExecution$Query": "<p>The SQL query statements which the query execution ran.</p>",
        "StartQueryExecutionInput$QueryString": "<p>The SQL query statements to be executed.</p>"
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>A resource, such as a workgroup, was not found.</p>",
      "refs": {
      }
    },
    "ResultConfiguration": {
      "base": "<p>The location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. These are known as \"client-side settings\". If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup.</p>",
      "refs": {
        "QueryExecution$ResultConfiguration": "<p>The location in Amazon S3 where query results were stored and the encryption option, if any, used for query results. These are known as \"client-side settings\". If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup.</p>",
        "StartQueryExecutionInput$ResultConfiguration": "<p>Specifies information about where and how to save the results of the query execution. If the query runs in a workgroup, then workgroup's settings may override query settings. This affects the query results location. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>",
        "WorkGroupConfiguration$ResultConfiguration": "<p>The configuration for the workgroup, which includes the location in Amazon S3 where query results are stored and the encryption option, if any, used for query results.</p>"
      }
    },
    "ResultConfigurationUpdates": {
      "base": "<p>The information about the updates in the query results, such as output location and encryption configuration for the query results.</p>",
      "refs": {
        "WorkGroupConfigurationUpdates$ResultConfigurationUpdates": "<p>The result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results.</p>"
      }
    },
    "ResultSet": {
      "base": "<p>The metadata and rows that comprise a query result set. The metadata describes the column structure and data types.</p>",
      "refs": {
        "GetQueryResultsOutput$ResultSet": "<p>The results of the query execution.</p>"
      }
    },
    "ResultSetMetadata": {
      "base": "<p>The metadata that describes the column structure and data types of a table of query results. </p>",
      "refs": {
        "ResultSet$ResultSetMetadata": "<p>The metadata that describes the column structure and data types of a table of query results.</p>"
      }
    },
    "Row": {
      "base": "<p>The rows that comprise a query result table.</p>",
      "refs": {
        "RowList$member": null
      }
    },
    "RowList": {
      "base": null,
      "refs": {
        "ResultSet$Rows": "<p>The rows in the table.</p>"
      }
    },
    "StartQueryExecutionInput": {
      "base": null,
      "refs": {
      }
    },
    "StartQueryExecutionOutput": {
      "base": null,
      "refs": {
      }
    },
    "StatementType": {
      "base": null,
      "refs": {
        "QueryExecution$StatementType": "<p>The type of query statement that was run. <code>DDL</code> indicates DDL query statements. <code>DML</code> indicates DML (Data Manipulation Language) query statements, such as <code>CREATE TABLE AS SELECT</code>. <code>UTILITY</code> indicates query statements other than DDL and DML, such as <code>SHOW CREATE TABLE</code>, or <code>DESCRIBE &lt;table&gt;</code>.</p>"
      }
    },
    "StopQueryExecutionInput": {
      "base": null,
      "refs": {
      }
    },
    "StopQueryExecutionOutput": {
      "base": null,
      "refs": {
      }
    },
    "String": {
      "base": null,
      "refs": {
        "ColumnInfo$CatalogName": "<p>The catalog to which the query results belong.</p>",
        "ColumnInfo$SchemaName": "<p>The schema name (database name) to which the query results belong.</p>",
        "ColumnInfo$TableName": "<p>The table name for the query results.</p>",
        "ColumnInfo$Name": "<p>The name of the column.</p>",
        "ColumnInfo$Label": "<p>A column label.</p>",
        "ColumnInfo$Type": "<p>The data type of the column.</p>",
        "EncryptionConfiguration$KmsKey": "<p>For <code>SSE-KMS</code> and <code>CSE-KMS</code>, this is the KMS key ARN or ID.</p>",
        "QueryExecutionStatus$StateChangeReason": "<p>Further detail about the status of the query.</p>",
        "ResultConfiguration$OutputLocation": "<p>The location in Amazon S3 where your query results are stored, such as <code>s3://path/to/query/bucket/</code>. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Queries and Query Result Files.</a> If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The \"workgroup settings override\" is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>",
        "ResultConfigurationUpdates$OutputLocation": "<p>The location in Amazon S3 where your query results are stored, such as <code>s3://path/to/query/bucket/</code>. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Queries and Query Result Files.</a> If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The \"workgroup settings override\" is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>"
      }
    },
    "Tag": {
      "base": "<p>A tag that you can add to a resource. A tag is a label that you assign to an AWS Athena resource (a workgroup). Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize workgroups in Athena, for example, by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups in your account. The maximum tag key length is 128 Unicode characters in UTF-8. The maximum tag value length is 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. </p>",
      "refs": {
        "TagList$member": null
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "Tag$Key": "<p>A tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys are case-sensitive and must be unique per resource. </p>",
        "TagKeyList$member": null
      }
    },
    "TagKeyList": {
      "base": null,
      "refs": {
        "UntagResourceInput$TagKeys": "<p>Removes the tags associated with one or more tag keys from the workgroup resource.</p>"
      }
    },
    "TagList": {
      "base": null,
      "refs": {
        "CreateWorkGroupInput$Tags": "<p>One or more tags, separated by commas, that you want to attach to the workgroup as you create it.</p>",
        "ListTagsForResourceOutput$Tags": "<p>The list of tags associated with this workgroup.</p>",
        "TagResourceInput$Tags": "<p>One or more tags, separated by commas, to be added to the resource, such as a workgroup.</p>"
      }
    },
    "TagResourceInput": {
      "base": null,
      "refs": {
      }
    },
    "TagResourceOutput": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "Tag$Value": "<p>A tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag values are case-sensitive. </p>"
      }
    },
    "ThrottleReason": {
      "base": "<p>The reason for the query throttling, for example, when it exceeds the concurrent query limit.</p>",
      "refs": {
        "TooManyRequestsException$Reason": null
      }
    },
    "Token": {
      "base": null,
      "refs": {
        "GetQueryResultsInput$NextToken": "<p>The token that specifies where to start pagination if a previous request was truncated.</p>",
        "GetQueryResultsOutput$NextToken": "<p>A token to be used by the next request if this request is truncated.</p>",
        "ListNamedQueriesInput$NextToken": "<p>The token that specifies where to start pagination if a previous request was truncated.</p>",
        "ListNamedQueriesOutput$NextToken": "<p>A token to be used by the next request if this request is truncated.</p>",
        "ListQueryExecutionsInput$NextToken": "<p>The token that specifies where to start pagination if a previous request was truncated.</p>",
        "ListQueryExecutionsOutput$NextToken": "<p>A token to be used by the next request if this request is truncated.</p>",
        "ListTagsForResourceInput$NextToken": "<p>The token for the next set of results, or null if there are no additional results for this request, where the request lists the tags for the workgroup resource with the specified ARN.</p>",
        "ListTagsForResourceOutput$NextToken": "<p>A token to be used by the next request if this request is truncated.</p>",
        "ListWorkGroupsInput$NextToken": "<p>A token to be used by the next request if this request is truncated.</p>",
        "ListWorkGroupsOutput$NextToken": "<p>A token to be used by the next request if this request is truncated.</p>"
      }
    },
    "TooManyRequestsException": {
      "base": "<p>Indicates that the request was throttled.</p>",
      "refs": {
      }
    },
    "UnprocessedNamedQueryId": {
      "base": "<p>Information about a named query ID that could not be processed.</p>",
      "refs": {
        "UnprocessedNamedQueryIdList$member": null
      }
    },
    "UnprocessedNamedQueryIdList": {
      "base": null,
      "refs": {
        "BatchGetNamedQueryOutput$UnprocessedNamedQueryIds": "<p>Information about provided query IDs.</p>"
      }
    },
    "UnprocessedQueryExecutionId": {
      "base": "<p>Describes a query execution that failed to process.</p>",
      "refs": {
        "UnprocessedQueryExecutionIdList$member": null
      }
    },
    "UnprocessedQueryExecutionIdList": {
      "base": null,
      "refs": {
        "BatchGetQueryExecutionOutput$UnprocessedQueryExecutionIds": "<p>Information about the query executions that failed to run.</p>"
      }
    },
    "UntagResourceInput": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceOutput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateWorkGroupInput": {
      "base": null,
      "refs": {
      }
    },
    "UpdateWorkGroupOutput": {
      "base": null,
      "refs": {
      }
    },
    "WorkGroup": {
      "base": "<p>A workgroup, which contains a name, description, creation time, state, and other configuration, listed under <a>WorkGroup$Configuration</a>. Each workgroup enables you to isolate queries for you or your group of users from other queries in the same account, to configure the query results location and the encryption configuration (known as workgroup settings), to enable sending query metrics to Amazon CloudWatch, and to establish per-query data usage control limits for all queries in a workgroup. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>",
      "refs": {
        "GetWorkGroupOutput$WorkGroup": "<p>Information about the workgroup.</p>"
      }
    },
    "WorkGroupConfiguration": {
      "base": "<p>The configuration of the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup and whether workgroup settings override query settings, and the data usage limit for the amount of data scanned per query, if it is specified. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>",
      "refs": {
        "CreateWorkGroupInput$Configuration": "<p>The configuration for the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption configuration, if any, used for encrypting query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, the limit for the amount of bytes scanned (cutoff) per query, if it is specified, and whether workgroup's settings (specified with EnforceWorkGroupConfiguration) in the WorkGroupConfiguration override client-side settings. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>",
        "WorkGroup$Configuration": "<p>The configuration of the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption configuration, if any, used for query results; whether the Amazon CloudWatch Metrics are enabled for the workgroup; whether workgroup settings override client-side settings; and the data usage limit for the amount of data scanned per query, if it is specified. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>"
      }
    },
    "WorkGroupConfigurationUpdates": {
      "base": "<p>The configuration information that will be updated for this workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, whether the workgroup settings override the client-side settings, and the data usage limit for the amount of bytes scanned per query, if it is specified.</p>",
      "refs": {
        "UpdateWorkGroupInput$ConfigurationUpdates": "<p>The workgroup configuration that will be updated for the given workgroup.</p>"
      }
    },
    "WorkGroupDescriptionString": {
      "base": null,
      "refs": {
        "CreateWorkGroupInput$Description": "<p>The workgroup description.</p>",
        "UpdateWorkGroupInput$Description": "<p>The workgroup description.</p>",
        "WorkGroup$Description": "<p>The workgroup description.</p>",
        "WorkGroupSummary$Description": "<p>The workgroup description.</p>"
      }
    },
    "WorkGroupName": {
      "base": null,
      "refs": {
        "CreateNamedQueryInput$WorkGroup": "<p>The name of the workgroup in which the named query is being created.</p>",
        "CreateWorkGroupInput$Name": "<p>The workgroup name.</p>",
        "DeleteWorkGroupInput$WorkGroup": "<p>The unique name of the workgroup to delete.</p>",
        "GetWorkGroupInput$WorkGroup": "<p>The name of the workgroup.</p>",
        "ListNamedQueriesInput$WorkGroup": "<p>The name of the workgroup from which the named queries are being returned.</p>",
        "ListQueryExecutionsInput$WorkGroup": "<p>The name of the workgroup from which queries are being returned.</p>",
        "NamedQuery$WorkGroup": "<p>The name of the workgroup that contains the named query.</p>",
        "QueryExecution$WorkGroup": "<p>The name of the workgroup in which the query ran.</p>",
        "StartQueryExecutionInput$WorkGroup": "<p>The name of the workgroup in which the query is being started.</p>",
        "UpdateWorkGroupInput$WorkGroup": "<p>The specified workgroup that will be updated.</p>",
        "WorkGroup$Name": "<p>The workgroup name.</p>",
        "WorkGroupSummary$Name": "<p>The name of the workgroup.</p>"
      }
    },
    "WorkGroupState": {
      "base": null,
      "refs": {
        "UpdateWorkGroupInput$State": "<p>The workgroup state that will be updated for the given workgroup.</p>",
        "WorkGroup$State": "<p>The state of the workgroup: ENABLED or DISABLED.</p>",
        "WorkGroupSummary$State": "<p>The state of the workgroup.</p>"
      }
    },
    "WorkGroupSummary": {
      "base": "<p>The summary information for the workgroup, which includes its name, state, description, and the date and time it was created.</p>",
      "refs": {
        "WorkGroupsList$member": null
      }
    },
    "WorkGroupsList": {
      "base": null,
      "refs": {
        "ListWorkGroupsOutput$WorkGroups": "<p>The list of workgroups, including their names, descriptions, creation times, and states.</p>"
      }
    },
    "datumList": {
      "base": null,
      "refs": {
        "Row$Data": "<p>The data that populates a row in a query result table.</p>"
      }
    },
    "datumString": {
      "base": null,
      "refs": {
        "Datum$VarCharValue": "<p>The value of the datum.</p>"
      }
    }
  }
}
