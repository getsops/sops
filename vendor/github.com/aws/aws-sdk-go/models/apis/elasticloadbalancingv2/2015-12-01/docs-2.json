{
  "version": "2.0",
  "service": "<fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.</p> <p>Elastic Load Balancing supports the following types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers.</p> <p>An Application Load Balancer makes routing and load balancing decisions at the application layer (HTTP/HTTPS). A Network Load Balancer makes routing and load balancing decisions at the transport layer (TCP/TLS). Both Application Load Balancers and Network Load Balancers can route requests to one or more ports on each EC2 instance or container instance in your virtual private cloud (VPC).</p> <p>A Classic Load Balancer makes routing and load balancing decisions either at the transport layer (TCP/SSL) or the application layer (HTTP/HTTPS), and supports either EC2-Classic or a VPC. For more information, see the <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2015-12-01 API, which supports Application Load Balancers and Network Load Balancers. The 2012-06-01 API supports Classic Load Balancers.</p> <p>To get started, complete the following tasks:</p> <ol> <li> <p>Create a load balancer using <a>CreateLoadBalancer</a>.</p> </li> <li> <p>Create a target group using <a>CreateTargetGroup</a>.</p> </li> <li> <p>Register targets for the target group using <a>RegisterTargets</a>.</p> </li> <li> <p>Create one or more listeners for your load balancer using <a>CreateListener</a>.</p> </li> </ol> <p>To delete a load balancer and its related resources, complete the following tasks:</p> <ol> <li> <p>Delete the load balancer using <a>DeleteLoadBalancer</a>.</p> </li> <li> <p>Delete the target group using <a>DeleteTargetGroup</a>.</p> </li> </ol> <p>All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.</p>",
  "operations": {
    "AddListenerCertificates": "<p>Adds the specified certificate to the specified HTTPS listener.</p> <p>If the certificate was already added, the call is successful but the certificate is not added again.</p> <p>To list the certificates for your listener, use <a>DescribeListenerCertificates</a>. To remove certificates from your listener, use <a>RemoveListenerCertificates</a>. To specify the default SSL server certificate, use <a>ModifyListener</a>.</p>",
    "AddTags": "<p>Adds the specified tags to the specified Elastic Load Balancing resource. You can tag your Application Load Balancers, Network Load Balancers, and your target groups.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, <code>AddTags</code> updates its value.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>. To remove tags from your resources, use <a>RemoveTags</a>.</p>",
    "CreateListener": "<p>Creates a listener for the specified Application Load Balancer or Network Load Balancer.</p> <p>To update a listener, use <a>ModifyListener</a>. When you are finished with a listener, you can delete it using <a>DeleteListener</a>. If you are finished with both the listener and the load balancer, you can delete them both using <a>DeleteLoadBalancer</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple listeners with the same settings, each call succeeds.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html\">Listeners for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html\">Listeners for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
    "CreateLoadBalancer": "<p>Creates an Application Load Balancer or a Network Load Balancer.</p> <p>When you create a load balancer, you can specify security groups, public subnets, IP address type, and tags. Otherwise, you could do so later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>, <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners for your load balancer, use <a>CreateListener</a>. To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>For limit information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html\">Limits for Your Application Load Balancer</a> in the <i>Application Load Balancers Guide</i> and <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html\">Limits for Your Network Load Balancer</a> in the <i>Network Load Balancers Guide</i>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple load balancers with the same settings, each call succeeds.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html\">Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html\">Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
    "CreateRule": "<p>Creates a rule for the specified listener. The listener must be associated with an Application Load Balancer.</p> <p>Rules are evaluated in priority order, from the lowest value to the highest value. When the conditions for a rule are met, its actions are performed. If the conditions for no rules are met, the actions for the default rule are performed. For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules\">Listener Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view your current rules, use <a>DescribeRules</a>. To update a rule, use <a>ModifyRule</a>. To set the priorities of your rules, use <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>",
    "CreateTargetGroup": "<p>Creates a target group.</p> <p>To register targets with the target group, use <a>RegisterTargets</a>. To update the health check settings for the target group, use <a>ModifyTargetGroup</a>. To monitor the health of targets in the target group, use <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a target group, specify the target group in an action using <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target group, use <a>DeleteTargetGroup</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple target groups with the same settings, each call succeeds.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html\">Target Groups for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html\">Target Groups for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
    "DeleteListener": "<p>Deletes the specified listener.</p> <p>Alternatively, your listener is deleted when you delete the load balancer to which it is attached, using <a>DeleteLoadBalancer</a>.</p>",
    "DeleteLoadBalancer": "<p>Deletes the specified Application Load Balancer or Network Load Balancer and its attached listeners.</p> <p>You can't delete a load balancer if deletion protection is enabled. If the load balancer does not exist or has already been deleted, the call succeeds.</p> <p>Deleting a load balancer does not affect its registered targets. For example, your EC2 instances continue to run and are still registered to their target groups. If you no longer need these EC2 instances, you can stop or terminate them.</p>",
    "DeleteRule": "<p>Deletes the specified rule.</p>",
    "DeleteTargetGroup": "<p>Deletes the specified target group.</p> <p>You can delete a target group if it is not referenced by any actions. Deleting a target group also deletes any associated health checks.</p>",
    "DeregisterTargets": "<p>Deregisters the specified targets from the specified target group. After the targets are deregistered, they no longer receive traffic from the load balancer.</p>",
    "DescribeAccountLimits": "<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html\">Limits for Your Application Load Balancers</a> in the <i>Application Load Balancer Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html\">Limits for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
    "DescribeListenerCertificates": "<p>Describes the certificates for the specified HTTPS listener.</p>",
    "DescribeListeners": "<p>Describes the specified listeners or the listeners for the specified Application Load Balancer or Network Load Balancer. You must specify either a load balancer or one or more listeners.</p>",
    "DescribeLoadBalancerAttributes": "<p>Describes the attributes for the specified Application Load Balancer or Network Load Balancer.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes\">Load Balancer Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#load-balancer-attributes\">Load Balancer Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>",
    "DescribeLoadBalancers": "<p>Describes the specified load balancers or all of your load balancers.</p> <p>To describe the listeners for a load balancer, use <a>DescribeListeners</a>. To describe the attributes for a load balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>",
    "DescribeRules": "<p>Describes the specified rules or the rules for the specified listener. You must specify either a listener or one or more rules.</p>",
    "DescribeSSLPolicies": "<p>Describes the specified policies or all policies used for SSL negotiation.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies\">Security Policies</a> in the <i>Application Load Balancers Guide</i>.</p>",
    "DescribeTags": "<p>Describes the tags for the specified resources. You can describe the tags for one or more Application Load Balancers, Network Load Balancers, and target groups.</p>",
    "DescribeTargetGroupAttributes": "<p>Describes the attributes for the specified target group.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-attributes\">Target Group Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#target-group-attributes\">Target Group Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>",
    "DescribeTargetGroups": "<p>Describes the specified target groups or all of your target groups. By default, all target groups are described. Alternatively, you can specify one of the following to filter the results: the ARN of the load balancer, the names of one or more target groups, or the ARNs of one or more target groups.</p> <p>To describe the targets for a target group, use <a>DescribeTargetHealth</a>. To describe the attributes of a target group, use <a>DescribeTargetGroupAttributes</a>.</p>",
    "DescribeTargetHealth": "<p>Describes the health of the specified targets or all of your targets.</p>",
    "ModifyListener": "<p>Modifies the specified properties of the specified listener.</p> <p>Any properties that you do not specify retain their current values. However, changing the protocol from HTTPS to HTTP, or from TLS to TCP, removes the security policy and server certificate properties. If you change the protocol from HTTP to HTTPS, or from TCP to TLS, you must add the security policy and server certificate properties.</p>",
    "ModifyLoadBalancerAttributes": "<p>Modifies the specified attributes of the specified Application Load Balancer or Network Load Balancer.</p> <p>If any of the specified attributes can't be modified as requested, the call fails. Any existing attributes that you do not modify retain their current values.</p>",
    "ModifyRule": "<p>Modifies the specified rule.</p> <p>Any existing properties that you do not modify retain their current values.</p> <p>To modify the actions for the default rule, use <a>ModifyListener</a>.</p>",
    "ModifyTargetGroup": "<p>Modifies the health checks used when evaluating the health state of the targets in the specified target group.</p> <p>To monitor the health of the targets, use <a>DescribeTargetHealth</a>.</p>",
    "ModifyTargetGroupAttributes": "<p>Modifies the specified attributes of the specified target group.</p>",
    "RegisterTargets": "<p>Registers the specified targets with the specified target group.</p> <p>If the target is an EC2 instance, it must be in the <code>running</code> state when you register it.</p> <p>By default, the load balancer routes requests to registered targets using the protocol and port for the target group. Alternatively, you can override the port for a target when you register it. You can register each EC2 instance or IP address with the same target group multiple times using different ports.</p> <p>With a Network Load Balancer, you cannot register instances by instance ID if they have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1. You can register instances of these types by IP address.</p> <p>To remove a target from a target group, use <a>DeregisterTargets</a>.</p>",
    "RemoveListenerCertificates": "<p>Removes the specified certificate from the specified HTTPS listener.</p> <p>You can't remove the default certificate for a listener. To replace the default certificate, call <a>ModifyListener</a>.</p> <p>To list the certificates for your listener, use <a>DescribeListenerCertificates</a>.</p>",
    "RemoveTags": "<p>Removes the specified tags from the specified Elastic Load Balancing resource.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>.</p>",
    "SetIpAddressType": "<p>Sets the type of IP addresses used by the subnets of the specified Application Load Balancer or Network Load Balancer.</p> <p>Network Load Balancers must use <code>ipv4</code>.</p>",
    "SetRulePriorities": "<p>Sets the priorities of the specified rules.</p> <p>You can reorder the rules as long as there are no priority conflicts in the new order. Any existing rules that you do not specify retain their current priority.</p>",
    "SetSecurityGroups": "<p>Associates the specified security groups with the specified Application Load Balancer. The specified security groups override the previously associated security groups.</p> <p>You can't specify a security group for a Network Load Balancer.</p>",
    "SetSubnets": "<p>Enables the Availability Zone for the specified public subnets for the specified Application Load Balancer. The specified subnets replace the previously enabled subnets.</p> <p>You can't change the subnets for a Network Load Balancer.</p>"
  },
  "shapes": {
    "Action": {
      "base": "<p>Information about an action.</p>",
      "refs": {
        "Actions$member": null
      }
    },
    "ActionOrder": {
      "base": null,
      "refs": {
        "Action$Order": "<p>The order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first. The final action to be performed must be a <code>forward</code> or a <code>fixed-response</code> action.</p>"
      }
    },
    "ActionTypeEnum": {
      "base": null,
      "refs": {
        "Action$Type": "<p>The type of action. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p>"
      }
    },
    "Actions": {
      "base": null,
      "refs": {
        "CreateListenerInput$DefaultActions": "<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP or TLS for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
        "CreateRuleInput$Actions": "<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP or TLS for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
        "Listener$DefaultActions": "<p>The default actions for the listener.</p>",
        "ModifyListenerInput$DefaultActions": "<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP or TLS for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
        "ModifyRuleInput$Actions": "<p>The actions.</p> <p>If the action type is <code>forward</code>, you specify a target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer. The protocol of the target group must be TCP or TLS for a Network Load Balancer.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-oidc</code>, you authenticate users through an identity provider that is OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action type is <code>authenticate-cognito</code>, you authenticate users through the user pools supported by Amazon Cognito.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you redirect specified client requests from one URL to another.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you drop specified client requests and return a custom HTTP response.</p>",
        "Rule$Actions": "<p>The actions.</p>"
      }
    },
    "AddListenerCertificatesInput": {
      "base": null,
      "refs": {
      }
    },
    "AddListenerCertificatesOutput": {
      "base": null,
      "refs": {
      }
    },
    "AddTagsInput": {
      "base": null,
      "refs": {
      }
    },
    "AddTagsOutput": {
      "base": null,
      "refs": {
      }
    },
    "AllocationId": {
      "base": null,
      "refs": {
        "LoadBalancerAddress$AllocationId": "<p>[Network Load Balancers] The allocation ID of the Elastic IP address.</p>",
        "SubnetMapping$AllocationId": "<p>[Network Load Balancers] The allocation ID of the Elastic IP address.</p>"
      }
    },
    "AllocationIdNotFoundException": {
      "base": "<p>The specified allocation ID does not exist.</p>",
      "refs": {
      }
    },
    "AuthenticateCognitoActionAuthenticationRequestExtraParams": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionConfig$AuthenticationRequestExtraParams": "<p>The query parameters (up to 10) to include in the redirect request to the authorization endpoint.</p>"
      }
    },
    "AuthenticateCognitoActionAuthenticationRequestParamName": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionAuthenticationRequestExtraParams$key": null
      }
    },
    "AuthenticateCognitoActionAuthenticationRequestParamValue": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionAuthenticationRequestExtraParams$value": null
      }
    },
    "AuthenticateCognitoActionConditionalBehaviorEnum": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionConfig$OnUnauthenticatedRequest": "<p>The behavior if the user is not authenticated. The following are possible values:</p> <ul> <li> <p>deny<code/> - Return an HTTP 401 Unauthorized error.</p> </li> <li> <p>allow<code/> - Allow the request to be forwarded to the target.</p> </li> <li> <p>authenticate<code/> - Redirect the request to the IdP authorization endpoint. This is the default value.</p> </li> </ul>"
      }
    },
    "AuthenticateCognitoActionConfig": {
      "base": "<p>Request parameters to use when integrating with Amazon Cognito to authenticate users.</p>",
      "refs": {
        "Action$AuthenticateCognitoConfig": "<p>[HTTPS listeners] Information for using Amazon Cognito to authenticate users. Specify only when <code>Type</code> is <code>authenticate-cognito</code>.</p>"
      }
    },
    "AuthenticateCognitoActionScope": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionConfig$Scope": "<p>The set of user claims to be requested from the IdP. The default is <code>openid</code>.</p> <p>To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.</p>"
      }
    },
    "AuthenticateCognitoActionSessionCookieName": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionConfig$SessionCookieName": "<p>The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.</p>"
      }
    },
    "AuthenticateCognitoActionSessionTimeout": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionConfig$SessionTimeout": "<p>The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).</p>"
      }
    },
    "AuthenticateCognitoActionUserPoolArn": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionConfig$UserPoolArn": "<p>The Amazon Resource Name (ARN) of the Amazon Cognito user pool.</p>"
      }
    },
    "AuthenticateCognitoActionUserPoolClientId": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionConfig$UserPoolClientId": "<p>The ID of the Amazon Cognito user pool client.</p>"
      }
    },
    "AuthenticateCognitoActionUserPoolDomain": {
      "base": null,
      "refs": {
        "AuthenticateCognitoActionConfig$UserPoolDomain": "<p>The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.</p>"
      }
    },
    "AuthenticateOidcActionAuthenticationRequestExtraParams": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$AuthenticationRequestExtraParams": "<p>The query parameters (up to 10) to include in the redirect request to the authorization endpoint.</p>"
      }
    },
    "AuthenticateOidcActionAuthenticationRequestParamName": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionAuthenticationRequestExtraParams$key": null
      }
    },
    "AuthenticateOidcActionAuthenticationRequestParamValue": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionAuthenticationRequestExtraParams$value": null
      }
    },
    "AuthenticateOidcActionAuthorizationEndpoint": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$AuthorizationEndpoint": "<p>The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.</p>"
      }
    },
    "AuthenticateOidcActionClientId": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$ClientId": "<p>The OAuth 2.0 client identifier.</p>"
      }
    },
    "AuthenticateOidcActionClientSecret": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$ClientSecret": "<p>The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set <code>UseExistingClientSecret</code> to true.</p>"
      }
    },
    "AuthenticateOidcActionConditionalBehaviorEnum": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$OnUnauthenticatedRequest": "<p>The behavior if the user is not authenticated. The following are possible values:</p> <ul> <li> <p>deny<code/> - Return an HTTP 401 Unauthorized error.</p> </li> <li> <p>allow<code/> - Allow the request to be forwarded to the target.</p> </li> <li> <p>authenticate<code/> - Redirect the request to the IdP authorization endpoint. This is the default value.</p> </li> </ul>"
      }
    },
    "AuthenticateOidcActionConfig": {
      "base": "<p>Request parameters when using an identity provider (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.</p>",
      "refs": {
        "Action$AuthenticateOidcConfig": "<p>[HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC). Specify only when <code>Type</code> is <code>authenticate-oidc</code>.</p>"
      }
    },
    "AuthenticateOidcActionIssuer": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$Issuer": "<p>The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.</p>"
      }
    },
    "AuthenticateOidcActionScope": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$Scope": "<p>The set of user claims to be requested from the IdP. The default is <code>openid</code>.</p> <p>To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.</p>"
      }
    },
    "AuthenticateOidcActionSessionCookieName": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$SessionCookieName": "<p>The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.</p>"
      }
    },
    "AuthenticateOidcActionSessionTimeout": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$SessionTimeout": "<p>The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).</p>"
      }
    },
    "AuthenticateOidcActionTokenEndpoint": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$TokenEndpoint": "<p>The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.</p>"
      }
    },
    "AuthenticateOidcActionUseExistingClientSecret": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$UseExistingClientSecret": "<p>Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this parameter or set it to false.</p>"
      }
    },
    "AuthenticateOidcActionUserInfoEndpoint": {
      "base": null,
      "refs": {
        "AuthenticateOidcActionConfig$UserInfoEndpoint": "<p>The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.</p>"
      }
    },
    "AvailabilityZone": {
      "base": "<p>Information about an Availability Zone.</p>",
      "refs": {
        "AvailabilityZones$member": null
      }
    },
    "AvailabilityZoneNotSupportedException": {
      "base": "<p>The specified Availability Zone is not supported.</p>",
      "refs": {
      }
    },
    "AvailabilityZones": {
      "base": null,
      "refs": {
        "LoadBalancer$AvailabilityZones": "<p>The Availability Zones for the load balancer.</p>",
        "SetSubnetsOutput$AvailabilityZones": "<p>Information about the subnet and Availability Zone.</p>"
      }
    },
    "CanonicalHostedZoneId": {
      "base": null,
      "refs": {
        "LoadBalancer$CanonicalHostedZoneId": "<p>The ID of the Amazon Route 53 hosted zone associated with the load balancer.</p>"
      }
    },
    "Certificate": {
      "base": "<p>Information about an SSL server certificate.</p>",
      "refs": {
        "CertificateList$member": null
      }
    },
    "CertificateArn": {
      "base": null,
      "refs": {
        "Certificate$CertificateArn": "<p>The Amazon Resource Name (ARN) of the certificate.</p>"
      }
    },
    "CertificateList": {
      "base": null,
      "refs": {
        "AddListenerCertificatesInput$Certificates": "<p>The certificate to add. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p>",
        "AddListenerCertificatesOutput$Certificates": "<p>Information about the certificates.</p>",
        "CreateListenerInput$Certificates": "<p>[HTTPS and TLS listeners] The default SSL server certificate. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list, use <a>AddListenerCertificates</a>.</p>",
        "DescribeListenerCertificatesOutput$Certificates": "<p>Information about the certificates.</p>",
        "Listener$Certificates": "<p>The SSL server certificate. You must provide a certificate if the protocol is HTTPS or TLS.</p>",
        "ModifyListenerInput$Certificates": "<p>[HTTPS and TLS listeners] The default SSL server certificate. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p> <p>To create a certificate list, use <a>AddListenerCertificates</a>.</p>",
        "RemoveListenerCertificatesInput$Certificates": "<p>The certificate to remove. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p>"
      }
    },
    "CertificateNotFoundException": {
      "base": "<p>The specified certificate does not exist.</p>",
      "refs": {
      }
    },
    "Cipher": {
      "base": "<p>Information about a cipher used in a policy.</p>",
      "refs": {
        "Ciphers$member": null
      }
    },
    "CipherName": {
      "base": null,
      "refs": {
        "Cipher$Name": "<p>The name of the cipher.</p>"
      }
    },
    "CipherPriority": {
      "base": null,
      "refs": {
        "Cipher$Priority": "<p>The priority of the cipher.</p>"
      }
    },
    "Ciphers": {
      "base": null,
      "refs": {
        "SslPolicy$Ciphers": "<p>The ciphers.</p>"
      }
    },
    "ConditionFieldName": {
      "base": null,
      "refs": {
        "RuleCondition$Field": "<p>The name of the field. The possible values are <code>host-header</code> and <code>path-pattern</code>.</p>"
      }
    },
    "CreateListenerInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateListenerOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreateLoadBalancerInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateLoadBalancerOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreateRuleInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateRuleOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreateTargetGroupInput": {
      "base": null,
      "refs": {
      }
    },
    "CreateTargetGroupOutput": {
      "base": null,
      "refs": {
      }
    },
    "CreatedTime": {
      "base": null,
      "refs": {
        "LoadBalancer$CreatedTime": "<p>The date and time the load balancer was created.</p>"
      }
    },
    "DNSName": {
      "base": null,
      "refs": {
        "LoadBalancer$DNSName": "<p>The public DNS name of the load balancer.</p>"
      }
    },
    "Default": {
      "base": null,
      "refs": {
        "Certificate$IsDefault": "<p>Indicates whether the certificate is the default certificate. Do not set <code>IsDefault</code> when specifying a certificate as an input parameter.</p>"
      }
    },
    "DeleteListenerInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteListenerOutput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteLoadBalancerInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteLoadBalancerOutput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteRuleInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteRuleOutput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteTargetGroupInput": {
      "base": null,
      "refs": {
      }
    },
    "DeleteTargetGroupOutput": {
      "base": null,
      "refs": {
      }
    },
    "DeregisterTargetsInput": {
      "base": null,
      "refs": {
      }
    },
    "DeregisterTargetsOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeAccountLimitsInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeAccountLimitsOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeListenerCertificatesInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeListenerCertificatesOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeListenersInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeListenersOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeLoadBalancerAttributesInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeLoadBalancerAttributesOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeLoadBalancersInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeLoadBalancersOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeRulesInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeRulesOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeSSLPoliciesInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeSSLPoliciesOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTagsInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTagsOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTargetGroupAttributesInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTargetGroupAttributesOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTargetGroupsInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTargetGroupsOutput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTargetHealthInput": {
      "base": null,
      "refs": {
      }
    },
    "DescribeTargetHealthOutput": {
      "base": null,
      "refs": {
      }
    },
    "Description": {
      "base": null,
      "refs": {
        "TargetHealth$Description": "<p>A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.</p>"
      }
    },
    "DuplicateListenerException": {
      "base": "<p>A listener with the specified port already exists.</p>",
      "refs": {
      }
    },
    "DuplicateLoadBalancerNameException": {
      "base": "<p>A load balancer with the specified name already exists.</p>",
      "refs": {
      }
    },
    "DuplicateTagKeysException": {
      "base": "<p>A tag key was specified more than once.</p>",
      "refs": {
      }
    },
    "DuplicateTargetGroupNameException": {
      "base": "<p>A target group with the specified name already exists.</p>",
      "refs": {
      }
    },
    "FixedResponseActionConfig": {
      "base": "<p>Information about an action that returns a custom HTTP response.</p>",
      "refs": {
        "Action$FixedResponseConfig": "<p>[Application Load Balancer] Information for creating an action that returns a custom HTTP response. Specify only when <code>Type</code> is <code>fixed-response</code>.</p>"
      }
    },
    "FixedResponseActionContentType": {
      "base": null,
      "refs": {
        "FixedResponseActionConfig$ContentType": "<p>The content type.</p> <p>Valid Values: text/plain | text/css | text/html | application/javascript | application/json</p>"
      }
    },
    "FixedResponseActionMessage": {
      "base": null,
      "refs": {
        "FixedResponseActionConfig$MessageBody": "<p>The message.</p>"
      }
    },
    "FixedResponseActionStatusCode": {
      "base": null,
      "refs": {
        "FixedResponseActionConfig$StatusCode": "<p>The HTTP response code (2XX, 4XX, or 5XX).</p>"
      }
    },
    "HealthCheckEnabled": {
      "base": null,
      "refs": {
        "CreateTargetGroupInput$HealthCheckEnabled": "<p>Indicates whether health checks are enabled. If the target type is <code>instance</code> or <code>ip</code>, the default is <code>true</code>. If the target type is <code>lambda</code>, the default is <code>false</code>.</p>",
        "ModifyTargetGroupInput$HealthCheckEnabled": "<p>Indicates whether health checks are enabled.</p>",
        "TargetGroup$HealthCheckEnabled": "<p>Indicates whether health checks are enabled.</p>"
      }
    },
    "HealthCheckIntervalSeconds": {
      "base": null,
      "refs": {
        "CreateTargetGroupInput$HealthCheckIntervalSeconds": "<p>The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5–300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds. If the target type is <code>instance</code> or <code>ip</code>, the default is 30 seconds. If the target type is <code>lambda</code>, the default is 35 seconds.</p>",
        "ModifyTargetGroupInput$HealthCheckIntervalSeconds": "<p>The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5–300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
        "TargetGroup$HealthCheckIntervalSeconds": "<p>The approximate amount of time, in seconds, between health checks of an individual target.</p>"
      }
    },
    "HealthCheckPort": {
      "base": null,
      "refs": {
        "CreateTargetGroupInput$HealthCheckPort": "<p>The port the load balancer uses when performing health checks on targets. The default is <code>traffic-port</code>, which is the port on which each target receives traffic from the load balancer.</p>",
        "ModifyTargetGroupInput$HealthCheckPort": "<p>The port the load balancer uses when performing health checks on targets.</p>",
        "TargetGroup$HealthCheckPort": "<p>The port to use to connect with the target.</p>",
        "TargetHealthDescription$HealthCheckPort": "<p>The port to use to connect with the target.</p>"
      }
    },
    "HealthCheckThresholdCount": {
      "base": null,
      "refs": {
        "CreateTargetGroupInput$HealthyThresholdCount": "<p>The number of consecutive health checks successes required before considering an unhealthy target healthy. For Application Load Balancers, the default is 5. For Network Load Balancers, the default is 3.</p>",
        "CreateTargetGroupInput$UnhealthyThresholdCount": "<p>The number of consecutive health check failures required before considering a target unhealthy. For Application Load Balancers, the default is 2. For Network Load Balancers, this value must be the same as the healthy threshold count.</p>",
        "ModifyTargetGroupInput$HealthyThresholdCount": "<p>The number of consecutive health checks successes required before considering an unhealthy target healthy.</p>",
        "ModifyTargetGroupInput$UnhealthyThresholdCount": "<p>The number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy threshold count.</p>",
        "TargetGroup$HealthyThresholdCount": "<p>The number of consecutive health checks successes required before considering an unhealthy target healthy.</p>",
        "TargetGroup$UnhealthyThresholdCount": "<p>The number of consecutive health check failures required before considering the target unhealthy.</p>"
      }
    },
    "HealthCheckTimeoutSeconds": {
      "base": null,
      "refs": {
        "CreateTargetGroupInput$HealthCheckTimeoutSeconds": "<p>The amount of time, in seconds, during which no response from a target means a failed health check. For Application Load Balancers, the range is 2–120 seconds and the default is 5 seconds if the target type is <code>instance</code> or <code>ip</code> and 30 seconds if the target type is <code>lambda</code>. For Network Load Balancers, this is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks.</p>",
        "ModifyTargetGroupInput$HealthCheckTimeoutSeconds": "<p>[HTTP/HTTPS health checks] The amount of time, in seconds, during which no response means a failed health check.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
        "TargetGroup$HealthCheckTimeoutSeconds": "<p>The amount of time, in seconds, during which no response means a failed health check.</p>"
      }
    },
    "HealthUnavailableException": {
      "base": "<p>The health of the specified targets could not be retrieved due to an internal error.</p>",
      "refs": {
      }
    },
    "HostHeaderConditionConfig": {
      "base": null,
      "refs": {
        "RuleCondition$HostHeaderConfig": null
      }
    },
    "HttpCode": {
      "base": null,
      "refs": {
        "Matcher$HttpCode": "<p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\").</p> <p>For Network Load Balancers, this is 200–399.</p>"
      }
    },
    "HttpHeaderConditionConfig": {
      "base": null,
      "refs": {
        "RuleCondition$HttpHeaderConfig": null
      }
    },
    "HttpHeaderConditionName": {
      "base": null,
      "refs": {
        "HttpHeaderConditionConfig$HttpHeaderName": null
      }
    },
    "HttpRequestMethodConditionConfig": {
      "base": null,
      "refs": {
        "RuleCondition$HttpRequestMethodConfig": null
      }
    },
    "IncompatibleProtocolsException": {
      "base": "<p>The specified configuration is not valid with this protocol.</p>",
      "refs": {
      }
    },
    "InvalidConfigurationRequestException": {
      "base": "<p>The requested configuration is not valid.</p>",
      "refs": {
      }
    },
    "InvalidLoadBalancerActionException": {
      "base": "<p>The requested action is not valid.</p>",
      "refs": {
      }
    },
    "InvalidSchemeException": {
      "base": "<p>The requested scheme is not valid.</p>",
      "refs": {
      }
    },
    "InvalidSecurityGroupException": {
      "base": "<p>The specified security group does not exist.</p>",
      "refs": {
      }
    },
    "InvalidSubnetException": {
      "base": "<p>The specified subnet is out of available addresses.</p>",
      "refs": {
      }
    },
    "InvalidTargetException": {
      "base": "<p>The specified target does not exist, is not in the same VPC as the target group, or has an unsupported instance type.</p>",
      "refs": {
      }
    },
    "IpAddress": {
      "base": null,
      "refs": {
        "LoadBalancerAddress$IpAddress": "<p>The static IP address.</p>"
      }
    },
    "IpAddressType": {
      "base": null,
      "refs": {
        "CreateLoadBalancerInput$IpAddressType": "<p>[Application Load Balancers] The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.</p>",
        "LoadBalancer$IpAddressType": "<p>The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses).</p>",
        "SetIpAddressTypeInput$IpAddressType": "<p>The IP address type. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.</p>",
        "SetIpAddressTypeOutput$IpAddressType": "<p>The IP address type.</p>"
      }
    },
    "IsDefault": {
      "base": null,
      "refs": {
        "Rule$IsDefault": "<p>Indicates whether this is the default rule.</p>"
      }
    },
    "Limit": {
      "base": "<p>Information about an Elastic Load Balancing resource limit for your AWS account.</p>",
      "refs": {
        "Limits$member": null
      }
    },
    "Limits": {
      "base": null,
      "refs": {
        "DescribeAccountLimitsOutput$Limits": "<p>Information about the limits.</p>"
      }
    },
    "ListOfString": {
      "base": null,
      "refs": {
        "HostHeaderConditionConfig$Values": null,
        "HttpHeaderConditionConfig$Values": null,
        "HttpRequestMethodConditionConfig$Values": null,
        "PathPatternConditionConfig$Values": null,
        "RuleCondition$Values": "<p>The condition value.</p> <p>If the field name is <code>host-header</code>, you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>- .</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul> <p>If the field name is <code>path-pattern</code>, you can specify a single path pattern (for example, /img/*). A path pattern is case-sensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ \" ' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>",
        "SourceIpConditionConfig$Values": null
      }
    },
    "Listener": {
      "base": "<p>Information about a listener.</p>",
      "refs": {
        "Listeners$member": null
      }
    },
    "ListenerArn": {
      "base": null,
      "refs": {
        "AddListenerCertificatesInput$ListenerArn": "<p>The Amazon Resource Name (ARN) of the listener.</p>",
        "CreateRuleInput$ListenerArn": "<p>The Amazon Resource Name (ARN) of the listener.</p>",
        "DeleteListenerInput$ListenerArn": "<p>The Amazon Resource Name (ARN) of the listener.</p>",
        "DescribeListenerCertificatesInput$ListenerArn": "<p>The Amazon Resource Names (ARN) of the listener.</p>",
        "DescribeRulesInput$ListenerArn": "<p>The Amazon Resource Name (ARN) of the listener.</p>",
        "Listener$ListenerArn": "<p>The Amazon Resource Name (ARN) of the listener.</p>",
        "ListenerArns$member": null,
        "ModifyListenerInput$ListenerArn": "<p>The Amazon Resource Name (ARN) of the listener.</p>",
        "RemoveListenerCertificatesInput$ListenerArn": "<p>The Amazon Resource Name (ARN) of the listener.</p>"
      }
    },
    "ListenerArns": {
      "base": null,
      "refs": {
        "DescribeListenersInput$ListenerArns": "<p>The Amazon Resource Names (ARN) of the listeners.</p>"
      }
    },
    "ListenerNotFoundException": {
      "base": "<p>The specified listener does not exist.</p>",
      "refs": {
      }
    },
    "Listeners": {
      "base": null,
      "refs": {
        "CreateListenerOutput$Listeners": "<p>Information about the listener.</p>",
        "DescribeListenersOutput$Listeners": "<p>Information about the listeners.</p>",
        "ModifyListenerOutput$Listeners": "<p>Information about the modified listener.</p>"
      }
    },
    "LoadBalancer": {
      "base": "<p>Information about a load balancer.</p>",
      "refs": {
        "LoadBalancers$member": null
      }
    },
    "LoadBalancerAddress": {
      "base": "<p>Information about a static IP address for a load balancer.</p>",
      "refs": {
        "LoadBalancerAddresses$member": null
      }
    },
    "LoadBalancerAddresses": {
      "base": null,
      "refs": {
        "AvailabilityZone$LoadBalancerAddresses": "<p>[Network Load Balancers] The static IP address.</p>"
      }
    },
    "LoadBalancerArn": {
      "base": null,
      "refs": {
        "CreateListenerInput$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "DeleteLoadBalancerInput$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "DescribeListenersInput$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "DescribeLoadBalancerAttributesInput$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "DescribeTargetGroupsInput$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "Listener$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "LoadBalancer$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "LoadBalancerArns$member": null,
        "ModifyLoadBalancerAttributesInput$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "SetIpAddressTypeInput$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "SetSecurityGroupsInput$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>",
        "SetSubnetsInput$LoadBalancerArn": "<p>The Amazon Resource Name (ARN) of the load balancer.</p>"
      }
    },
    "LoadBalancerArns": {
      "base": null,
      "refs": {
        "DescribeLoadBalancersInput$LoadBalancerArns": "<p>The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call.</p>",
        "TargetGroup$LoadBalancerArns": "<p>The Amazon Resource Names (ARN) of the load balancers that route traffic to this target group.</p>"
      }
    },
    "LoadBalancerAttribute": {
      "base": "<p>Information about a load balancer attribute.</p>",
      "refs": {
        "LoadBalancerAttributes$member": null
      }
    },
    "LoadBalancerAttributeKey": {
      "base": null,
      "refs": {
        "LoadBalancerAttribute$Key": "<p>The name of the attribute.</p> <p>The following attributes are supported by both Application Load Balancers and Network Load Balancers:</p> <ul> <li> <p> <code>access_logs.s3.enabled</code> - Indicates whether access logs are enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> <li> <p> <code>access_logs.s3.bucket</code> - The name of the S3 bucket for the access logs. This attribute is required if access logs are enabled. The bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permissions to write to the bucket.</p> </li> <li> <p> <code>access_logs.s3.prefix</code> - The prefix for the location in the S3 bucket for the access logs.</p> </li> <li> <p> <code>deletion_protection.enabled</code> - Indicates whether deletion protection is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> </ul> <p>The following attributes are supported by only Application Load Balancers:</p> <ul> <li> <p> <code>idle_timeout.timeout_seconds</code> - The idle timeout value, in seconds. The valid range is 1-4000 seconds. The default is 60 seconds.</p> </li> <li> <p> <code>routing.http2.enabled</code> - Indicates whether HTTP/2 is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>true</code>.</p> </li> </ul> <p>The following attributes are supported by only Network Load Balancers:</p> <ul> <li> <p> <code>load_balancing.cross_zone.enabled</code> - Indicates whether cross-zone load balancing is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> </ul>"
      }
    },
    "LoadBalancerAttributeValue": {
      "base": null,
      "refs": {
        "LoadBalancerAttribute$Value": "<p>The value of the attribute.</p>"
      }
    },
    "LoadBalancerAttributes": {
      "base": null,
      "refs": {
        "DescribeLoadBalancerAttributesOutput$Attributes": "<p>Information about the load balancer attributes.</p>",
        "ModifyLoadBalancerAttributesInput$Attributes": "<p>The load balancer attributes.</p>",
        "ModifyLoadBalancerAttributesOutput$Attributes": "<p>Information about the load balancer attributes.</p>"
      }
    },
    "LoadBalancerName": {
      "base": null,
      "refs": {
        "CreateLoadBalancerInput$Name": "<p>The name of the load balancer.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with \"internal-\".</p>",
        "LoadBalancer$LoadBalancerName": "<p>The name of the load balancer.</p>",
        "LoadBalancerNames$member": null
      }
    },
    "LoadBalancerNames": {
      "base": null,
      "refs": {
        "DescribeLoadBalancersInput$Names": "<p>The names of the load balancers.</p>"
      }
    },
    "LoadBalancerNotFoundException": {
      "base": "<p>The specified load balancer does not exist.</p>",
      "refs": {
      }
    },
    "LoadBalancerSchemeEnum": {
      "base": null,
      "refs": {
        "CreateLoadBalancerInput$Scheme": "<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p> <p>The default is an Internet-facing load balancer.</p>",
        "LoadBalancer$Scheme": "<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p>"
      }
    },
    "LoadBalancerState": {
      "base": "<p>Information about the state of the load balancer.</p>",
      "refs": {
        "LoadBalancer$State": "<p>The state of the load balancer.</p>"
      }
    },
    "LoadBalancerStateEnum": {
      "base": null,
      "refs": {
        "LoadBalancerState$Code": "<p>The state code. The initial state of the load balancer is <code>provisioning</code>. After the load balancer is fully set up and ready to route traffic, its state is <code>active</code>. If the load balancer could not be set up, its state is <code>failed</code>.</p>"
      }
    },
    "LoadBalancerTypeEnum": {
      "base": null,
      "refs": {
        "CreateLoadBalancerInput$Type": "<p>The type of load balancer. The default is <code>application</code>.</p>",
        "LoadBalancer$Type": "<p>The type of load balancer.</p>"
      }
    },
    "LoadBalancers": {
      "base": null,
      "refs": {
        "CreateLoadBalancerOutput$LoadBalancers": "<p>Information about the load balancer.</p>",
        "DescribeLoadBalancersOutput$LoadBalancers": "<p>Information about the load balancers.</p>"
      }
    },
    "Marker": {
      "base": null,
      "refs": {
        "DescribeAccountLimitsInput$Marker": "<p>The marker for the next set of results. (You received this marker from a previous call.)</p>",
        "DescribeAccountLimitsOutput$NextMarker": "<p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>",
        "DescribeListenerCertificatesInput$Marker": "<p>The marker for the next set of results. (You received this marker from a previous call.)</p>",
        "DescribeListenerCertificatesOutput$NextMarker": "<p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>",
        "DescribeListenersInput$Marker": "<p>The marker for the next set of results. (You received this marker from a previous call.)</p>",
        "DescribeListenersOutput$NextMarker": "<p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>",
        "DescribeLoadBalancersInput$Marker": "<p>The marker for the next set of results. (You received this marker from a previous call.)</p>",
        "DescribeLoadBalancersOutput$NextMarker": "<p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>",
        "DescribeRulesInput$Marker": "<p>The marker for the next set of results. (You received this marker from a previous call.)</p>",
        "DescribeRulesOutput$NextMarker": "<p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>",
        "DescribeSSLPoliciesInput$Marker": "<p>The marker for the next set of results. (You received this marker from a previous call.)</p>",
        "DescribeSSLPoliciesOutput$NextMarker": "<p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>",
        "DescribeTargetGroupsInput$Marker": "<p>The marker for the next set of results. (You received this marker from a previous call.)</p>",
        "DescribeTargetGroupsOutput$NextMarker": "<p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>"
      }
    },
    "Matcher": {
      "base": "<p>Information to use when checking for a successful response from a target.</p>",
      "refs": {
        "CreateTargetGroupInput$Matcher": "<p>[HTTP/HTTPS health checks] The HTTP codes to use when checking for a successful response from a target.</p>",
        "ModifyTargetGroupInput$Matcher": "<p>[HTTP/HTTPS health checks] The HTTP codes to use when checking for a successful response from a target.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
        "TargetGroup$Matcher": "<p>The HTTP codes to use when checking for a successful response from a target.</p>"
      }
    },
    "Max": {
      "base": null,
      "refs": {
        "Limit$Max": "<p>The maximum value of the limit.</p>"
      }
    },
    "ModifyListenerInput": {
      "base": null,
      "refs": {
      }
    },
    "ModifyListenerOutput": {
      "base": null,
      "refs": {
      }
    },
    "ModifyLoadBalancerAttributesInput": {
      "base": null,
      "refs": {
      }
    },
    "ModifyLoadBalancerAttributesOutput": {
      "base": null,
      "refs": {
      }
    },
    "ModifyRuleInput": {
      "base": null,
      "refs": {
      }
    },
    "ModifyRuleOutput": {
      "base": null,
      "refs": {
      }
    },
    "ModifyTargetGroupAttributesInput": {
      "base": null,
      "refs": {
      }
    },
    "ModifyTargetGroupAttributesOutput": {
      "base": null,
      "refs": {
      }
    },
    "ModifyTargetGroupInput": {
      "base": null,
      "refs": {
      }
    },
    "ModifyTargetGroupOutput": {
      "base": null,
      "refs": {
      }
    },
    "Name": {
      "base": null,
      "refs": {
        "Limit$Name": "<p>The name of the limit. The possible values are:</p> <ul> <li> <p>application-load-balancers</p> </li> <li> <p>listeners-per-application-load-balancer</p> </li> <li> <p>listeners-per-network-load-balancer</p> </li> <li> <p>network-load-balancers</p> </li> <li> <p>rules-per-application-load-balancer</p> </li> <li> <p>target-groups</p> </li> <li> <p>targets-per-application-load-balancer</p> </li> <li> <p>targets-per-availability-zone-per-network-load-balancer</p> </li> <li> <p>targets-per-network-load-balancer</p> </li> </ul>"
      }
    },
    "OperationNotPermittedException": {
      "base": "<p>This operation is not allowed.</p>",
      "refs": {
      }
    },
    "PageSize": {
      "base": null,
      "refs": {
        "DescribeAccountLimitsInput$PageSize": "<p>The maximum number of results to return with this call.</p>",
        "DescribeListenerCertificatesInput$PageSize": "<p>The maximum number of results to return with this call.</p>",
        "DescribeListenersInput$PageSize": "<p>The maximum number of results to return with this call.</p>",
        "DescribeLoadBalancersInput$PageSize": "<p>The maximum number of results to return with this call.</p>",
        "DescribeRulesInput$PageSize": "<p>The maximum number of results to return with this call.</p>",
        "DescribeSSLPoliciesInput$PageSize": "<p>The maximum number of results to return with this call.</p>",
        "DescribeTargetGroupsInput$PageSize": "<p>The maximum number of results to return with this call.</p>"
      }
    },
    "Path": {
      "base": null,
      "refs": {
        "CreateTargetGroupInput$HealthCheckPath": "<p>[HTTP/HTTPS health checks] The ping path that is the destination on the targets for health checks. The default is /.</p>",
        "ModifyTargetGroupInput$HealthCheckPath": "<p>[HTTP/HTTPS health checks] The ping path that is the destination for the health check request.</p>",
        "TargetGroup$HealthCheckPath": "<p>The destination for the health check request.</p>"
      }
    },
    "PathPatternConditionConfig": {
      "base": null,
      "refs": {
        "RuleCondition$PathPatternConfig": null
      }
    },
    "Port": {
      "base": null,
      "refs": {
        "CreateListenerInput$Port": "<p>The port on which the load balancer is listening.</p>",
        "CreateTargetGroupInput$Port": "<p>The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply.</p>",
        "Listener$Port": "<p>The port on which the load balancer is listening.</p>",
        "ModifyListenerInput$Port": "<p>The port for connections from clients to the load balancer.</p>",
        "TargetDescription$Port": "<p>The port on which the target is listening.</p>",
        "TargetGroup$Port": "<p>The port on which the targets are listening.</p>"
      }
    },
    "PriorityInUseException": {
      "base": "<p>The specified priority is in use.</p>",
      "refs": {
      }
    },
    "ProtocolEnum": {
      "base": null,
      "refs": {
        "CreateListenerInput$Protocol": "<p>The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP and TLS.</p>",
        "CreateTargetGroupInput$Protocol": "<p>The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP and TLS. If the target is a Lambda function, this parameter does not apply.</p>",
        "CreateTargetGroupInput$HealthCheckProtocol": "<p>The protocol the load balancer uses when performing health checks on targets. For Application Load Balancers, the default is HTTP. For Network Load Balancers, the default is TCP. The TCP protocol is supported for health checks only if the protocol of the target group is TCP or TLS. The TLS protocol is not supported for health checks.</p>",
        "Listener$Protocol": "<p>The protocol for connections from clients to the load balancer.</p>",
        "ModifyListenerInput$Protocol": "<p>The protocol for connections from clients to the load balancer. Application Load Balancers support the HTTP and HTTPS protocols. Network Load Balancers support the TCP and TLS protocols.</p>",
        "ModifyTargetGroupInput$HealthCheckProtocol": "<p>The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported for health checks only if the protocol of the target group is TCP or TLS. The TLS protocol is not supported for health checks.</p> <p>If the protocol of the target group is TCP, you can't modify this setting.</p>",
        "TargetGroup$Protocol": "<p>The protocol to use for routing traffic to the targets.</p>",
        "TargetGroup$HealthCheckProtocol": "<p>The protocol to use to connect with the target.</p>"
      }
    },
    "QueryStringConditionConfig": {
      "base": null,
      "refs": {
        "RuleCondition$QueryStringConfig": null
      }
    },
    "QueryStringKeyValuePair": {
      "base": null,
      "refs": {
        "QueryStringKeyValuePairList$member": null
      }
    },
    "QueryStringKeyValuePairList": {
      "base": null,
      "refs": {
        "QueryStringConditionConfig$Values": null
      }
    },
    "RedirectActionConfig": {
      "base": "<p>Information about a redirect action.</p> <p>A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values.</p> <p>You can reuse URI components using the following reserved keywords:</p> <ul> <li> <p>#{protocol}</p> </li> <li> <p>#{host}</p> </li> <li> <p>#{port}</p> </li> <li> <p>#{path} (the leading \"/\" is removed)</p> </li> <li> <p>#{query}</p> </li> </ul> <p>For example, you can change the path to \"/new/#{path}\", the hostname to \"example.#{host}\", or the query to \"#{query}&amp;value=xyz\".</p>",
      "refs": {
        "Action$RedirectConfig": "<p>[Application Load Balancer] Information for creating a redirect action. Specify only when <code>Type</code> is <code>redirect</code>.</p>"
      }
    },
    "RedirectActionHost": {
      "base": null,
      "refs": {
        "RedirectActionConfig$Host": "<p>The hostname. This component is not percent-encoded. The hostname can contain #{host}.</p>"
      }
    },
    "RedirectActionPath": {
      "base": null,
      "refs": {
        "RedirectActionConfig$Path": "<p>The absolute path, starting with the leading \"/\". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.</p>"
      }
    },
    "RedirectActionPort": {
      "base": null,
      "refs": {
        "RedirectActionConfig$Port": "<p>The port. You can specify a value from 1 to 65535 or #{port}.</p>"
      }
    },
    "RedirectActionProtocol": {
      "base": null,
      "refs": {
        "RedirectActionConfig$Protocol": "<p>The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.</p>"
      }
    },
    "RedirectActionQuery": {
      "base": null,
      "refs": {
        "RedirectActionConfig$Query": "<p>The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading \"?\", as it is automatically added. You can specify any of the reserved keywords.</p>"
      }
    },
    "RedirectActionStatusCodeEnum": {
      "base": null,
      "refs": {
        "RedirectActionConfig$StatusCode": "<p>The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).</p>"
      }
    },
    "RegisterTargetsInput": {
      "base": null,
      "refs": {
      }
    },
    "RegisterTargetsOutput": {
      "base": null,
      "refs": {
      }
    },
    "RemoveListenerCertificatesInput": {
      "base": null,
      "refs": {
      }
    },
    "RemoveListenerCertificatesOutput": {
      "base": null,
      "refs": {
      }
    },
    "RemoveTagsInput": {
      "base": null,
      "refs": {
      }
    },
    "RemoveTagsOutput": {
      "base": null,
      "refs": {
      }
    },
    "ResourceArn": {
      "base": null,
      "refs": {
        "ResourceArns$member": null,
        "TagDescription$ResourceArn": "<p>The Amazon Resource Name (ARN) of the resource.</p>"
      }
    },
    "ResourceArns": {
      "base": null,
      "refs": {
        "AddTagsInput$ResourceArns": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
        "DescribeTagsInput$ResourceArns": "<p>The Amazon Resource Names (ARN) of the resources.</p>",
        "RemoveTagsInput$ResourceArns": "<p>The Amazon Resource Name (ARN) of the resource.</p>"
      }
    },
    "ResourceInUseException": {
      "base": "<p>A specified resource is in use.</p>",
      "refs": {
      }
    },
    "Rule": {
      "base": "<p>Information about a rule.</p>",
      "refs": {
        "Rules$member": null
      }
    },
    "RuleArn": {
      "base": null,
      "refs": {
        "DeleteRuleInput$RuleArn": "<p>The Amazon Resource Name (ARN) of the rule.</p>",
        "ModifyRuleInput$RuleArn": "<p>The Amazon Resource Name (ARN) of the rule.</p>",
        "Rule$RuleArn": "<p>The Amazon Resource Name (ARN) of the rule.</p>",
        "RuleArns$member": null,
        "RulePriorityPair$RuleArn": "<p>The Amazon Resource Name (ARN) of the rule.</p>"
      }
    },
    "RuleArns": {
      "base": null,
      "refs": {
        "DescribeRulesInput$RuleArns": "<p>The Amazon Resource Names (ARN) of the rules.</p>"
      }
    },
    "RuleCondition": {
      "base": "<p>Information about a condition for a rule.</p>",
      "refs": {
        "RuleConditionList$member": null
      }
    },
    "RuleConditionList": {
      "base": null,
      "refs": {
        "CreateRuleInput$Conditions": "<p>The conditions. Each condition specifies a field name and a single value.</p> <p>If the field name is <code>host-header</code>, you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>- .</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul> <p>If the field name is <code>path-pattern</code>, you can specify a single path pattern. A path pattern is case-sensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ \" ' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>",
        "ModifyRuleInput$Conditions": "<p>The conditions. Each condition specifies a field name and a single value.</p> <p>If the field name is <code>host-header</code>, you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>- .</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul> <p>If the field name is <code>path-pattern</code>, you can specify a single path pattern. A path pattern is case-sensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ \" ' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>",
        "Rule$Conditions": "<p>The conditions.</p>"
      }
    },
    "RuleNotFoundException": {
      "base": "<p>The specified rule does not exist.</p>",
      "refs": {
      }
    },
    "RulePriority": {
      "base": null,
      "refs": {
        "CreateRuleInput$Priority": "<p>The rule priority. A listener can't have multiple rules with the same priority.</p>",
        "RulePriorityPair$Priority": "<p>The rule priority.</p>"
      }
    },
    "RulePriorityList": {
      "base": null,
      "refs": {
        "SetRulePrioritiesInput$RulePriorities": "<p>The rule priorities.</p>"
      }
    },
    "RulePriorityPair": {
      "base": "<p>Information about the priorities for the rules for a listener.</p>",
      "refs": {
        "RulePriorityList$member": null
      }
    },
    "Rules": {
      "base": null,
      "refs": {
        "CreateRuleOutput$Rules": "<p>Information about the rule.</p>",
        "DescribeRulesOutput$Rules": "<p>Information about the rules.</p>",
        "ModifyRuleOutput$Rules": "<p>Information about the modified rule.</p>",
        "SetRulePrioritiesOutput$Rules": "<p>Information about the rules.</p>"
      }
    },
    "SSLPolicyNotFoundException": {
      "base": "<p>The specified SSL policy does not exist.</p>",
      "refs": {
      }
    },
    "SecurityGroupId": {
      "base": null,
      "refs": {
        "SecurityGroups$member": null
      }
    },
    "SecurityGroups": {
      "base": null,
      "refs": {
        "CreateLoadBalancerInput$SecurityGroups": "<p>[Application Load Balancers] The IDs of the security groups for the load balancer.</p>",
        "LoadBalancer$SecurityGroups": "<p>The IDs of the security groups for the load balancer.</p>",
        "SetSecurityGroupsInput$SecurityGroups": "<p>The IDs of the security groups.</p>",
        "SetSecurityGroupsOutput$SecurityGroupIds": "<p>The IDs of the security groups associated with the load balancer.</p>"
      }
    },
    "SetIpAddressTypeInput": {
      "base": null,
      "refs": {
      }
    },
    "SetIpAddressTypeOutput": {
      "base": null,
      "refs": {
      }
    },
    "SetRulePrioritiesInput": {
      "base": null,
      "refs": {
      }
    },
    "SetRulePrioritiesOutput": {
      "base": null,
      "refs": {
      }
    },
    "SetSecurityGroupsInput": {
      "base": null,
      "refs": {
      }
    },
    "SetSecurityGroupsOutput": {
      "base": null,
      "refs": {
      }
    },
    "SetSubnetsInput": {
      "base": null,
      "refs": {
      }
    },
    "SetSubnetsOutput": {
      "base": null,
      "refs": {
      }
    },
    "SourceIpConditionConfig": {
      "base": null,
      "refs": {
        "RuleCondition$SourceIpConfig": null
      }
    },
    "SslPolicies": {
      "base": null,
      "refs": {
        "DescribeSSLPoliciesOutput$SslPolicies": "<p>Information about the policies.</p>"
      }
    },
    "SslPolicy": {
      "base": "<p>Information about a policy used for SSL negotiation.</p>",
      "refs": {
        "SslPolicies$member": null
      }
    },
    "SslPolicyName": {
      "base": null,
      "refs": {
        "CreateListenerInput$SslPolicy": "<p>[HTTPS and TLS listeners] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.</p>",
        "Listener$SslPolicy": "<p>The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.</p>",
        "ModifyListenerInput$SslPolicy": "<p>[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies\">Security Policies</a> in the <i>Application Load Balancers Guide</i>.</p>",
        "SslPolicy$Name": "<p>The name of the policy.</p>",
        "SslPolicyNames$member": null
      }
    },
    "SslPolicyNames": {
      "base": null,
      "refs": {
        "DescribeSSLPoliciesInput$Names": "<p>The names of the policies.</p>"
      }
    },
    "SslProtocol": {
      "base": null,
      "refs": {
        "SslProtocols$member": null
      }
    },
    "SslProtocols": {
      "base": null,
      "refs": {
        "SslPolicy$SslProtocols": "<p>The protocols.</p>"
      }
    },
    "StateReason": {
      "base": null,
      "refs": {
        "LoadBalancerState$Reason": "<p>A description of the state.</p>"
      }
    },
    "String": {
      "base": null,
      "refs": {
        "Rule$Priority": "<p>The priority.</p>"
      }
    },
    "StringValue": {
      "base": null,
      "refs": {
        "ListOfString$member": null,
        "QueryStringKeyValuePair$Key": null,
        "QueryStringKeyValuePair$Value": null
      }
    },
    "SubnetId": {
      "base": null,
      "refs": {
        "AvailabilityZone$SubnetId": "<p>The ID of the subnet.</p>",
        "SubnetMapping$SubnetId": "<p>The ID of the subnet.</p>",
        "Subnets$member": null
      }
    },
    "SubnetMapping": {
      "base": "<p>Information about a subnet mapping.</p>",
      "refs": {
        "SubnetMappings$member": null
      }
    },
    "SubnetMappings": {
      "base": null,
      "refs": {
        "CreateLoadBalancerInput$SubnetMappings": "<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet.</p>",
        "SetSubnetsInput$SubnetMappings": "<p>The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>You cannot specify Elastic IP addresses for your subnets.</p>"
      }
    },
    "SubnetNotFoundException": {
      "base": "<p>The specified subnet does not exist.</p>",
      "refs": {
      }
    },
    "Subnets": {
      "base": null,
      "refs": {
        "CreateLoadBalancerInput$Subnets": "<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones.</p>",
        "SetSubnetsInput$Subnets": "<p>The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p>"
      }
    },
    "Tag": {
      "base": "<p>Information about a tag.</p>",
      "refs": {
        "TagList$member": null
      }
    },
    "TagDescription": {
      "base": "<p>The tags associated with a resource.</p>",
      "refs": {
        "TagDescriptions$member": null
      }
    },
    "TagDescriptions": {
      "base": null,
      "refs": {
        "DescribeTagsOutput$TagDescriptions": "<p>Information about the tags.</p>"
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "Tag$Key": "<p>The key of the tag.</p>",
        "TagKeys$member": null
      }
    },
    "TagKeys": {
      "base": null,
      "refs": {
        "RemoveTagsInput$TagKeys": "<p>The tag keys for the tags to remove.</p>"
      }
    },
    "TagList": {
      "base": null,
      "refs": {
        "AddTagsInput$Tags": "<p>The tags. Each resource can have a maximum of 10 tags.</p>",
        "CreateLoadBalancerInput$Tags": "<p>One or more tags to assign to the load balancer.</p>",
        "TagDescription$Tags": "<p>Information about the tags.</p>"
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "Tag$Value": "<p>The value of the tag.</p>"
      }
    },
    "TargetDescription": {
      "base": "<p>Information about a target.</p>",
      "refs": {
        "TargetDescriptions$member": null,
        "TargetHealthDescription$Target": "<p>The description of the target.</p>"
      }
    },
    "TargetDescriptions": {
      "base": null,
      "refs": {
        "DeregisterTargetsInput$Targets": "<p>The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.</p>",
        "DescribeTargetHealthInput$Targets": "<p>The targets.</p>",
        "RegisterTargetsInput$Targets": "<p>The targets.</p> <p>To register a target by instance ID, specify the instance ID. To register a target by IP address, specify the IP address. To register a Lambda function, specify the ARN of the Lambda function.</p>"
      }
    },
    "TargetGroup": {
      "base": "<p>Information about a target group.</p>",
      "refs": {
        "TargetGroups$member": null
      }
    },
    "TargetGroupArn": {
      "base": null,
      "refs": {
        "Action$TargetGroupArn": "<p>The Amazon Resource Name (ARN) of the target group. Specify only when <code>Type</code> is <code>forward</code>.</p>",
        "DeleteTargetGroupInput$TargetGroupArn": "<p>The Amazon Resource Name (ARN) of the target group.</p>",
        "DeregisterTargetsInput$TargetGroupArn": "<p>The Amazon Resource Name (ARN) of the target group.</p>",
        "DescribeTargetGroupAttributesInput$TargetGroupArn": "<p>The Amazon Resource Name (ARN) of the target group.</p>",
        "DescribeTargetHealthInput$TargetGroupArn": "<p>The Amazon Resource Name (ARN) of the target group.</p>",
        "ModifyTargetGroupAttributesInput$TargetGroupArn": "<p>The Amazon Resource Name (ARN) of the target group.</p>",
        "ModifyTargetGroupInput$TargetGroupArn": "<p>The Amazon Resource Name (ARN) of the target group.</p>",
        "RegisterTargetsInput$TargetGroupArn": "<p>The Amazon Resource Name (ARN) of the target group.</p>",
        "TargetGroup$TargetGroupArn": "<p>The Amazon Resource Name (ARN) of the target group.</p>",
        "TargetGroupArns$member": null
      }
    },
    "TargetGroupArns": {
      "base": null,
      "refs": {
        "DescribeTargetGroupsInput$TargetGroupArns": "<p>The Amazon Resource Names (ARN) of the target groups.</p>"
      }
    },
    "TargetGroupAssociationLimitException": {
      "base": "<p>You've reached the limit on the number of load balancers per target group.</p>",
      "refs": {
      }
    },
    "TargetGroupAttribute": {
      "base": "<p>Information about a target group attribute.</p>",
      "refs": {
        "TargetGroupAttributes$member": null
      }
    },
    "TargetGroupAttributeKey": {
      "base": null,
      "refs": {
        "TargetGroupAttribute$Key": "<p>The name of the attribute.</p> <p>The following attribute is supported by both Application Load Balancers and Network Load Balancers:</p> <ul> <li> <p> <code>deregistration_delay.timeout_seconds</code> - The amount of time, in seconds, for Elastic Load Balancing to wait before changing the state of a deregistering target from <code>draining</code> to <code>unused</code>. The range is 0-3600 seconds. The default value is 300 seconds. If the target is a Lambda function, this attribute is not supported.</p> </li> </ul> <p>The following attributes are supported by Application Load Balancers if the target is not a Lambda function:</p> <ul> <li> <p> <code>slow_start.duration_seconds</code> - The time period, in seconds, during which a newly registered target receives a linearly increasing share of the traffic to the target group. After this time period ends, the target receives its full share of traffic. The range is 30-900 seconds (15 minutes). Slow start mode is disabled by default.</p> </li> <li> <p> <code>stickiness.enabled</code> - Indicates whether sticky sessions are enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> <li> <p> <code>stickiness.type</code> - The type of sticky sessions. The possible value is <code>lb_cookie</code>.</p> </li> <li> <p> <code>stickiness.lb_cookie.duration_seconds</code> - The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).</p> </li> </ul> <p>The following attribute is supported only if the target is a Lambda function.</p> <ul> <li> <p> <code>lambda.multi_value_headers.enabled</code> - Indicates whether the request and response headers exchanged between the load balancer and the Lambda function include arrays of values or strings. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>. If the value is <code>false</code> and the request contains a duplicate header field name or query parameter key, the load balancer uses the last value sent by the client.</p> </li> </ul> <p>The following attribute is supported only by Network Load Balancers:</p> <ul> <li> <p> <code>proxy_protocol_v2.enabled</code> - Indicates whether Proxy Protocol version 2 is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> </ul>"
      }
    },
    "TargetGroupAttributeValue": {
      "base": null,
      "refs": {
        "TargetGroupAttribute$Value": "<p>The value of the attribute.</p>"
      }
    },
    "TargetGroupAttributes": {
      "base": null,
      "refs": {
        "DescribeTargetGroupAttributesOutput$Attributes": "<p>Information about the target group attributes</p>",
        "ModifyTargetGroupAttributesInput$Attributes": "<p>The attributes.</p>",
        "ModifyTargetGroupAttributesOutput$Attributes": "<p>Information about the attributes.</p>"
      }
    },
    "TargetGroupName": {
      "base": null,
      "refs": {
        "CreateTargetGroupInput$Name": "<p>The name of the target group.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>",
        "TargetGroup$TargetGroupName": "<p>The name of the target group.</p>",
        "TargetGroupNames$member": null
      }
    },
    "TargetGroupNames": {
      "base": null,
      "refs": {
        "DescribeTargetGroupsInput$Names": "<p>The names of the target groups.</p>"
      }
    },
    "TargetGroupNotFoundException": {
      "base": "<p>The specified target group does not exist.</p>",
      "refs": {
      }
    },
    "TargetGroups": {
      "base": null,
      "refs": {
        "CreateTargetGroupOutput$TargetGroups": "<p>Information about the target group.</p>",
        "DescribeTargetGroupsOutput$TargetGroups": "<p>Information about the target groups.</p>",
        "ModifyTargetGroupOutput$TargetGroups": "<p>Information about the modified target group.</p>"
      }
    },
    "TargetHealth": {
      "base": "<p>Information about the current health of a target.</p>",
      "refs": {
        "TargetHealthDescription$TargetHealth": "<p>The health information for the target.</p>"
      }
    },
    "TargetHealthDescription": {
      "base": "<p>Information about the health of a target.</p>",
      "refs": {
        "TargetHealthDescriptions$member": null
      }
    },
    "TargetHealthDescriptions": {
      "base": null,
      "refs": {
        "DescribeTargetHealthOutput$TargetHealthDescriptions": "<p>Information about the health of the targets.</p>"
      }
    },
    "TargetHealthReasonEnum": {
      "base": null,
      "refs": {
        "TargetHealth$Reason": "<p>The reason code.</p> <p>If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The health checks failed because the connection to the target timed out, the target response was malformed, or the target failed the health check for an unknown reason.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul> <p>If the target state is <code>unavailable</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.HealthCheckDisabled</code> - Health checks are disabled for the target group.</p> </li> </ul>"
      }
    },
    "TargetHealthStateEnum": {
      "base": null,
      "refs": {
        "TargetHealth$State": "<p>The state of the target.</p>"
      }
    },
    "TargetId": {
      "base": null,
      "refs": {
        "TargetDescription$Id": "<p>The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address. If the target type is <code>lambda</code>, specify the ARN of the Lambda function.</p>"
      }
    },
    "TargetTypeEnum": {
      "base": null,
      "refs": {
        "CreateTargetGroupInput$TargetType": "<p>The type of target that you must specify when registering targets with this target group. You can't specify targets for a target group using more than one target type.</p> <ul> <li> <p> <code>instance</code> - Targets are specified by instance ID. This is the default value.</p> </li> <li> <p> <code>ip</code> - Targets are specified by IP address. You can specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.</p> </li> <li> <p> <code>lambda</code> - The target groups contains a single Lambda function.</p> </li> </ul>",
        "TargetGroup$TargetType": "<p>The type of target that you must specify when registering targets with this target group. The possible values are <code>instance</code> (targets are specified by instance ID) or <code>ip</code> (targets are specified by IP address).</p>"
      }
    },
    "TooManyActionsException": {
      "base": "<p>You've reached the limit on the number of actions per rule.</p>",
      "refs": {
      }
    },
    "TooManyCertificatesException": {
      "base": "<p>You've reached the limit on the number of certificates per load balancer.</p>",
      "refs": {
      }
    },
    "TooManyListenersException": {
      "base": "<p>You've reached the limit on the number of listeners per load balancer.</p>",
      "refs": {
      }
    },
    "TooManyLoadBalancersException": {
      "base": "<p>You've reached the limit on the number of load balancers for your AWS account.</p>",
      "refs": {
      }
    },
    "TooManyRegistrationsForTargetIdException": {
      "base": "<p>You've reached the limit on the number of times a target can be registered with a load balancer.</p>",
      "refs": {
      }
    },
    "TooManyRulesException": {
      "base": "<p>You've reached the limit on the number of rules per load balancer.</p>",
      "refs": {
      }
    },
    "TooManyTagsException": {
      "base": "<p>You've reached the limit on the number of tags per load balancer.</p>",
      "refs": {
      }
    },
    "TooManyTargetGroupsException": {
      "base": "<p>You've reached the limit on the number of target groups for your AWS account.</p>",
      "refs": {
      }
    },
    "TooManyTargetsException": {
      "base": "<p>You've reached the limit on the number of targets.</p>",
      "refs": {
      }
    },
    "UnsupportedProtocolException": {
      "base": "<p>The specified protocol is not supported.</p>",
      "refs": {
      }
    },
    "VpcId": {
      "base": null,
      "refs": {
        "CreateTargetGroupInput$VpcId": "<p>The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply.</p>",
        "LoadBalancer$VpcId": "<p>The ID of the VPC for the load balancer.</p>",
        "TargetGroup$VpcId": "<p>The ID of the VPC for the targets.</p>"
      }
    },
    "ZoneName": {
      "base": null,
      "refs": {
        "AvailabilityZone$ZoneName": "<p>The name of the Availability Zone.</p>",
        "TargetDescription$AvailabilityZone": "<p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code>.</p> <p>If the target type is <code>ip</code> and the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>With an Application Load Balancer, if the target type is <code>ip</code> and the IP address is outside the VPC for the target group, the only supported value is <code>all</code>.</p> <p>If the target type is <code>lambda</code>, this parameter is optional and the only supported value is <code>all</code>.</p>"
      }
    }
  }
}
