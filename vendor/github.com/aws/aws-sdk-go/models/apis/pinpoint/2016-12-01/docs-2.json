{
  "version" : "2.0",
  "service" : null,
  "operations" : {
    "CreateCampaign" : "Creates or updates a campaign.",
    "CreateImportJob" : "Creates or updates an import job.",
    "CreateSegment" : "Used to create or update a segment.",
    "DeleteApnsChannel" : "Deletes the APNs channel for an app.",
    "DeleteCampaign" : "Deletes a campaign.",
    "DeleteEventStream" : "Deletes the event stream for an app.",
    "DeleteGcmChannel" : "Deletes the GCM channel for an app.",
    "DeleteSegment" : "Deletes a segment.",
    "GetApnsChannel" : "Returns information about the APNs channel for an app.",
    "GetApplicationSettings" : "Used to request the settings for an app.",
    "GetCampaign" : "Returns information about a campaign.",
    "GetCampaignActivities" : "Returns information about the activity performed by a campaign.",
    "GetCampaignVersion" : "Returns information about a specific version of a campaign.",
    "GetCampaignVersions" : "Returns information about your campaign versions.",
    "GetCampaigns" : "Returns information about your campaigns.",
    "GetEndpoint" : "Returns information about an endpoint.",
    "GetEventStream" : "Returns the event stream for an app.",
    "GetGcmChannel" : "Returns information about the GCM channel for an app.",
    "GetImportJob" : "Returns information about an import job.",
    "GetImportJobs" : "Returns information about your import jobs.",
    "GetSegment" : "Returns information about a segment.",
    "GetSegmentImportJobs" : "Returns a list of import jobs for a specific segment.",
    "GetSegmentVersion" : "Returns information about a segment version.",
    "GetSegmentVersions" : "Returns information about your segment versions.",
    "GetSegments" : "Used to get information about your segments.",
    "PutEventStream" : "Use to create or update the event stream for an app.",
    "UpdateApnsChannel" : "Use to update the APNs channel for an app.",
    "UpdateApplicationSettings" : "Used to update the settings for an app.",
    "UpdateCampaign" : "Use to update a campaign.",
    "UpdateEndpoint" : "Use to update an endpoint.",
    "UpdateEndpointsBatch" : "Use to update a batch of endpoints.",
    "UpdateGcmChannel" : "Use to update the GCM channel for an app.",
    "UpdateSegment" : "Use to update a segment."
  },
  "shapes" : {
    "APNSChannelRequest" : {
      "base" : "Apple Push Notification Service channel definition.",
      "refs" : { }
    },
    "APNSChannelResponse" : {
      "base" : "Apple Distribution Push Notification Service channel definition.",
      "refs" : { }
    },
    "Action" : {
      "base" : null,
      "refs" : {
        "Message$Action" : "The action that occurs if the user taps a push notification delivered by the campaign:\nOPEN_APP – Your app launches, or it becomes the foreground app if it has been sent to the background. This is the default action.\n\nDEEP_LINK – Uses deep linking features in iOS and Android to open your app and display a designated user interface within the app.\n\nURL – The default mobile browser on the user's device launches and opens a web page at the URL you specify."
      }
    },
    "ActivitiesResponse" : {
      "base" : "Activities for campaign.",
      "refs" : { }
    },
    "ActivityResponse" : {
      "base" : "Activity definition",
      "refs" : {
        "ActivitiesResponse$Item" : "List of campaign activities"
      }
    },
    "ApplicationSettingsResource" : {
      "base" : "Application settings.",
      "refs" : { }
    },
    "AttributeDimension" : {
      "base" : "Custom attibute dimension",
      "refs" : {
        "SegmentDimensions$Attributes" : "Custom segment attributes.",
        "SegmentDimensions$UserAttributes" : "Custom segment user attributes."
      }
    },
    "AttributeType" : {
      "base" : null,
      "refs" : {
        "AttributeDimension$AttributeType" : "The type of dimension:\nINCLUSIVE – Endpoints that match the criteria are included in the segment.\nEXCLUSIVE – Endpoints that match the criteria are excluded from the segment."
      }
    },
    "BadRequestException" : {
      "base" : "400 response",
      "refs" : { }
    },
    "CampaignLimits" : {
      "base" : "Campaign Limits are used to limit the number of messages that can be sent to a user.",
      "refs" : {
        "ApplicationSettingsResource$Limits" : "The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own.",
        "CampaignResponse$Limits" : "The campaign limits settings.",
        "WriteApplicationSettingsRequest$Limits" : "The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own.",
        "WriteCampaignRequest$Limits" : "The campaign limits settings."
      }
    },
    "CampaignResponse" : {
      "base" : "Campaign definition",
      "refs" : {
        "CampaignsResponse$Item" : "A list of campaigns."
      }
    },
    "CampaignState" : {
      "base" : "State of the Campaign",
      "refs" : {
        "CampaignResponse$DefaultState" : "The status of the campaign's default treatment. Only present for A/B test campaigns.",
        "CampaignResponse$State" : "The campaign status.\n\nAn A/B test campaign will have a status of COMPLETED only when all treatments have a status of COMPLETED.",
        "TreatmentResource$State" : "The treatment status."
      }
    },
    "CampaignStatus" : {
      "base" : null,
      "refs" : {
        "CampaignState$CampaignStatus" : "The status of the campaign, or the status of a treatment that belongs to an A/B test campaign.\n\nValid values: SCHEDULED, EXECUTING, PENDING_NEXT_RUN, COMPLETED, PAUSED"
      }
    },
    "CampaignsResponse" : {
      "base" : "List of available campaigns.",
      "refs" : { }
    },
    "ChannelType" : {
      "base" : null,
      "refs" : {
        "EndpointBatchItem$ChannelType" : "The channel type.\n\nValid values: APNS, GCM",
        "EndpointRequest$ChannelType" : "The channel type.\n\nValid values: APNS, GCM",
        "EndpointResponse$ChannelType" : "The channel type.\n\nValid values: APNS, GCM"
      }
    },
    "DimensionType" : {
      "base" : null,
      "refs" : {
        "SetDimension$DimensionType" : "The type of dimension:\nINCLUSIVE – Endpoints that match the criteria are included in the segment.\nEXCLUSIVE – Endpoints that match the criteria are excluded from the segment."
      }
    },
    "Duration" : {
      "base" : null,
      "refs" : {
        "RecencyDimension$Duration" : "The length of time during which users have been active or inactive with your app.\nValid values: HR_24, DAY_7, DAY_14, DAY_30"
      }
    },
    "EndpointBatchItem" : {
      "base" : "Endpoint update request",
      "refs" : {
        "EndpointBatchRequest$Item" : "List of items to update. Maximum 100 items"
      }
    },
    "EndpointBatchRequest" : {
      "base" : "Endpoint batch update request.",
      "refs" : { }
    },
    "EndpointDemographic" : {
      "base" : "Endpoint demographic data",
      "refs" : {
        "EndpointBatchItem$Demographic" : "The endpoint demographic attributes.",
        "EndpointRequest$Demographic" : "The endpoint demographic attributes.",
        "EndpointResponse$Demographic" : "The endpoint demographic attributes."
      }
    },
    "EndpointLocation" : {
      "base" : "Endpoint location data",
      "refs" : {
        "EndpointBatchItem$Location" : "The endpoint location attributes.",
        "EndpointRequest$Location" : "The endpoint location attributes.",
        "EndpointResponse$Location" : "The endpoint location attributes."
      }
    },
    "EndpointRequest" : {
      "base" : "Endpoint update request",
      "refs" : { }
    },
    "EndpointResponse" : {
      "base" : "Endpoint response",
      "refs" : { }
    },
    "EndpointUser" : {
      "base" : "Endpoint user specific custom userAttributes",
      "refs" : {
        "EndpointBatchItem$User" : "Custom user-specific attributes that your app reports to Amazon Pinpoint.",
        "EndpointRequest$User" : "Custom user-specific attributes that your app reports to Amazon Pinpoint.",
        "EndpointResponse$User" : "Custom user-specific attributes that your app reports to Amazon Pinpoint."
      }
    },
    "EventStream" : {
      "base" : "Model for an event publishing subscription export.",
      "refs" : { }
    },
    "ForbiddenException" : {
      "base" : "403 response",
      "refs" : { }
    },
    "Format" : {
      "base" : null,
      "refs" : {
        "ImportJobRequest$Format" : "The format of the files that contain the endpoint definitions.\nValid values: CSV, JSON",
        "ImportJobResource$Format" : "The format of the files that contain the endpoint definitions.\nValid values: CSV, JSON",
        "SegmentImportResource$Format" : "The format of the endpoint files that were imported to create this segment.\nValid values: CSV, JSON"
      }
    },
    "Frequency" : {
      "base" : null,
      "refs" : {
        "Schedule$Frequency" : "How often the campaign delivers messages.\n\nValid values: ONCE, HOURLY, DAILY, WEEKLY, MONTHLY"
      }
    },
    "GCMChannelRequest" : {
      "base" : "Google Cloud Messaging credentials",
      "refs" : { }
    },
    "GCMChannelResponse" : {
      "base" : "Google Cloud Messaging channel definition",
      "refs" : { }
    },
    "ImportJobRequest" : {
      "base" : null,
      "refs" : { }
    },
    "ImportJobResource" : {
      "base" : null,
      "refs" : {
        "ImportJobResponse$Definition" : "The import job settings."
      }
    },
    "ImportJobResponse" : {
      "base" : null,
      "refs" : {
        "ImportJobsResponse$Item" : "A list of import jobs for the application."
      }
    },
    "ImportJobsResponse" : {
      "base" : "Import job list.",
      "refs" : { }
    },
    "InternalServerErrorException" : {
      "base" : "500 response",
      "refs" : { }
    },
    "JobStatus" : {
      "base" : null,
      "refs" : {
        "ImportJobResponse$JobStatus" : "The status of the import job.\nValid values: CREATED, INITIALIZING, PROCESSING, COMPLETING, COMPLETED, FAILING, FAILED\n\nThe job status is FAILED if one or more pieces failed to import."
      }
    },
    "ListOfActivityResponse" : {
      "base" : null,
      "refs" : { }
    },
    "ListOfCampaignResponse" : {
      "base" : null,
      "refs" : { }
    },
    "ListOfEndpointBatchItem" : {
      "base" : null,
      "refs" : { }
    },
    "ListOfImportJobResponse" : {
      "base" : null,
      "refs" : { }
    },
    "ListOfSegmentResponse" : {
      "base" : null,
      "refs" : { }
    },
    "ListOfTreatmentResource" : {
      "base" : null,
      "refs" : { }
    },
    "ListOfWriteTreatmentResource" : {
      "base" : null,
      "refs" : { }
    },
    "ListOf__string" : {
      "base" : null,
      "refs" : { }
    },
    "MapOfAttributeDimension" : {
      "base" : null,
      "refs" : { }
    },
    "MapOfListOf__string" : {
      "base" : null,
      "refs" : { }
    },
    "MapOf__double" : {
      "base" : null,
      "refs" : { }
    },
    "Message" : {
      "base" : null,
      "refs" : {
        "MessageConfiguration$APNSMessage" : "The message that the campaign delivers to APNS channels. Overrides the default message.",
        "MessageConfiguration$DefaultMessage" : "The default message for all channels.",
        "MessageConfiguration$GCMMessage" : "The message that the campaign delivers to GCM channels. Overrides the default message."
      }
    },
    "MessageBody" : {
      "base" : "Simple message object.",
      "refs" : { }
    },
    "MessageConfiguration" : {
      "base" : "Message configuration for a campaign.",
      "refs" : {
        "CampaignResponse$MessageConfiguration" : "The message configuration settings.",
        "TreatmentResource$MessageConfiguration" : "The message configuration settings.",
        "WriteCampaignRequest$MessageConfiguration" : "The message configuration settings.",
        "WriteTreatmentResource$MessageConfiguration" : "The message configuration settings."
      }
    },
    "MethodNotAllowedException" : {
      "base" : "405 response",
      "refs" : { }
    },
    "NotFoundException" : {
      "base" : "404 response",
      "refs" : { }
    },
    "QuietTime" : {
      "base" : "Quiet Time",
      "refs" : {
        "ApplicationSettingsResource$QuietTime" : "The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own.",
        "Schedule$QuietTime" : "The time during which the campaign sends no messages.",
        "WriteApplicationSettingsRequest$QuietTime" : "The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own."
      }
    },
    "RecencyDimension" : {
      "base" : "Define how a segment based on recency of use.",
      "refs" : {
        "SegmentBehaviors$Recency" : "The recency of use."
      }
    },
    "RecencyType" : {
      "base" : null,
      "refs" : {
        "RecencyDimension$RecencyType" : "The recency dimension type:\nACTIVE – Users who have used your app within the specified duration are included in the segment.\nINACTIVE – Users who have not used your app within the specified duration are included in the segment."
      }
    },
    "Schedule" : {
      "base" : "Shcedule that defines when a campaign is run.",
      "refs" : {
        "CampaignResponse$Schedule" : "The campaign schedule.",
        "TreatmentResource$Schedule" : "The campaign schedule.",
        "WriteCampaignRequest$Schedule" : "The campaign schedule.",
        "WriteTreatmentResource$Schedule" : "The campaign schedule."
      }
    },
    "SegmentBehaviors" : {
      "base" : "Segment behavior dimensions",
      "refs" : {
        "SegmentDimensions$Behavior" : "The segment behaviors attributes."
      }
    },
    "SegmentDemographics" : {
      "base" : "Segment demographic dimensions",
      "refs" : {
        "SegmentDimensions$Demographic" : "The segment demographics attributes."
      }
    },
    "SegmentDimensions" : {
      "base" : "Segment dimensions",
      "refs" : {
        "SegmentResponse$Dimensions" : "The segment dimensions attributes.",
        "WriteSegmentRequest$Dimensions" : "The segment dimensions attributes."
      }
    },
    "SegmentImportResource" : {
      "base" : "Segment import definition.",
      "refs" : {
        "SegmentResponse$ImportDefinition" : "The import job settings."
      }
    },
    "SegmentLocation" : {
      "base" : "Segment location dimensions",
      "refs" : {
        "SegmentDimensions$Location" : "The segment location attributes."
      }
    },
    "SegmentResponse" : {
      "base" : "Segment definition.",
      "refs" : {
        "SegmentsResponse$Item" : "The list of segments."
      }
    },
    "SegmentType" : {
      "base" : null,
      "refs" : {
        "SegmentResponse$SegmentType" : "The segment type:\nDIMENSIONAL – A dynamic segment built from selection criteria based on endpoint data reported by your app. You create this type of segment by using the segment builder in the Amazon Pinpoint console or by making a POST request to the segments resource.\nIMPORT – A static segment built from an imported set of endpoint definitions. You create this type of segment by importing a segment in the Amazon Pinpoint console or by making a POST request to the jobs/import resource."
      }
    },
    "SegmentsResponse" : {
      "base" : "Segments in your account.",
      "refs" : { }
    },
    "SetDimension" : {
      "base" : "Dimension specification of a segment.",
      "refs" : {
        "SegmentDemographics$AppVersion" : "The app version criteria for the segment.",
        "SegmentDemographics$DeviceType" : "The device type criteria for the segment.",
        "SegmentDemographics$Make" : "The device make criteria for the segment.",
        "SegmentDemographics$Model" : "The device model criteria for the segment.",
        "SegmentDemographics$Platform" : "The device platform criteria for the segment.",
        "SegmentLocation$Country" : "The country filter according to ISO 3166-1 Alpha-2 codes."
      }
    },
    "TooManyRequestsException" : {
      "base" : "429 response",
      "refs" : { }
    },
    "TreatmentResource" : {
      "base" : "Treatment resource",
      "refs" : {
        "CampaignResponse$AdditionalTreatments" : "Treatments that are defined in addition to the default treatment."
      }
    },
    "WriteApplicationSettingsRequest" : {
      "base" : "Creating application setting request",
      "refs" : { }
    },
    "WriteCampaignRequest" : {
      "base" : "Used to create a campaign.",
      "refs" : { }
    },
    "WriteEventStream" : {
      "base" : "Request to save an EventStream.",
      "refs" : { }
    },
    "WriteSegmentRequest" : {
      "base" : "Segment definition.",
      "refs" : { }
    },
    "WriteTreatmentResource" : {
      "base" : "Used to create a campaign treatment.",
      "refs" : {
        "WriteCampaignRequest$AdditionalTreatments" : "Treatments that are defined in addition to the default treatment."
      }
    },
    "__boolean" : {
      "base" : null,
      "refs" : {
        "APNSChannelResponse$IsArchived" : "Is this channel archived",
        "CampaignResponse$IsPaused" : "Indicates whether the campaign is paused. A paused campaign does not send messages unless you resume it by setting IsPaused to false.",
        "GCMChannelResponse$IsArchived" : "Is this channel archived",
        "ImportJobRequest$DefineSegment" : "Sets whether the endpoints create a segment when they are imported.",
        "ImportJobRequest$RegisterEndpoints" : "Sets whether the endpoints are registered with Amazon Pinpoint when they are imported.",
        "ImportJobResource$DefineSegment" : "Sets whether the endpoints create a segment when they are imported.",
        "ImportJobResource$RegisterEndpoints" : "Sets whether the endpoints are registered with Amazon Pinpoint when they are imported.",
        "Message$SilentPush" : "Indicates if the message should display on the users device.\n\nSilent pushes can be used for Remote Configuration and Phone Home use cases. ",
        "Schedule$IsLocalTime" : "Indicates whether the campaign schedule takes effect according to each user's local time.",
        "WriteCampaignRequest$IsPaused" : "Indicates whether the campaign is paused. A paused campaign does not send messages unless you resume it by setting IsPaused to false."
      }
    },
    "__double" : {
      "base" : null,
      "refs" : {
        "EndpointLocation$Latitude" : "The latitude of the endpoint location. Rounded to one decimal (Roughly corresponding to a mile).",
        "EndpointLocation$Longitude" : "The longitude of the endpoint location. Rounded to one decimal (Roughly corresponding to a mile)."
      }
    },
    "__integer" : {
      "base" : null,
      "refs" : {
        "APNSChannelResponse$Version" : "Version of channel",
        "ActivityResponse$SuccessfulEndpointCount" : "The total number of endpoints to which the campaign successfully delivered messages.",
        "ActivityResponse$TimezonesCompletedCount" : "The total number of timezones completed.",
        "ActivityResponse$TimezonesTotalCount" : "The total number of unique timezones present in the segment.",
        "ActivityResponse$TotalEndpointCount" : "The total number of endpoints to which the campaign attempts to deliver messages.",
        "CampaignLimits$Daily" : "The maximum number of messages that the campaign can send daily.",
        "CampaignLimits$Total" : "The maximum total number of messages that the campaign can send.",
        "CampaignResponse$HoldoutPercent" : "The allocated percentage of end users who will not receive messages from this campaign.",
        "CampaignResponse$SegmentVersion" : "The version of the segment to which the campaign sends messages.",
        "CampaignResponse$Version" : "The campaign version number.",
        "GCMChannelResponse$Version" : "Version of channel",
        "ImportJobResponse$CompletedPieces" : "The number of pieces that have successfully imported as of the time of the request.",
        "ImportJobResponse$FailedPieces" : "The number of pieces that have failed to import as of the time of the request.",
        "ImportJobResponse$TotalFailures" : "The number of endpoints that failed to import; for example, because of syntax errors.",
        "ImportJobResponse$TotalPieces" : "The total number of pieces that must be imported to finish the job. Each piece is an approximately equal portion of the endpoints to import.",
        "ImportJobResponse$TotalProcessed" : "The number of endpoints that were processed by the import job.",
        "SegmentImportResource$Size" : "The number of endpoints that were successfully imported to create this segment.",
        "SegmentResponse$Version" : "The segment version number.",
        "TreatmentResource$SizePercent" : "The allocated percentage of users for this treatment.",
        "WriteCampaignRequest$HoldoutPercent" : "The allocated percentage of end users who will not receive messages from this campaign.",
        "WriteCampaignRequest$SegmentVersion" : "The version of the segment to which the campaign sends messages.",
        "WriteTreatmentResource$SizePercent" : "The allocated percentage of users for this treatment."
      }
    },
    "__string" : {
      "base" : null,
      "refs" : {
        "APNSChannelRequest$Certificate" : "The distribution certificate from Apple.",
        "APNSChannelRequest$PrivateKey" : "The certificate private key.",
        "APNSChannelResponse$ApplicationId" : "The ID of the application to which the channel applies.",
        "APNSChannelResponse$CreationDate" : "When was this segment created",
        "APNSChannelResponse$Id" : "The unique channel ID.",
        "APNSChannelResponse$LastModifiedBy" : "Who last updated this entry",
        "APNSChannelResponse$LastModifiedDate" : "Last date this was updated",
        "APNSChannelResponse$Platform" : "The platform type. Will be APNS.",
        "ActivityResponse$ApplicationId" : "The ID of the application to which the campaign applies.",
        "ActivityResponse$CampaignId" : "The ID of the campaign to which the activity applies.",
        "ActivityResponse$End" : "The actual time the activity was marked CANCELLED or COMPLETED. Provided in ISO 8601 format.",
        "ActivityResponse$Id" : "The unique activity ID.",
        "ActivityResponse$Result" : "Indicates whether the activity succeeded.\n\nValid values: SUCCESS, FAIL",
        "ActivityResponse$ScheduledStart" : "The scheduled start time for the activity in ISO 8601 format.",
        "ActivityResponse$Start" : "The actual start time of the activity in ISO 8601 format.",
        "ActivityResponse$State" : "The state of the activity.\n\nValid values: PENDING, INITIALIZING, RUNNING, PAUSED, CANCELLED, COMPLETED",
        "ActivityResponse$TreatmentId" : "The ID of a variation of the campaign used for A/B testing.",
        "ApplicationSettingsResource$ApplicationId" : "The unique ID for the application.",
        "ApplicationSettingsResource$LastModifiedDate" : "The date that the settings were last updated in ISO 8601 format.",
        "CampaignResponse$ApplicationId" : "The ID of the application to which the campaign applies.",
        "CampaignResponse$CreationDate" : "The date the campaign was created in ISO 8601 format.",
        "CampaignResponse$Description" : "A description of the campaign.",
        "CampaignResponse$Id" : "The unique campaign ID.",
        "CampaignResponse$LastModifiedDate" : "The date the campaign was last updated in ISO 8601 format.\t",
        "CampaignResponse$Name" : "The custom name of the campaign.",
        "CampaignResponse$SegmentId" : "The ID of the segment to which the campaign sends messages.",
        "CampaignResponse$TreatmentDescription" : "A custom description for the treatment.",
        "CampaignResponse$TreatmentName" : "The custom name of a variation of the campaign used for A/B testing.",
        "CampaignsResponse$NextToken" : "The string that you use in a subsequent request to get the next page of results in a paginated response.",
        "EndpointBatchItem$Address" : "The address or token of the endpoint as provided by your push provider (e.g. DeviceToken or RegistrationId).",
        "EndpointBatchItem$EffectiveDate" : "The last time the endpoint was updated. Provided in ISO 8601 format.",
        "EndpointBatchItem$EndpointStatus" : "The endpoint status. Can be either ACTIVE or INACTIVE. Will be set to INACTIVE if a delivery fails. Will be set to ACTIVE if the address is updated.",
        "EndpointBatchItem$Id" : "The unique Id for the Endpoint in the batch.",
        "EndpointBatchItem$OptOut" : "Indicates whether a user has opted out of receiving messages with one of the following values:\n\nALL – User receives all messages.\nNONE – User receives no messages.",
        "EndpointBatchItem$RequestId" : "The unique ID for the most recent request to update the endpoint.",
        "EndpointDemographic$AppVersion" : "The version of the application associated with the endpoint.",
        "EndpointDemographic$Locale" : "The endpoint locale in the following format: The ISO 639-1 alpha-2 code, followed by an underscore, followed by an ISO 3166-1 alpha-2 value.\n",
        "EndpointDemographic$Make" : "The endpoint make, such as such as Apple or Samsung.",
        "EndpointDemographic$Model" : "The endpoint model, such as iPhone.",
        "EndpointDemographic$ModelVersion" : "The endpoint model version.",
        "EndpointDemographic$Platform" : "The endpoint platform, such as ios or android.",
        "EndpointDemographic$PlatformVersion" : "The endpoint platform version.",
        "EndpointDemographic$Timezone" : "The timezone of the endpoint. Specified as a tz database value, such as Americas/Los_Angeles.",
        "EndpointLocation$City" : "The city where the endpoint is located.",
        "EndpointLocation$Country" : "Country according to ISO 3166-1 Alpha-2 codes. For example, US.",
        "EndpointLocation$PostalCode" : "The postal code or zip code of the endpoint.",
        "EndpointLocation$Region" : "The region of the endpoint location. For example, corresponds to a state in US.",
        "EndpointRequest$Address" : "The address or token of the endpoint as provided by your push provider (e.g. DeviceToken or RegistrationId).",
        "EndpointRequest$EffectiveDate" : "The last time the endpoint was updated. Provided in ISO 8601 format.",
        "EndpointRequest$EndpointStatus" : "The endpoint status. Can be either ACTIVE or INACTIVE. Will be set to INACTIVE if a delivery fails. Will be set to ACTIVE if the address is updated.",
        "EndpointRequest$OptOut" : "Indicates whether a user has opted out of receiving messages with one of the following values:\n\nALL – User receives all messages.\nNONE – User receives no messages.",
        "EndpointRequest$RequestId" : "The unique ID for the most recent request to update the endpoint.",
        "EndpointResponse$Address" : "The address or token of the endpoint as provided by your push provider (e.g. DeviceToken or RegistrationId).",
        "EndpointResponse$ApplicationId" : "The ID of the application associated with the endpoint.",
        "EndpointResponse$CohortId" : "A number from 0 - 99 that represents the cohort the endpoint is assigned to. Endpoints are grouped into cohorts randomly, and each cohort contains approximately 1 percent of the endpoints for an app. Amazon Pinpoint assigns cohorts to the holdout or treatment allocations for a campaign.",
        "EndpointResponse$CreationDate" : "The last time the endpoint was created. Provided in ISO 8601 format.",
        "EndpointResponse$EffectiveDate" : "The last time the endpoint was updated. Provided in ISO 8601 format.",
        "EndpointResponse$EndpointStatus" : "The endpoint status. Can be either ACTIVE or INACTIVE. Will be set to INACTIVE if a delivery fails. Will be set to ACTIVE if the address is updated.",
        "EndpointResponse$Id" : "The unique ID that you assigned to the endpoint. The ID should be a globally unique identifier (GUID) to ensure that it is unique compared to all other endpoints for the application.",
        "EndpointResponse$OptOut" : "Indicates whether a user has opted out of receiving messages with one of the following values:\n\nALL – User receives all messages.\nNONE – User receives no messages.",
        "EndpointResponse$RequestId" : "The unique ID for the most recent request to update the endpoint.",
        "EndpointResponse$ShardId" : "The ShardId of endpoint",
        "EndpointUser$UserId" : "The unique ID of the user.",
        "EventStream$ApplicationId" : "The ID of the application from which events should be published.",
        "EventStream$DestinationStreamArn" : "The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose delivery stream to which you want to publish events.\n Firehose ARN: arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME\n Kinesis ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME",
        "EventStream$ExternalId" : "The external ID assigned the IAM role that authorizes Amazon Pinpoint to publish to the stream.",
        "EventStream$LastModifiedDate" : "The date the event stream was last updated in ISO 8601 format.",
        "EventStream$LastUpdatedBy" : "The IAM user who last modified the event stream.",
        "EventStream$RoleArn" : "The IAM role that authorizes Amazon Pinpoint to publish events to the stream in your account.",
        "GCMChannelRequest$ApiKey" : "Platform credential API key from Google.",
        "GCMChannelResponse$ApplicationId" : "The ID of the application to which the channel applies.",
        "GCMChannelResponse$CreationDate" : "When was this segment created",
        "GCMChannelResponse$Credential" : "The GCM API key from Google.",
        "GCMChannelResponse$Id" : "The unique channel ID.",
        "GCMChannelResponse$LastModifiedBy" : "Who last updated this entry",
        "GCMChannelResponse$LastModifiedDate" : "Last date this was updated",
        "GCMChannelResponse$Platform" : "The platform type. Will be GCM",
        "ImportJobRequest$ExternalId" : "A unique, custom ID assigned to the IAM role that restricts who can assume the role.\t",
        "ImportJobRequest$RoleArn" : "The Amazon Resource Name (ARN) of an IAM role that grants Amazon Pinpoint access to the Amazon S3 location that contains the endpoints to import.",
        "ImportJobRequest$S3Url" : "A URL that points to the location within an Amazon S3 bucket that contains the endpoints to import. The location can be a folder or a single file.\nThe URL should follow this format: s3://bucket-name/folder-name/file-name\n\nAmazon Pinpoint will import endpoints from this location and any subfolders it contains.",
        "ImportJobRequest$SegmentId" : "The ID of the segment to update if the import job is meant to update an existing segment.",
        "ImportJobRequest$SegmentName" : "A custom name for the segment created by the import job. Use if DefineSegment is true.",
        "ImportJobResource$ExternalId" : "A unique, custom ID assigned to the IAM role that restricts who can assume the role.\t",
        "ImportJobResource$RoleArn" : "The Amazon Resource Name (ARN) of an IAM role that grants Amazon Pinpoint access to the Amazon S3 location that contains the endpoints to import.",
        "ImportJobResource$S3Url" : "A URL that points to the location within an Amazon S3 bucket that contains the endpoints to import. The location can be a folder or a single file.\nThe URL should follow this format: s3://bucket-name/folder-name/file-name\n\nAmazon Pinpoint will import endpoints from this location and any subfolders it contains.",
        "ImportJobResource$SegmentId" : "The ID of the segment to update if the import job is meant to update an existing segment.",
        "ImportJobResource$SegmentName" : "A custom name for the segment created by the import job. Use if DefineSegment is true.",
        "ImportJobResponse$ApplicationId" : "The unique ID of the application to which the import job applies.",
        "ImportJobResponse$CompletionDate" : "The date the import job completed in ISO 8601 format.",
        "ImportJobResponse$CreationDate" : "The date the import job was created in ISO 8601 format.",
        "ImportJobResponse$Id" : "The unique ID of the import job.",
        "ImportJobResponse$Type" : "The job type. Will be Import.",
        "ImportJobsResponse$NextToken" : "The string that you use in a subsequent request to get the next page of results in a paginated response.",
        "Message$Body" : "The message body. Can include up to 140 characters.",
        "Message$ImageIconUrl" : "The URL that points to the icon image for the push notification icon, for example, the app icon.",
        "Message$ImageUrl" : "The URL that points to an image used in the push notification.",
        "Message$JsonBody" : "The JSON payload used for a silent push.",
        "Message$MediaUrl" : "The URL that points to the media resource, for example a .mp4 or .gif file.",
        "Message$Title" : "The message title that displays above the message on the user's device.",
        "Message$Url" : "The URL to open in the user's mobile browser. Used if the value for Action is URL.",
        "MessageBody$Message" : "The error message returned from the API.",
        "MessageBody$RequestID" : "The unique message body ID.",
        "QuietTime$End" : "The default end time for quiet time in ISO 8601 format.",
        "QuietTime$Start" : "The default start time for quiet time in ISO 8601 format.",
        "Schedule$EndTime" : "The scheduled time that the campaign ends in ISO 8601 format.",
        "Schedule$StartTime" : "The scheduled time that the campaign begins in ISO 8601 format.",
        "Schedule$Timezone" : "The starting UTC offset for the schedule if the value for isLocalTime is true\n\nValid values: \nUTC\nUTC+01\nUTC+02\nUTC+03\nUTC+03:30\nUTC+04\nUTC+04:30\nUTC+05\nUTC+05:30\nUTC+05:45\nUTC+06\nUTC+06:30\nUTC+07\nUTC+08\nUTC+09\nUTC+09:30\nUTC+10\nUTC+10:30\nUTC+11\nUTC+12\nUTC+13\nUTC-02\nUTC-03\nUTC-04\nUTC-05\nUTC-06\nUTC-07\nUTC-08\nUTC-09\nUTC-10\nUTC-11",
        "SegmentImportResource$ExternalId" : "A unique, custom ID assigned to the IAM role that restricts who can assume the role.",
        "SegmentImportResource$RoleArn" : "The Amazon Resource Name (ARN) of an IAM role that grants Amazon Pinpoint access to the endpoints in Amazon S3.",
        "SegmentImportResource$S3Url" : "A URL that points to the Amazon S3 location from which the endpoints for this segment were imported.",
        "SegmentResponse$ApplicationId" : "The ID of the application to which the segment applies.",
        "SegmentResponse$CreationDate" : "The date the segment was created in ISO 8601 format.",
        "SegmentResponse$Id" : "The unique segment ID.",
        "SegmentResponse$LastModifiedDate" : "The date the segment was last updated in ISO 8601 format.",
        "SegmentResponse$Name" : "The name of segment",
        "SegmentsResponse$NextToken" : "An identifier used to retrieve the next page of results. The token is null if no additional pages exist.",
        "TreatmentResource$Id" : "The unique treatment ID.",
        "TreatmentResource$TreatmentDescription" : "A custom description for the treatment.",
        "TreatmentResource$TreatmentName" : "The custom name of a variation of the campaign used for A/B testing.",
        "WriteCampaignRequest$Description" : "A description of the campaign.",
        "WriteCampaignRequest$Name" : "The custom name of the campaign.",
        "WriteCampaignRequest$SegmentId" : "The ID of the segment to which the campaign sends messages.",
        "WriteCampaignRequest$TreatmentDescription" : "A custom description for the treatment.",
        "WriteCampaignRequest$TreatmentName" : "The custom name of a variation of the campaign used for A/B testing.",
        "WriteEventStream$DestinationStreamArn" : "The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose delivery stream to which you want to publish events.\n Firehose ARN: arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME\n Kinesis ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME",
        "WriteEventStream$ExternalId" : "The external ID assigned the IAM role that authorizes Amazon Pinpoint to publish to the stream.",
        "WriteEventStream$RoleArn" : "The IAM role that authorizes Amazon Pinpoint to publish events to the stream in your account.",
        "WriteSegmentRequest$Name" : "The name of segment",
        "WriteTreatmentResource$TreatmentDescription" : "A custom description for the treatment.",
        "WriteTreatmentResource$TreatmentName" : "The custom name of a variation of the campaign used for A/B testing.",
        "PutEventStreamRequest$ApplicationId": "Application Id.",
        "PutEventStreamRequest$WriteEventStream": "Write event stream wrapper.",
        "GetEventStreamRequest$ApplicationId": "Application Id.",
        "DeleteEventStreamRequest$ApplicationId": "Application Id."
      }
    }
  }
}