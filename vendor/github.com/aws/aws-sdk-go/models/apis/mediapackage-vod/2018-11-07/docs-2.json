{
  "version" : "2.0",
  "service" : "AWS Elemental MediaPackage VOD",
  "operations" : {
    "CreateAsset" : "Creates a new MediaPackage VOD Asset resource.",
    "CreatePackagingConfiguration" : "Creates a new MediaPackage VOD PackagingConfiguration resource.",
    "CreatePackagingGroup" : "Creates a new MediaPackage VOD PackagingGroup resource.",
    "DeleteAsset" : "Deletes an existing MediaPackage VOD Asset resource.",
    "DeletePackagingConfiguration" : "Deletes a MediaPackage VOD PackagingConfiguration resource.",
    "DeletePackagingGroup" : "Deletes a MediaPackage VOD PackagingGroup resource.",
    "DescribeAsset" : "Returns a description of a MediaPackage VOD Asset resource.",
    "DescribePackagingConfiguration" : "Returns a description of a MediaPackage VOD PackagingConfiguration resource.",
    "DescribePackagingGroup" : "Returns a description of a MediaPackage VOD PackagingGroup resource.",
    "ListAssets" : "Returns a collection of MediaPackage VOD Asset resources.",
    "ListPackagingConfigurations" : "Returns a collection of MediaPackage VOD PackagingConfiguration resources.",
    "ListPackagingGroups" : "Returns a collection of MediaPackage VOD PackagingGroup resources."
  },
  "shapes" : {
    "AdMarkers" : {
      "base" : null,
      "refs" : {
        "HlsManifest$AdMarkers" : "This setting controls how ad markers are included in the packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers from the output.\n\"PASSTHROUGH\" causes the manifest to contain a copy of the SCTE-35 ad\nmarkers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates ad markers and blackout tags based on SCTE-35\nmessages in the input source.\n"
      }
    },
    "Asset" : {
      "base" : "A MediaPackage VOD Asset resource.",
      "refs" : { }
    },
    "AssetCreateParameters" : {
      "base" : "Parameters used to create a MediaPackage VOD Asset.",
      "refs" : { }
    },
    "AssetList" : {
      "base" : "A collection of MediaPackage VOD Asset resources.",
      "refs" : { }
    },
    "AssetShallow" : {
      "base" : "A MediaPackage VOD Asset resource.",
      "refs" : {
        "__listOfAssetShallow$member" : null
      }
    },
    "CmafEncryption" : {
      "base" : "A CMAF encryption configuration.",
      "refs" : {
        "CmafPackage$Encryption" : null
      }
    },
    "CmafPackage" : {
      "base" : "A CMAF packaging configuration.",
      "refs" : {
        "PackagingConfiguration$CmafPackage" : null,
        "PackagingConfigurationCreateParameters$CmafPackage" : null
      }
    },
    "DashEncryption" : {
      "base" : "A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.",
      "refs" : {
        "DashPackage$Encryption" : null
      }
    },
    "DashManifest" : {
      "base" : "A DASH manifest configuration.",
      "refs" : {
        "__listOfDashManifest$member" : null
      }
    },
    "DashPackage" : {
      "base" : "A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.",
      "refs" : {
        "PackagingConfiguration$DashPackage" : null,
        "PackagingConfigurationCreateParameters$DashPackage" : null
      }
    },
    "EgressEndpoint" : {
      "base" : "The endpoint URL used to access an Asset using one PackagingConfiguration.",
      "refs" : {
        "__listOfEgressEndpoint$member" : null
      }
    },
    "EncryptionMethod" : {
      "base" : null,
      "refs" : {
        "HlsEncryption$EncryptionMethod" : "The encryption method to use."
      }
    },
    "HlsEncryption" : {
      "base" : "An HTTP Live Streaming (HLS) encryption configuration.",
      "refs" : {
        "HlsPackage$Encryption" : null
      }
    },
    "HlsManifest" : {
      "base" : "An HTTP Live Streaming (HLS) manifest configuration.",
      "refs" : {
        "__listOfHlsManifest$member" : null
      }
    },
    "HlsPackage" : {
      "base" : "An HTTP Live Streaming (HLS) packaging configuration.",
      "refs" : {
        "PackagingConfiguration$HlsPackage" : null,
        "PackagingConfigurationCreateParameters$HlsPackage" : null
      }
    },
    "MssEncryption" : {
      "base" : "A Microsoft Smooth Streaming (MSS) encryption configuration.",
      "refs" : {
        "MssPackage$Encryption" : null
      }
    },
    "MssManifest" : {
      "base" : "A Microsoft Smooth Streaming (MSS) manifest configuration.",
      "refs" : {
        "__listOfMssManifest$member" : null
      }
    },
    "MssPackage" : {
      "base" : "A Microsoft Smooth Streaming (MSS) PackagingConfiguration.",
      "refs" : {
        "PackagingConfiguration$MssPackage" : null,
        "PackagingConfigurationCreateParameters$MssPackage" : null
      }
    },
    "PackagingConfiguration" : {
      "base" : "A MediaPackage VOD PackagingConfiguration resource.",
      "refs" : {
        "__listOfPackagingConfiguration$member" : null
      }
    },
    "PackagingConfigurationCreateParameters" : {
      "base" : "Parameters used to create a new MediaPackage VOD PackagingConfiguration resource.",
      "refs" : { }
    },
    "PackagingConfigurationList" : {
      "base" : "A collection of MediaPackage VOD PackagingConfiguration resources.",
      "refs" : { }
    },
    "PackagingGroup" : {
      "base" : "A MediaPackage VOD PackagingGroup resource.",
      "refs" : {
        "__listOfPackagingGroup$member" : null
      }
    },
    "PackagingGroupCreateParameters" : {
      "base" : "Parameters used to create a new MediaPackage VOD PackagingGroup resource.",
      "refs" : { }
    },
    "PackagingGroupList" : {
      "base" : "A collection of MediaPackage VOD PackagingGroup resources.",
      "refs" : { }
    },
    "Profile" : {
      "base" : null,
      "refs" : {
        "DashManifest$Profile" : "The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled."
      }
    },
    "SpekeKeyProvider" : {
      "base" : "A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.",
      "refs" : {
        "CmafEncryption$SpekeKeyProvider" : null,
        "DashEncryption$SpekeKeyProvider" : null,
        "HlsEncryption$SpekeKeyProvider" : null,
        "MssEncryption$SpekeKeyProvider" : null
      }
    },
    "StreamOrder" : {
      "base" : null,
      "refs" : {
        "StreamSelection$StreamOrder" : "A directive that determines the order of streams in the output."
      }
    },
    "StreamSelection" : {
      "base" : "A StreamSelection configuration.",
      "refs" : {
        "DashManifest$StreamSelection" : null,
        "HlsManifest$StreamSelection" : null,
        "MssManifest$StreamSelection" : null
      }
    },
    "__boolean" : {
      "base" : null,
      "refs" : {
        "HlsManifest$IncludeIframeOnlyStream" : "When enabled, an I-Frame only stream will be included in the output.",
        "HlsManifest$RepeatExtXKey" : "When enabled, the EXT-X-KEY tag will be repeated in output manifests.",
        "HlsPackage$UseAudioRenditionGroup" : "When enabled, audio streams will be placed in rendition groups in the output."
      }
    },
    "__integer" : {
      "base" : null,
      "refs" : {
        "CmafPackage$SegmentDurationSeconds" : "Duration (in seconds) of each fragment. Actual fragments will be\nrounded to the nearest multiple of the source fragment duration.\n",
        "DashManifest$MinBufferTimeSeconds" : "Minimum duration (in seconds) that a player will buffer media before starting the presentation.",
        "DashPackage$SegmentDurationSeconds" : "Duration (in seconds) of each segment. Actual segments will be\nrounded to the nearest multiple of the source segment duration.\n",
        "HlsManifest$ProgramDateTimeIntervalSeconds" : "The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag\ninserted into manifests. Additionally, when an interval is specified\nID3Timed Metadata messages will be generated every 5 seconds using the\ningest time of the content.\nIf the interval is not specified, or set to 0, then\nno EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no\nID3Timed Metadata messages will be generated. Note that irrespective\nof this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,\nit will be passed through to HLS output.\n",
        "HlsPackage$SegmentDurationSeconds" : "Duration (in seconds) of each fragment. Actual fragments will be\nrounded to the nearest multiple of the source fragment duration.\n",
        "MssPackage$SegmentDurationSeconds" : "The duration (in seconds) of each segment.",
        "StreamSelection$MaxVideoBitsPerSecond" : "The maximum video bitrate (bps) to include in output.",
        "StreamSelection$MinVideoBitsPerSecond" : "The minimum video bitrate (bps) to include in output."
      }
    },
    "__listOfAssetShallow" : {
      "base" : null,
      "refs" : {
        "AssetList$Assets" : "A list of MediaPackage VOD Asset resources."
      }
    },
    "__listOfDashManifest" : {
      "base" : null,
      "refs" : {
        "DashPackage$DashManifests" : "A list of DASH manifest configurations."
      }
    },
    "__listOfEgressEndpoint" : {
      "base" : null,
      "refs" : {
        "Asset$EgressEndpoints" : "The list of egress endpoints available for the Asset."
      }
    },
    "__listOfHlsManifest" : {
      "base" : null,
      "refs" : {
        "CmafPackage$HlsManifests" : "A list of HLS manifest configurations.",
        "HlsPackage$HlsManifests" : "A list of HLS manifest configurations."
      }
    },
    "__listOfMssManifest" : {
      "base" : null,
      "refs" : {
        "MssPackage$MssManifests" : "A list of MSS manifest configurations."
      }
    },
    "__listOfPackagingConfiguration" : {
      "base" : null,
      "refs" : {
        "PackagingConfigurationList$PackagingConfigurations" : "A list of MediaPackage VOD PackagingConfiguration resources."
      }
    },
    "__listOfPackagingGroup" : {
      "base" : null,
      "refs" : {
        "PackagingGroupList$PackagingGroups" : "A list of MediaPackage VOD PackagingGroup resources."
      }
    },
    "__listOf__string" : {
      "base" : null,
      "refs" : {
        "SpekeKeyProvider$SystemIds" : "The system IDs to include in key requests."
      }
    },
    "__string" : {
      "base" : null,
      "refs" : {
        "Asset$Arn" : "The ARN of the Asset.",
        "Asset$Id" : "The unique identifier for the Asset.",
        "Asset$PackagingGroupId" : "The ID of the PackagingGroup for the Asset.",
        "Asset$ResourceId" : "The resource ID to include in SPEKE key requests.",
        "Asset$SourceArn" : "ARN of the source object in S3.",
        "Asset$SourceRoleArn" : "The IAM role_arn used to access the source S3 bucket.",
        "AssetCreateParameters$Id" : "The unique identifier for the Asset.",
        "AssetCreateParameters$PackagingGroupId" : "The ID of the PackagingGroup for the Asset.",
        "AssetCreateParameters$ResourceId" : "The resource ID to include in SPEKE key requests.",
        "AssetCreateParameters$SourceArn" : "ARN of the source object in S3.",
        "AssetCreateParameters$SourceRoleArn" : "The IAM role ARN used to access the source S3 bucket.",
        "AssetList$NextToken" : "A token that can be used to resume pagination from the end of the collection.",
        "AssetShallow$Arn" : "The ARN of the Asset.",
        "AssetShallow$Id" : "The unique identifier for the Asset.",
        "AssetShallow$PackagingGroupId" : "The ID of the PackagingGroup for the Asset.",
        "AssetShallow$ResourceId" : "The resource ID to include in SPEKE key requests.",
        "AssetShallow$SourceArn" : "ARN of the source object in S3.",
        "AssetShallow$SourceRoleArn" : "The IAM role ARN used to access the source S3 bucket.",
        "DashManifest$ManifestName" : "An optional string to include in the name of the manifest.",
        "EgressEndpoint$PackagingConfigurationId" : "The ID of the PackagingConfiguration being applied to the Asset.",
        "EgressEndpoint$Url" : "The URL of the parent manifest for the repackaged Asset.",
        "HlsManifest$ManifestName" : "An optional string to include in the name of the manifest.",
        "MssManifest$ManifestName" : "An optional string to include in the name of the manifest.",
        "PackagingConfiguration$Arn" : "The ARN of the PackagingConfiguration.",
        "PackagingConfiguration$Id" : "The ID of the PackagingConfiguration.",
        "PackagingConfiguration$PackagingGroupId" : "The ID of a PackagingGroup.",
        "PackagingConfigurationCreateParameters$Id" : "The ID of the PackagingConfiguration.",
        "PackagingConfigurationCreateParameters$PackagingGroupId" : "The ID of a PackagingGroup.",
        "PackagingConfigurationList$NextToken" : "A token that can be used to resume pagination from the end of the collection.",
        "PackagingGroup$Arn" : "The ARN of the PackagingGroup.",
        "PackagingGroup$Id" : "The ID of the PackagingGroup.",
        "PackagingGroupCreateParameters$Id" : "The ID of the PackagingGroup.",
        "PackagingGroupList$NextToken" : "A token that can be used to resume pagination from the end of the collection.",
        "SpekeKeyProvider$RoleArn" : "An Amazon Resource Name (ARN) of an IAM role that AWS Elemental\nMediaPackage will assume when accessing the key provider service.\n",
        "SpekeKeyProvider$Url" : "The URL of the external key provider service.",
        "__listOf__string$member" : null
      }
    }
  }
}
