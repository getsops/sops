{
  "version": "2.0",
  "service": "<p>AWS Transfer for SFTP is a fully managed service that enables the transfer of files directly into and out of Amazon S3 using the Secure File Transfer Protocol (SFTP)—also known as Secure Shell (SSH) File Transfer Protocol. AWS helps you seamlessly migrate your file transfer workflows to AWS Transfer for SFTP—by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53—so nothing changes for your customers and partners, or their applications. With your data in S3, you can use it with AWS services for processing, analytics, machine learning, and archiving. Getting started with AWS Transfer for SFTP (AWS SFTP) is easy; there is no infrastructure to buy and setup. </p>",
  "operations": {
    "CreateServer": "<p>Instantiates an autoscaling virtual server based on Secure File Transfer Protocol (SFTP) in AWS. The call returns the <code>ServerId</code> property assigned by the service to the newly created server. Reference this <code>ServerId</code> property when you make updates to your server, or work with users.</p> <p>The response returns the <code>ServerId</code> value for the newly created server.</p>",
    "CreateUser": "<p>Adds a user and associate them with an existing Secure File Transfer Protocol (SFTP) server. Using parameters for <code>CreateUser</code>, you can specify the user name, set the home directory, store the user's public key, and assign the user's AWS Identity and Access Management (IAM) role. You can also optionally add a scope-down policy, and assign metadata with tags that can be used to group and search for users.</p> <p>The response returns the <code>UserName</code> and <code>ServerId</code> values of the new user for that server.</p>",
    "DeleteServer": "<p>Deletes the Secure File Transfer Protocol (SFTP) server that you specify. If you used <code>SERVICE_MANAGED</code> as your <code>IdentityProviderType</code>, you need to delete all users associated with this server before deleting the server itself</p> <p>No response returns from this call.</p>",
    "DeleteSshPublicKey": "<p>Deletes a user's Secure Shell (SSH) public key.</p> <p>No response is returned from this call.</p>",
    "DeleteUser": "<p>Deletes the user belonging to the server you specify.</p> <p>No response returns from this call.</p> <note> <p>When you delete a user from a server, the user's information is lost.</p> </note>",
    "DescribeServer": "<p>Describes the server that you specify by passing the <code>ServerId</code> parameter.</p> <p>The response contains a description of the server's properties.</p>",
    "DescribeUser": "<p>Describes the user assigned to a specific server, as identified by its <code>ServerId</code> property.</p> <p>The response from this call returns the properties of the user associated with the <code>ServerId</code> value that was specified.</p>",
    "ImportSshPublicKey": "<p>Adds a Secure Shell (SSH) public key to a user account identified by a <code>UserName</code> value assigned to a specific server, identified by <code>ServerId</code>.</p> <p>The response returns the <code>UserName</code> value, the <code>ServerId</code> value, and the name of the <code>SshPublicKeyId</code>.</p>",
    "ListServers": "<p>Lists the Secure File Transfer Protocol (SFTP) servers that are associated with your AWS account.</p>",
    "ListTagsForResource": "<p>Lists all of the tags associated with the Amazon Resource Number (ARN) you specify. The resource can be a user, server, or role.</p>",
    "ListUsers": "<p>Lists the users for the server that you specify by passing the <code>ServerId</code> parameter.</p>",
    "StartServer": "<p>Changes the state of a Secure File Transfer Protocol (SFTP) server from <code>OFFLINE</code> to <code>ONLINE</code>. It has no impact on an SFTP server that is already <code>ONLINE</code>. An <code>ONLINE</code> server can accept and process file transfer jobs.</p> <p>The state of <code>STARTING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code> can indicate an error condition. </p> <p>No response is returned from this call.</p>",
    "StopServer": "<p>Changes the state of an SFTP server from <code>ONLINE</code> to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information tied to your server such as server and user properties are not affected by stopping your server. Stopping a server will not reduce or impact your Secure File Transfer Protocol (SFTP) endpoint billing.</p> <p>The states of <code>STOPPING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>",
    "TagResource": "<p>Attaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>There is no response returned from this call.</p>",
    "TestIdentityProvider": "<p>If the <code>IdentityProviderType</code> of the server is <code>API_Gateway</code>, tests whether your API Gateway is set up successfully. We highly recommend that you call this method to test your authentication method as soon as you create your server. By doing so, you can troubleshoot issues with the API Gateway integration to ensure that your users can successfully use the service.</p>",
    "UntagResource": "<p>Detaches a key-value pair from a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>No response is returned from this call.</p>",
    "UpdateServer": "<p>Updates the server properties after that server has been created.</p> <p>The <code>UpdateServer</code> call returns the <code>ServerId</code> of the Secure File Transfer Protocol (SFTP) server you updated.</p>",
    "UpdateUser": "<p>Assigns new properties to a user. Parameters you pass modify any or all of the following: the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code> you specify.</p> <p>The response returns the <code>ServerId</code> and the <code>UserName</code> for the updated user.</p>"
  },
  "shapes": {
    "Arn": {
      "base": null,
      "refs": {
        "DescribedServer$Arn": "<p>Specifies the unique Amazon Resource Name (ARN) for the server to be described.</p>",
        "DescribedUser$Arn": "<p>This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>",
        "ListTagsForResourceRequest$Arn": "<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.</p>",
        "ListTagsForResourceResponse$Arn": "<p>This value is the ARN you specified to list the tags of.</p>",
        "ListedServer$Arn": "<p>The unique Amazon Resource Name (ARN) for the server to be listed.</p>",
        "ListedUser$Arn": "<p>This property is the unique Amazon Resource Name (ARN) for the user that you wish to learn about.</p>",
        "TagResourceRequest$Arn": "<p>An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.</p>",
        "UntagResourceRequest$Arn": "<p>This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>"
      }
    },
    "CreateServerRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateServerResponse": {
      "base": null,
      "refs": {
      }
    },
    "CreateUserRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateUserResponse": {
      "base": null,
      "refs": {
      }
    },
    "DateImported": {
      "base": null,
      "refs": {
        "SshPublicKey$DateImported": "<p>The date that the public key was added to the user account.</p>"
      }
    },
    "DeleteServerRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteSshPublicKeyRequest": {
      "base": null,
      "refs": {
      }
    },
    "DeleteUserRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeServerRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeServerResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribeUserRequest": {
      "base": null,
      "refs": {
      }
    },
    "DescribeUserResponse": {
      "base": null,
      "refs": {
      }
    },
    "DescribedServer": {
      "base": "<p>Describe the properties of the server that was specified. Information returned includes: the server Amazon Resource Name (ARN), the authentication configuration and type, the logging role, server Id and state, and assigned tags or metadata. </p>",
      "refs": {
        "DescribeServerResponse$Server": "<p>An array containing the properties of the server with the <code>ServerID</code> you specified.</p>"
      }
    },
    "DescribedUser": {
      "base": "<p>Returns properties of the user that you wish to describe.</p>",
      "refs": {
        "DescribeUserResponse$User": "<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>"
      }
    },
    "EndpointDetails": {
      "base": "<p>The configuration settings for the virtual private cloud (VPC) endpoint for your SFTP server.</p>",
      "refs": {
        "CreateServerRequest$EndpointDetails": "<p>The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server.</p>",
        "DescribedServer$EndpointDetails": "<p>The virtual private cloud (VPC) endpoint settings that you configured for your SFTP server.</p>",
        "UpdateServerRequest$EndpointDetails": "<p>The virtual private cloud (VPC) endpoint settings that are configured for your SFTP server. With a VPC endpoint, your SFTP server isn't accessible over the public internet.</p>"
      }
    },
    "EndpointType": {
      "base": null,
      "refs": {
        "CreateServerRequest$EndpointType": "<p>The type of VPC endpoint that you want your SFTP server connect to. If you connect to a VPC endpoint, your SFTP server isn't accessible over the public internet.</p>",
        "DescribedServer$EndpointType": "<p>The type of endpoint that your SFTP server is connected to. If your SFTP server is connected to a VPC endpoint, your server isn't accessible over the public internet.</p>",
        "ListedServer$EndpointType": "<p>The type of VPC endpoint that your SFTP server is connected to. If your SFTP server is connected to a VPC endpoint, your server isn't accessible over the public internet.</p>",
        "UpdateServerRequest$EndpointType": "<p>The type of endpoint that you want your SFTP server to connect to. You can choose to connect to the public internet or a virtual private cloud (VPC) endpoint. With a VPC endpoint, your SFTP server isn't accessible over the public internet. </p>"
      }
    },
    "HomeDirectory": {
      "base": null,
      "refs": {
        "CreateUserRequest$HomeDirectory": "<p>The landing directory (folder) for a user when they log in to the server using their SFTP client. An example is <code>/home/<i>username</i> </code>.</p>",
        "DescribedUser$HomeDirectory": "<p>This property specifies the landing directory (or folder) which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example would be: <code>/<i>bucket_name</i>/home/<i>username</i> </code>.</p>",
        "ListedUser$HomeDirectory": "<p>This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.</p>",
        "UpdateUserRequest$HomeDirectory": "<p>The HomeDirectory parameter specifies the landing directory (folder) for a user when they log in to the server using their client. An example would be: <code>/home/<i>username</i> </code>.</p>"
      }
    },
    "HostKey": {
      "base": null,
      "refs": {
        "CreateServerRequest$HostKey": "<p>The RSA private key as generated by <code>ssh-keygen -N \"\" -f my-new-server-key</code> command.</p> <important> <p>If you aren't planning to migrate existing users from an existing SFTP server to a new AWS SFTP server, don't update the host key. Accidentally changing a server's host key can be disruptive. For more information, see <a>change-host-key</a> in the <i>AWS SFTP User Guide.</i> </p> </important>",
        "UpdateServerRequest$HostKey": "<p>The RSA private key as generated by <code>ssh-keygen -N \"\" -f my-new-server-key</code>.</p> <important> <p>If you aren't planning to migrate existing users from an existing SFTP server to a new AWS SFTP server, don't update the host key. Accidentally changing a server's host key can be disruptive. For more information, see <a>change-host-key</a> in the <i>AWS SFTP User Guide.</i> </p> </important>"
      }
    },
    "HostKeyFingerprint": {
      "base": null,
      "refs": {
        "DescribedServer$HostKeyFingerprint": "<p>This value contains the Message-Digest Algorithm (MD5) hash of the server's host key. This value is equivalent to the output of <code>ssh-keygen -l -E md5 -f my-new-server-key</code> command.</p>"
      }
    },
    "IdentityProviderDetails": {
      "base": "<p>Returns information related to the type of user authentication that is in use for a server's users. A server can only have one method of authentication.</p>",
      "refs": {
        "CreateServerRequest$IdentityProviderDetails": "<p>An array containing all of the information required to call a customer-supplied authentication API. This parameter is not required when the <code>IdentityProviderType</code> value of server that is created uses the <code>SERVICE_MANAGED</code> authentication method.</p>",
        "DescribedServer$IdentityProviderDetails": "<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.</p>",
        "UpdateServerRequest$IdentityProviderDetails": "<p>This response parameter is an array containing all of the information required to call a customer's authentication API method.</p>"
      }
    },
    "IdentityProviderType": {
      "base": "<p>Returns information related to the type of user authentication that is in use for a server's users. For <code>SERVICE_MANAGED</code> authentication, the Secure Shell (SSH) public keys are stored with a user on an SFTP server instance. For <code>API_GATEWAY</code> authentication, your custom authentication method is implemented by using an API call. A server can only have one method of authentication.</p>",
      "refs": {
        "CreateServerRequest$IdentityProviderType": "<p>The mode of authentication enabled for this service. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the service. An <code>IdentityProviderType</code> value of <code>API_GATEWAY</code> indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.</p>",
        "DescribedServer$IdentityProviderType": "<p>This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code>, means that you are using this Server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.</p>",
        "ListedServer$IdentityProviderType": "<p>The authentication method used to validate a user for the server that was specified. listed. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.</p>"
      }
    },
    "ImportSshPublicKeyRequest": {
      "base": null,
      "refs": {
      }
    },
    "ImportSshPublicKeyResponse": {
      "base": "<p>This response identifies the user, server they belong to, and the identifier of the SSH public key associated with that user. A user can have more than one key on each server that they are associate with.</p>",
      "refs": {
      }
    },
    "InternalServiceError": {
      "base": "<p>This exception is thrown when an error occurs in the AWS Transfer for SFTP service.</p>",
      "refs": {
      }
    },
    "InvalidNextTokenException": {
      "base": "<p>The <code>NextToken</code> parameter that was passed is invalid.</p>",
      "refs": {
      }
    },
    "InvalidRequestException": {
      "base": "<p>This exception is thrown when the client submits a malformed request.</p>",
      "refs": {
      }
    },
    "ListServersRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListServersResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTagsForResourceResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListUsersRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListUsersResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListedServer": {
      "base": "<p>Returns properties of the server that was specified.</p>",
      "refs": {
        "ListedServers$member": null
      }
    },
    "ListedServers": {
      "base": null,
      "refs": {
        "ListServersResponse$Servers": "<p>An array of servers that were listed.</p>"
      }
    },
    "ListedUser": {
      "base": "<p>Returns properties of the user that you specify.</p>",
      "refs": {
        "ListedUsers$member": null
      }
    },
    "ListedUsers": {
      "base": null,
      "refs": {
        "ListUsersResponse$Users": "<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>"
      }
    },
    "MaxResults": {
      "base": null,
      "refs": {
        "ListServersRequest$MaxResults": "<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>",
        "ListTagsForResourceRequest$MaxResults": "<p>Specifies the number of tags to return as a response to the <code>ListTagsForResource</code> request.</p>",
        "ListUsersRequest$MaxResults": "<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>"
      }
    },
    "Message": {
      "base": null,
      "refs": {
        "InternalServiceError$Message": null,
        "InvalidNextTokenException$Message": null,
        "InvalidRequestException$Message": null,
        "ResourceExistsException$Message": null,
        "ResourceNotFoundException$Message": null,
        "TestIdentityProviderResponse$Message": "<p>The result of the authorization test as a message. </p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListServersRequest$NextToken": "<p>When additional results are obtained from the ListServers command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>",
        "ListServersResponse$NextToken": "<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>",
        "ListTagsForResourceRequest$NextToken": "<p>When you request additional results from the <code>ListTagsForResource</code> call, a <code>NextToken</code> parameter is returned in the input. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional tags.</p>",
        "ListTagsForResourceResponse$NextToken": "<p>When you can get additional results from the <code>ListTagsForResource</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional tags.</p>",
        "ListUsersRequest$NextToken": "<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>",
        "ListUsersResponse$NextToken": "<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command the <code>NextToken</code> parameter to continue listing additional users.</p>"
      }
    },
    "NullableRole": {
      "base": null,
      "refs": {
        "UpdateServerRequest$LoggingRole": "<p>A value that changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.</p>"
      }
    },
    "Policy": {
      "base": null,
      "refs": {
        "CreateUserRequest$Policy": "<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
        "DescribedUser$Policy": "<p>Specifies the name of the policy in use for the described user.</p>",
        "UpdateUserRequest$Policy": "<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down users access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>"
      }
    },
    "Resource": {
      "base": null,
      "refs": {
        "ResourceExistsException$Resource": null,
        "ResourceNotFoundException$Resource": null
      }
    },
    "ResourceExistsException": {
      "base": "<p>The requested resource does not exist.</p>",
      "refs": {
      }
    },
    "ResourceNotFoundException": {
      "base": "<p>This exception is thrown when a resource is not found by the AWS Transfer for SFTP service.</p>",
      "refs": {
      }
    },
    "ResourceType": {
      "base": null,
      "refs": {
        "ResourceExistsException$ResourceType": null,
        "ResourceNotFoundException$ResourceType": null
      }
    },
    "Role": {
      "base": null,
      "refs": {
        "CreateServerRequest$LoggingRole": "<p>A value that allows the service to write your SFTP users' activity to your Amazon CloudWatch logs for monitoring and auditing purposes.</p>",
        "CreateUserRequest$Role": "<p>The IAM role that controls your user's access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user's transfer requests.</p>",
        "DescribedServer$LoggingRole": "<p>This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be view in your CloudWatch logs.</p>",
        "DescribedUser$Role": "<p>This property specifies the IAM role that controls your user's access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user's transfer requests.</p>",
        "IdentityProviderDetails$InvocationRole": "<p>The <code>Role</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>",
        "ListedServer$LoggingRole": "<p>The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.</p>",
        "ListedUser$Role": "<p>The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that in this case allows the SFTP server to act on a user's behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.</p>",
        "UpdateUserRequest$Role": "<p>The IAM role that controls your user's access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user's transfer requests.</p>"
      }
    },
    "ServerId": {
      "base": null,
      "refs": {
        "CreateServerResponse$ServerId": "<p>The service-assigned ID of the SFTP server that is created.</p>",
        "CreateUserRequest$ServerId": "<p>A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.</p>",
        "CreateUserResponse$ServerId": "<p>The ID of the SFTP server that the user is attached to.</p>",
        "DeleteServerRequest$ServerId": "<p>A unique system-assigned identifier for an SFTP server instance.</p>",
        "DeleteSshPublicKeyRequest$ServerId": "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.</p>",
        "DeleteUserRequest$ServerId": "<p>A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.</p>",
        "DescribeServerRequest$ServerId": "<p>A system-assigned unique identifier for an SFTP server.</p>",
        "DescribeUserRequest$ServerId": "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
        "DescribeUserResponse$ServerId": "<p>A system-assigned unique identifier for an SFTP server that has this user assigned.</p>",
        "DescribedServer$ServerId": "<p>This property is a unique system assigned identifier for the SFTP server that you instantiate.</p>",
        "ImportSshPublicKeyRequest$ServerId": "<p>A system-assigned unique identifier for an SFTP server.</p>",
        "ImportSshPublicKeyResponse$ServerId": "<p>A system-assigned unique identifier for an SFTP server.</p>",
        "ListUsersRequest$ServerId": "<p>A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users are assigned to it.</p>",
        "ListUsersResponse$ServerId": "<p>A system-assigned unique identifier for an SFTP server that the users are assigned to.</p>",
        "ListedServer$ServerId": "<p>This value is the unique system assigned identifier for the SFTP servers that were listed.</p>",
        "StartServerRequest$ServerId": "<p>A system-assigned unique identifier for an SFTP server that you start.</p>",
        "StopServerRequest$ServerId": "<p>A system-assigned unique identifier for an SFTP server that you stopped.</p>",
        "TestIdentityProviderRequest$ServerId": "<p>A system assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>",
        "UpdateServerRequest$ServerId": "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
        "UpdateServerResponse$ServerId": "<p>A system-assigned unique identifier for an SFTP server that the user account is assigned to.</p>",
        "UpdateUserRequest$ServerId": "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>",
        "UpdateUserResponse$ServerId": "<p>A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.</p>"
      }
    },
    "ServiceErrorMessage": {
      "base": null,
      "refs": {
        "ServiceUnavailableException$Message": null
      }
    },
    "ServiceUnavailableException": {
      "base": "<p>The request has failed because the AWS Transfer for SFTP service is not available.</p>",
      "refs": {
      }
    },
    "SshPublicKey": {
      "base": "<p>Provides information about the public Secure Shell (SSH) key that is associated with a user account for a specific server (as identified by <code>ServerId</code>). The information returned includes the date the key was imported, the public key contents, and the public key ID. A user can store more than one SSH public key associated with their user name on a specific SFTP server.</p>",
      "refs": {
        "SshPublicKeys$member": null
      }
    },
    "SshPublicKeyBody": {
      "base": null,
      "refs": {
        "CreateUserRequest$SshPublicKeyBody": "<p>The public portion of the Secure Shall (SSH) key used to authenticate the user to the SFTP server.</p>",
        "ImportSshPublicKeyRequest$SshPublicKeyBody": "<p>The public key portion of an SSH key pair.</p>",
        "SshPublicKey$SshPublicKeyBody": "<p>The content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>"
      }
    },
    "SshPublicKeyCount": {
      "base": null,
      "refs": {
        "ListedUser$SshPublicKeyCount": "<p>This value is the number of SSH public keys stored for the user you specified.</p>"
      }
    },
    "SshPublicKeyId": {
      "base": null,
      "refs": {
        "DeleteSshPublicKeyRequest$SshPublicKeyId": "<p>A unique identifier used to reference your user's specific SSH key.</p>",
        "ImportSshPublicKeyResponse$SshPublicKeyId": "<p>This identifier is the name given to a public key by the system that was imported.</p>",
        "SshPublicKey$SshPublicKeyId": "<p>The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>"
      }
    },
    "SshPublicKeys": {
      "base": null,
      "refs": {
        "DescribedUser$SshPublicKeys": "<p>This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>"
      }
    },
    "StartServerRequest": {
      "base": null,
      "refs": {
      }
    },
    "State": {
      "base": "<p>Describes the condition of the SFTP server with respect to its ability to perform file operations. There are six possible states: <code>OFFLINE</code>, <code>ONLINE</code>, <code>STARTING</code>, <code>STOPPING</code>, <code>START_FAILED</code>, and <code>STOP_FAILED</code>.</p> <p> <code>OFFLINE</code> indicates that the SFTP server exists, but that it is not available for file operations. <code>ONLINE</code> indicates that the SFTP server is available to perform file operations. <code>STARTING</code> indicates that the SFTP server's was instantiated, but the server is not yet available to perform file operations. Under normal conditions, it can take a couple of minutes for an SFTP server to be completely operational. Both <code>START_FAILED</code> and <code>STOP_FAILED</code> are error conditions.</p>",
      "refs": {
        "DescribedServer$State": "<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
        "ListedServer$State": "<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicated that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>"
      }
    },
    "StatusCode": {
      "base": null,
      "refs": {
        "TestIdentityProviderResponse$StatusCode": "<p>The HTTP status code that is the response from your API Gateway.</p>"
      }
    },
    "StopServerRequest": {
      "base": null,
      "refs": {
      }
    },
    "Tag": {
      "base": "<p>Creates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called <code>Group</code> and assign the values <code>Research</code> and <code>Accounting</code> to that group.</p>",
      "refs": {
        "Tags$member": null
      }
    },
    "TagKey": {
      "base": null,
      "refs": {
        "Tag$Key": "<p>The name assigned to the tag that you create.</p>",
        "TagKeys$member": null
      }
    },
    "TagKeys": {
      "base": null,
      "refs": {
        "UntagResourceRequest$TagKeys": "<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>"
      }
    },
    "TagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "TagValue": {
      "base": null,
      "refs": {
        "Tag$Value": "<p>This property contains one or more values that you assigned to the key name you create.</p>"
      }
    },
    "Tags": {
      "base": null,
      "refs": {
        "CreateServerRequest$Tags": "<p>Key-value pairs that can be used to group and search for servers.</p>",
        "CreateUserRequest$Tags": "<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>",
        "DescribedServer$Tags": "<p>This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>",
        "DescribedUser$Tags": "<p>This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>",
        "ListTagsForResourceResponse$Tags": "<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define that you can use for any purpose.</p>",
        "TagResourceRequest$Tags": "<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>"
      }
    },
    "TestIdentityProviderRequest": {
      "base": null,
      "refs": {
      }
    },
    "TestIdentityProviderResponse": {
      "base": null,
      "refs": {
      }
    },
    "UntagResourceRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateServerRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateServerResponse": {
      "base": null,
      "refs": {
      }
    },
    "UpdateUserRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateUserResponse": {
      "base": "<p> <code>UpdateUserResponse</code> returns the user name and server identifier for the request to update a user's properties.</p>",
      "refs": {
      }
    },
    "Url": {
      "base": null,
      "refs": {
        "IdentityProviderDetails$Url": "<p>The <code>IdentityProviderDetail</code> parameter contains the location of the service endpoint used to authenticate users.</p>",
        "TestIdentityProviderResponse$Url": "<p>The endpoint of the service used to authenticate a user.</p>"
      }
    },
    "UserCount": {
      "base": null,
      "refs": {
        "DescribedServer$UserCount": "<p>The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>",
        "ListedServer$UserCount": "<p>This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.</p>"
      }
    },
    "UserName": {
      "base": null,
      "refs": {
        "CreateUserRequest$UserName": "<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>. This user name must be a minimum of 3 and a maximum of 32 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore, and hyphen. The user name can't start with a hyphen.</p>",
        "CreateUserResponse$UserName": "<p>A unique string that identifies a user account associated with an SFTP server.</p>",
        "DeleteSshPublicKeyRequest$UserName": "<p>A unique string that identifies a user whose public key is being deleted.</p>",
        "DeleteUserRequest$UserName": "<p>A unique string that identifies a user that is being deleted from the server.</p>",
        "DescribeUserRequest$UserName": "<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer service and perform file transfer tasks.</p>",
        "DescribedUser$UserName": "<p>This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.</p>",
        "ImportSshPublicKeyRequest$UserName": "<p>The name of the user account that is assigned to one or more servers.</p>",
        "ImportSshPublicKeyResponse$UserName": "<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>",
        "ListedUser$UserName": "<p>The name of the user whose ARN was specified. User names are used for authentication purposes.</p>",
        "TestIdentityProviderRequest$UserName": "<p>This request parameter is name of the user account to be tested.</p>",
        "UpdateUserRequest$UserName": "<p>A unique string that identifies a user and is associated with a server as specified by the ServerId. This is the string that will be used by your user when they log in to your SFTP server. This user name is a minimum of 3 and a maximum of 32 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore, and hyphen. The user name can't start with a hyphen.</p>",
        "UpdateUserResponse$UserName": "<p>The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.</p>"
      }
    },
    "UserPassword": {
      "base": null,
      "refs": {
        "TestIdentityProviderRequest$UserPassword": "<p>The password of the user account to be tested.</p>"
      }
    },
    "VpcEndpointId": {
      "base": null,
      "refs": {
        "EndpointDetails$VpcEndpointId": "<p>The ID of the VPC endpoint.</p>"
      }
    }
  }
}
