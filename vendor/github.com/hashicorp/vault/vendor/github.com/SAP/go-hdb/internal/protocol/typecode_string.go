// Code generated by "stringer -type=TypeCode"; DO NOT EDIT.

package protocol

import "strconv"

const (
	_TypeCode_name_0 = "tcNulltcTinyinttcSmallinttcIntegertcBiginttcDecimaltcRealtcDoubletcChartcVarchartcNchartcNvarchartcBinarytcVarbinarytcDatetcTimetcTimestamp"
	_TypeCode_name_1 = "tcClobtcNclobtcBlobtcBooleantcStringtcNstringtcBlocatortcNlocatortcBstring"
	_TypeCode_name_2 = "tcVarchar2tcVarchar3tcNvarchar3tcVarbinary3"
	_TypeCode_name_3 = "tcSmalldecimal"
	_TypeCode_name_4 = "tcArraytcTexttcShorttext"
	_TypeCode_name_5 = "tcAlphanum"
	_TypeCode_name_6 = "tcLongdatetcSeconddatetcDaydatetcSecondtime"
)

var (
	_TypeCode_index_0 = [...]uint8{0, 6, 15, 25, 34, 42, 51, 57, 65, 71, 80, 87, 97, 105, 116, 122, 128, 139}
	_TypeCode_index_1 = [...]uint8{0, 6, 13, 19, 28, 36, 45, 55, 65, 74}
	_TypeCode_index_2 = [...]uint8{0, 10, 20, 31, 43}
	_TypeCode_index_4 = [...]uint8{0, 7, 13, 24}
	_TypeCode_index_6 = [...]uint8{0, 10, 22, 31, 43}
)

func (i TypeCode) String() string {
	switch {
	case 0 <= i && i <= 16:
		return _TypeCode_name_0[_TypeCode_index_0[i]:_TypeCode_index_0[i+1]]
	case 25 <= i && i <= 33:
		i -= 25
		return _TypeCode_name_1[_TypeCode_index_1[i]:_TypeCode_index_1[i+1]]
	case 35 <= i && i <= 38:
		i -= 35
		return _TypeCode_name_2[_TypeCode_index_2[i]:_TypeCode_index_2[i+1]]
	case i == 47:
		return _TypeCode_name_3
	case 50 <= i && i <= 52:
		i -= 50
		return _TypeCode_name_4[_TypeCode_index_4[i]:_TypeCode_index_4[i+1]]
	case i == 55:
		return _TypeCode_name_5
	case 61 <= i && i <= 64:
		i -= 61
		return _TypeCode_name_6[_TypeCode_index_6[i]:_TypeCode_index_6[i+1]]
	default:
		return "TypeCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
