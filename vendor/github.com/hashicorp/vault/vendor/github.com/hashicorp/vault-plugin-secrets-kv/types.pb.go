// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package kv

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// If values are added to this, be sure to update the config() function
type Configuration struct {
	MaxVersions          uint32             `protobuf:"varint,1,opt,name=max_versions,json=maxVersions,proto3" json:"max_versions,omitempty"`
	CasRequired          bool               `protobuf:"varint,2,opt,name=cas_required,json=casRequired,proto3" json:"cas_required,omitempty"`
	DeleteVersionAfter   *duration.Duration `protobuf:"bytes,3,opt,name=delete_version_after,json=deleteVersionAfter,proto3" json:"delete_version_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Configuration) Reset()         { *m = Configuration{} }
func (m *Configuration) String() string { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()    {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Configuration.Unmarshal(m, b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
}
func (m *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(m, src)
}
func (m *Configuration) XXX_Size() int {
	return xxx_messageInfo_Configuration.Size(m)
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

func (m *Configuration) GetMaxVersions() uint32 {
	if m != nil {
		return m.MaxVersions
	}
	return 0
}

func (m *Configuration) GetCasRequired() bool {
	if m != nil {
		return m.CasRequired
	}
	return false
}

func (m *Configuration) GetDeleteVersionAfter() *duration.Duration {
	if m != nil {
		return m.DeleteVersionAfter
	}
	return nil
}

type VersionMetadata struct {
	// CreatedTime is when the version was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// DeletionTime is the time this version becomes invalid.
	// Set to Now() to delete the version before the configured
	// delete time.
	DeletionTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=deletion_time,json=deletionTime,proto3" json:"deletion_time,omitempty"`
	// Destroyed is used to specify this version is
	// a has been removed and the underlying data deleted.
	Destroyed            bool     `protobuf:"varint,3,opt,name=destroyed,proto3" json:"destroyed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionMetadata) Reset()         { *m = VersionMetadata{} }
func (m *VersionMetadata) String() string { return proto.CompactTextString(m) }
func (*VersionMetadata) ProtoMessage()    {}
func (*VersionMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

func (m *VersionMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionMetadata.Unmarshal(m, b)
}
func (m *VersionMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionMetadata.Marshal(b, m, deterministic)
}
func (m *VersionMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionMetadata.Merge(m, src)
}
func (m *VersionMetadata) XXX_Size() int {
	return xxx_messageInfo_VersionMetadata.Size(m)
}
func (m *VersionMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_VersionMetadata proto.InternalMessageInfo

func (m *VersionMetadata) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *VersionMetadata) GetDeletionTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeletionTime
	}
	return nil
}

func (m *VersionMetadata) GetDestroyed() bool {
	if m != nil {
		return m.Destroyed
	}
	return false
}

type KeyMetadata struct {
	// Key is the key for this entry
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Versions is the map of versionID -> VersionMetadata.
	// Useful when listing all versions.
	Versions map[uint64]*VersionMetadata `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// CurrentVersion is the latest version of the value
	CurrentVersion uint64 `protobuf:"varint,3,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	// OldestVersion is the oldest version of the value.
	OldestVersion uint64 `protobuf:"varint,4,opt,name=oldest_version,json=oldestVersion,proto3" json:"oldest_version,omitempty"`
	// Created time is when the metadata was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// Updated time was the last time the metadata version
	// was updated.
	UpdatedTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	// MaxVersions specifies how many versions to keep around.
	// If empty value, defaults to the configured Max
	// for the mount.
	MaxVersions uint32 `protobuf:"varint,7,opt,name=max_versions,json=maxVersions,proto3" json:"max_versions,omitempty"`
	// CasRequired specifies if the cas parameter is
	// required for this key
	CasRequired bool `protobuf:"varint,8,opt,name=cas_required,json=casRequired,proto3" json:"cas_required,omitempty"`
	// DeleteVersionAfter specifies how long to keep versions around. If
	// empty value, defaults to the configured delete_version_after for the
	// mount.
	DeleteVersionAfter   *duration.Duration `protobuf:"bytes,9,opt,name=delete_version_after,json=deleteVersionAfter,proto3" json:"delete_version_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *KeyMetadata) Reset()         { *m = KeyMetadata{} }
func (m *KeyMetadata) String() string { return proto.CompactTextString(m) }
func (*KeyMetadata) ProtoMessage()    {}
func (*KeyMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{2}
}

func (m *KeyMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyMetadata.Unmarshal(m, b)
}
func (m *KeyMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyMetadata.Marshal(b, m, deterministic)
}
func (m *KeyMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyMetadata.Merge(m, src)
}
func (m *KeyMetadata) XXX_Size() int {
	return xxx_messageInfo_KeyMetadata.Size(m)
}
func (m *KeyMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_KeyMetadata proto.InternalMessageInfo

func (m *KeyMetadata) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyMetadata) GetVersions() map[uint64]*VersionMetadata {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *KeyMetadata) GetCurrentVersion() uint64 {
	if m != nil {
		return m.CurrentVersion
	}
	return 0
}

func (m *KeyMetadata) GetOldestVersion() uint64 {
	if m != nil {
		return m.OldestVersion
	}
	return 0
}

func (m *KeyMetadata) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *KeyMetadata) GetUpdatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedTime
	}
	return nil
}

func (m *KeyMetadata) GetMaxVersions() uint32 {
	if m != nil {
		return m.MaxVersions
	}
	return 0
}

func (m *KeyMetadata) GetCasRequired() bool {
	if m != nil {
		return m.CasRequired
	}
	return false
}

func (m *KeyMetadata) GetDeleteVersionAfter() *duration.Duration {
	if m != nil {
		return m.DeleteVersionAfter
	}
	return nil
}

type Version struct {
	// Data is a JSON object with string keys that
	// represents the user supplied data.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// CreatedTime is when the version was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// DeletionTime is the time this version becomes invalid.
	// Set to Now() to delete the version before the configured
	// deletion time.
	DeletionTime         *timestamp.Timestamp `protobuf:"bytes,3,opt,name=deletion_time,json=deletionTime,proto3" json:"deletion_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{3}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Version) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *Version) GetDeletionTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeletionTime
	}
	return nil
}

type UpgradeInfo struct {
	// Started time is when the upgrade was started.
	StartedTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	// done is set to true once the backend has been successfully
	// upgraded.
	Done                 bool     `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeInfo) Reset()         { *m = UpgradeInfo{} }
func (m *UpgradeInfo) String() string { return proto.CompactTextString(m) }
func (*UpgradeInfo) ProtoMessage()    {}
func (*UpgradeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{4}
}

func (m *UpgradeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeInfo.Unmarshal(m, b)
}
func (m *UpgradeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeInfo.Marshal(b, m, deterministic)
}
func (m *UpgradeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeInfo.Merge(m, src)
}
func (m *UpgradeInfo) XXX_Size() int {
	return xxx_messageInfo_UpgradeInfo.Size(m)
}
func (m *UpgradeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeInfo proto.InternalMessageInfo

func (m *UpgradeInfo) GetStartedTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartedTime
	}
	return nil
}

func (m *UpgradeInfo) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func init() {
	proto.RegisterType((*Configuration)(nil), "kv.Configuration")
	proto.RegisterType((*VersionMetadata)(nil), "kv.VersionMetadata")
	proto.RegisterType((*KeyMetadata)(nil), "kv.KeyMetadata")
	proto.RegisterMapType((map[uint64]*VersionMetadata)(nil), "kv.KeyMetadata.VersionsEntry")
	proto.RegisterType((*Version)(nil), "kv.Version")
	proto.RegisterType((*UpgradeInfo)(nil), "kv.UpgradeInfo")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x8e, 0xd3, 0x30,
	0x18, 0x54, 0xd2, 0xec, 0x6e, 0xfb, 0x39, 0xd9, 0x45, 0x86, 0x43, 0xa9, 0xf8, 0x29, 0x91, 0x10,
	0xe5, 0x92, 0x95, 0xca, 0x05, 0x90, 0x56, 0x08, 0x01, 0x07, 0xb4, 0x42, 0x42, 0x16, 0x70, 0x2d,
	0xde, 0xfa, 0x6b, 0x15, 0xb5, 0x8d, 0x83, 0xe3, 0x54, 0x9b, 0x87, 0xe0, 0x11, 0xb8, 0xf0, 0x02,
	0xbc, 0x22, 0xb2, 0x63, 0x77, 0x97, 0x82, 0x54, 0x0a, 0x37, 0x6b, 0x3c, 0xf3, 0x79, 0x3c, 0x9e,
	0x04, 0x88, 0x6e, 0x4a, 0xac, 0xb2, 0x52, 0x49, 0x2d, 0x69, 0xb8, 0x58, 0x0f, 0xee, 0xcf, 0xa5,
	0x9c, 0x2f, 0xf1, 0xd4, 0x22, 0x17, 0xf5, 0xec, 0x54, 0xe7, 0x2b, 0xac, 0x34, 0x5f, 0x95, 0x2d,
	0x69, 0x70, 0x6f, 0x9b, 0x20, 0x6a, 0xc5, 0x75, 0x2e, 0x8b, 0x76, 0x3f, 0xfd, 0x1e, 0x40, 0xf2,
	0x4a, 0x16, 0xb3, 0x7c, 0xee, 0x70, 0xfa, 0x00, 0xe2, 0x15, 0xbf, 0x9c, 0xac, 0x51, 0x55, 0xb9,
	0x2c, 0xaa, 0x7e, 0x30, 0x0c, 0x46, 0x09, 0x23, 0x2b, 0x7e, 0xf9, 0xc9, 0x41, 0x86, 0x32, 0xe5,
	0xd5, 0x44, 0xe1, 0x97, 0x3a, 0x57, 0x28, 0xfa, 0xe1, 0x30, 0x18, 0x75, 0x19, 0x99, 0xf2, 0x8a,
	0x39, 0x88, 0x9e, 0xc3, 0x2d, 0x81, 0x4b, 0xd4, 0xe8, 0x07, 0x4d, 0xf8, 0x4c, 0xa3, 0xea, 0x77,
	0x86, 0xc1, 0x88, 0x8c, 0x6f, 0x67, 0xad, 0xad, 0xcc, 0xdb, 0xca, 0x5e, 0xbb, 0xe3, 0x19, 0x6d,
	0x65, 0xee, 0xac, 0x97, 0x46, 0x94, 0xfe, 0x08, 0xe0, 0xc4, 0x01, 0xef, 0x50, 0x73, 0xc1, 0x35,
	0xa7, 0x67, 0x10, 0x4f, 0x15, 0x72, 0x8d, 0x62, 0x62, 0xee, 0x6c, 0x6d, 0x92, 0xf1, 0xe0, 0xb7,
	0xc1, 0x1f, 0x7c, 0x20, 0x8c, 0x38, 0xbe, 0x41, 0xe8, 0x0b, 0x48, 0xec, 0x41, 0xc6, 0x99, 0xd5,
	0x87, 0x3b, 0xf5, 0xb1, 0x17, 0xd8, 0x01, 0x77, 0xa0, 0x27, 0xb0, 0xd2, 0x4a, 0x36, 0x28, 0xec,
	0xad, 0xba, 0xec, 0x0a, 0x48, 0xbf, 0x46, 0x40, 0xce, 0xb1, 0xd9, 0xb8, 0xbd, 0x01, 0x9d, 0x05,
	0x36, 0xd6, 0x64, 0x8f, 0x99, 0x25, 0x7d, 0x06, 0xdd, 0x4d, 0xc4, 0xe1, 0xb0, 0x33, 0x22, 0xe3,
	0xbb, 0xd9, 0x62, 0x9d, 0x5d, 0x13, 0x65, 0x3e, 0xef, 0x37, 0x85, 0x56, 0x0d, 0xdb, 0xd0, 0xe9,
	0x23, 0x38, 0x99, 0xd6, 0x4a, 0x61, 0xa1, 0x7d, 0xb8, 0xd6, 0x40, 0xc4, 0x8e, 0x1d, 0xec, 0x84,
	0xf4, 0x21, 0x1c, 0xcb, 0xa5, 0x31, 0xb5, 0xe1, 0x45, 0x96, 0x97, 0xb4, 0xa8, 0xa7, 0x6d, 0x47,
	0x79, 0xb0, 0x5f, 0x94, 0x67, 0x10, 0xd7, 0xa5, 0xb8, 0x92, 0x1f, 0xee, 0x96, 0x3b, 0xbe, 0x95,
	0x6f, 0xf7, 0xed, 0x68, 0x77, 0xdf, 0xba, 0x7f, 0xdf, 0xb7, 0xde, 0x3f, 0xf4, 0x6d, 0xf0, 0x1e,
	0x92, 0x5f, 0xb2, 0xbf, 0xfe, 0x7c, 0x51, 0xfb, 0x7c, 0x8f, 0xe1, 0x60, 0xcd, 0x97, 0xb5, 0xef,
	0xcd, 0x4d, 0xf3, 0x76, 0x5b, 0x15, 0x65, 0x2d, 0xe3, 0x79, 0xf8, 0x34, 0x48, 0xbf, 0x05, 0x70,
	0xe4, 0xe3, 0xa6, 0x10, 0x99, 0x6d, 0x3b, 0x2d, 0x66, 0xd1, 0x1f, 0xdb, 0x1c, 0xfe, 0x67, 0x9b,
	0x3b, 0xfb, 0xb5, 0x39, 0xfd, 0x0c, 0xe4, 0x63, 0x39, 0x57, 0x5c, 0xe0, 0xdb, 0x62, 0x26, 0x8d,
	0x9d, 0x4a, 0x73, 0xb5, 0xcf, 0xc7, 0xe5, 0xf8, 0xd6, 0x8e, 0xb9, 0xa1, 0x2c, 0xd0, 0xfd, 0x17,
	0xec, 0xfa, 0xe2, 0xd0, 0x8a, 0x9e, 0xfc, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x81, 0xe5, 0xbe, 0x7d,
	0xc3, 0x04, 0x00, 0x00,
}
