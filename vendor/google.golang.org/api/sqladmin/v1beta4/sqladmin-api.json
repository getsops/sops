{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/sqlservice.admin": {
          "description": "Manage your Google SQL Service instances"
        }
      }
    }
  },
  "basePath": "/sql/v1beta4/",
  "baseUrl": "https://www.googleapis.com/sql/v1beta4/",
  "batchPath": "batch/sqladmin/v1beta4",
  "canonicalName": "SQL Admin",
  "description": "Creates and manages Cloud SQL instances, which provide fully managed MySQL or PostgreSQL databases.",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/sql/docs/reference/latest",
  "etag": "\"VPK3KBfpaEgZ16pozGOoMYfKc0U/kwai7B3cC4eEEbSxYFHS0BuBYIc\"",
  "icons": {
    "x16": "https://www.gstatic.com/images/branding/product/1x/googleg_16dp.png",
    "x32": "https://www.gstatic.com/images/branding/product/1x/googleg_32dp.png"
  },
  "id": "sqladmin:v1beta4",
  "kind": "discovery#restDescription",
  "name": "sqladmin",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "parameters": {
    "alt": {
      "default": "json",
      "description": "Data format for the response.",
      "enum": [
        "json"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json"
      ],
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "userIp": {
      "description": "Deprecated. Please use quotaUser instead.",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "resources": {
    "backupRuns": {
      "methods": {
        "delete": {
          "description": "Deletes the backup taken by a backup run.",
          "httpMethod": "DELETE",
          "id": "sql.backupRuns.delete",
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "parameters": {
            "id": {
              "description": "The ID of the Backup Run to delete. To find a Backup Run ID, use the list method.",
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/backupRuns/{id}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "get": {
          "description": "Retrieves a resource containing information about a backup run.",
          "httpMethod": "GET",
          "id": "sql.backupRuns.get",
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "parameters": {
            "id": {
              "description": "The ID of this Backup Run.",
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/backupRuns/{id}",
          "response": {
            "$ref": "BackupRun"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
          "description": "Creates a new backup run on demand. This method is applicable only to Second Generation instances.",
          "httpMethod": "POST",
          "id": "sql.backupRuns.insert",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/backupRuns",
          "request": {
            "$ref": "BackupRun"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists all backup runs associated with a given instance and configuration in the reverse chronological order of the backup initiation time.",
          "httpMethod": "GET",
          "id": "sql.backupRuns.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of backup runs per response.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/backupRuns",
          "response": {
            "$ref": "BackupRunsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "databases": {
      "methods": {
        "delete": {
          "description": "Deletes a database from a Cloud SQL instance.",
          "httpMethod": "DELETE",
          "id": "sql.databases.delete",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "database": {
              "description": "Name of the database to be deleted in the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/databases/{database}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "get": {
          "description": "Retrieves a resource containing information about a database inside a Cloud SQL instance.",
          "httpMethod": "GET",
          "id": "sql.databases.get",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "database": {
              "description": "Name of the database in the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/databases/{database}",
          "response": {
            "$ref": "Database"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
          "description": "Inserts a resource containing information about a database inside a Cloud SQL instance.",
          "httpMethod": "POST",
          "id": "sql.databases.insert",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/databases",
          "request": {
            "$ref": "Database"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists databases in the specified Cloud SQL instance.",
          "httpMethod": "GET",
          "id": "sql.databases.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/databases",
          "response": {
            "$ref": "DatabasesListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "patch": {
          "description": "Updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.",
          "httpMethod": "PATCH",
          "id": "sql.databases.patch",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "database": {
              "description": "Name of the database to be updated in the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/databases/{database}",
          "request": {
            "$ref": "Database"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "update": {
          "description": "Updates a resource containing information about a database inside a Cloud SQL instance.",
          "httpMethod": "PUT",
          "id": "sql.databases.update",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "database": {
              "description": "Name of the database to be updated in the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/databases/{database}",
          "request": {
            "$ref": "Database"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "flags": {
      "methods": {
        "list": {
          "description": "List all available database flags for Cloud SQL instances.",
          "httpMethod": "GET",
          "id": "sql.flags.list",
          "parameters": {
            "databaseVersion": {
              "description": "Database type and version you want to retrieve flags for. By default, this method returns flags for all database types and versions.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "flags",
          "response": {
            "$ref": "FlagsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "instances": {
      "methods": {
        "addServerCa": {
          "description": "Add a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.",
          "httpMethod": "POST",
          "id": "sql.instances.addServerCa",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/addServerCa",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "clone": {
          "description": "Creates a Cloud SQL instance as a clone of the source instance.",
          "httpMethod": "POST",
          "id": "sql.instances.clone",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "The ID of the Cloud SQL instance to be cloned (source). This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the source as well as the clone Cloud SQL instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/clone",
          "request": {
            "$ref": "InstancesCloneRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "delete": {
          "description": "Deletes a Cloud SQL instance.",
          "httpMethod": "DELETE",
          "id": "sql.instances.delete",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance to be deleted.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "demoteMaster": {
          "description": "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
          "httpMethod": "POST",
          "id": "sql.instances.demoteMaster",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/demoteMaster",
          "request": {
            "$ref": "InstancesDemoteMasterRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "export": {
          "description": "Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.",
          "httpMethod": "POST",
          "id": "sql.instances.export",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance to be exported.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/export",
          "request": {
            "$ref": "InstancesExportRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "failover": {
          "description": "Failover the instance to its failover replica instance.",
          "httpMethod": "POST",
          "id": "sql.instances.failover",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/failover",
          "request": {
            "$ref": "InstancesFailoverRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "get": {
          "description": "Retrieves a resource containing information about a Cloud SQL instance.",
          "httpMethod": "GET",
          "id": "sql.instances.get",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}",
          "response": {
            "$ref": "DatabaseInstance"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "import": {
          "description": "Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage.",
          "httpMethod": "POST",
          "id": "sql.instances.import",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/import",
          "request": {
            "$ref": "InstancesImportRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "insert": {
          "description": "Creates a new Cloud SQL instance.",
          "httpMethod": "POST",
          "id": "sql.instances.insert",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project to which the newly created Cloud SQL instances should belong.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists instances under a given project in the alphabetical order of the instance name.",
          "httpMethod": "GET",
          "id": "sql.instances.list",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "filter": {
              "description": "An expression for filtering the results of the request, such as by name or label.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "The maximum number of results to return per response.",
              "format": "uint32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project for which to list Cloud SQL instances.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances",
          "response": {
            "$ref": "InstancesListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "listServerCas": {
          "description": "Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.",
          "httpMethod": "GET",
          "id": "sql.instances.listServerCas",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/listServerCas",
          "response": {
            "$ref": "InstancesListServerCasResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "patch": {
          "description": "Updates settings of a Cloud SQL instance. Caution: This is not a partial update, so you must include values for all the settings that you want to retain. For partial updates, use patch.. This method supports patch semantics.",
          "httpMethod": "PATCH",
          "id": "sql.instances.patch",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "promoteReplica": {
          "description": "Promotes the read replica instance to be a stand-alone Cloud SQL instance.",
          "httpMethod": "POST",
          "id": "sql.instances.promoteReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL read replica instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/promoteReplica",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "resetSslConfig": {
          "description": "Deletes all client certificates and generates a new server SSL certificate for the instance.",
          "httpMethod": "POST",
          "id": "sql.instances.resetSslConfig",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/resetSslConfig",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "restart": {
          "description": "Restarts a Cloud SQL instance.",
          "httpMethod": "POST",
          "id": "sql.instances.restart",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance to be restarted.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/restart",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "restoreBackup": {
          "description": "Restores a backup of a Cloud SQL instance.",
          "httpMethod": "POST",
          "id": "sql.instances.restoreBackup",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/restoreBackup",
          "request": {
            "$ref": "InstancesRestoreBackupRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "rotateServerCa": {
          "description": "Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.",
          "httpMethod": "POST",
          "id": "sql.instances.rotateServerCa",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/rotateServerCa",
          "request": {
            "$ref": "InstancesRotateServerCaRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "startReplica": {
          "description": "Starts the replication in the read replica instance.",
          "httpMethod": "POST",
          "id": "sql.instances.startReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL read replica instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/startReplica",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "stopReplica": {
          "description": "Stops the replication in the read replica instance.",
          "httpMethod": "POST",
          "id": "sql.instances.stopReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL read replica instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/stopReplica",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "truncateLog": {
          "description": "Truncate MySQL general and slow query log tables",
          "httpMethod": "POST",
          "id": "sql.instances.truncateLog",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the Cloud SQL project.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/truncateLog",
          "request": {
            "$ref": "InstancesTruncateLogRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "update": {
          "description": "Updates settings of a Cloud SQL instance. Caution: This is not a partial update, so you must include values for all the settings that you want to retain. For partial updates, use patch.",
          "httpMethod": "PUT",
          "id": "sql.instances.update",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "description": "Retrieves an instance operation that has been performed on an instance.",
          "httpMethod": "GET",
          "id": "sql.operations.get",
          "parameterOrder": [
            "project",
            "operation"
          ],
          "parameters": {
            "operation": {
              "description": "Instance operation ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/operations/{operation}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.",
          "httpMethod": "GET",
          "id": "sql.operations.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of operations per response.",
              "format": "uint32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/operations",
          "response": {
            "$ref": "OperationsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "sslCerts": {
      "methods": {
        "createEphemeral": {
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
          "httpMethod": "POST",
          "id": "sql.sslCerts.createEphemeral",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the Cloud SQL project.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/createEphemeral",
          "request": {
            "$ref": "SslCertsCreateEphemeralRequest"
          },
          "response": {
            "$ref": "SslCert"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "delete": {
          "description": "Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.",
          "httpMethod": "DELETE",
          "id": "sql.sslCerts.delete",
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "sha1Fingerprint": {
              "description": "Sha1 FingerPrint.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "get": {
          "description": "Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.",
          "httpMethod": "GET",
          "id": "sql.sslCerts.get",
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "sha1Fingerprint": {
              "description": "Sha1 FingerPrint.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "response": {
            "$ref": "SslCert"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
          "description": "Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.",
          "httpMethod": "POST",
          "id": "sql.sslCerts.insert",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/sslCerts",
          "request": {
            "$ref": "SslCertsInsertRequest"
          },
          "response": {
            "$ref": "SslCertsInsertResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists all of the current SSL certificates for the instance.",
          "httpMethod": "GET",
          "id": "sql.sslCerts.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/sslCerts",
          "response": {
            "$ref": "SslCertsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "tiers": {
      "methods": {
        "list": {
          "description": "Lists all available machine types (tiers) for Cloud SQL, for example, db-n1-standard-1. For related information, see Pricing.",
          "httpMethod": "GET",
          "id": "sql.tiers.list",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project for which to list tiers.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/tiers",
          "response": {
            "$ref": "TiersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "users": {
      "methods": {
        "delete": {
          "description": "Deletes a user from a Cloud SQL instance.",
          "httpMethod": "DELETE",
          "id": "sql.users.delete",
          "parameterOrder": [
            "project",
            "instance",
            "host",
            "name"
          ],
          "parameters": {
            "host": {
              "description": "Host of the user in the instance.",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "name": {
              "description": "Name of the user in the instance.",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/users",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
          "description": "Creates a new user in a Cloud SQL instance.",
          "httpMethod": "POST",
          "id": "sql.users.insert",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/users",
          "request": {
            "$ref": "User"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "description": "Lists users in the specified Cloud SQL instance.",
          "httpMethod": "GET",
          "id": "sql.users.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/users",
          "response": {
            "$ref": "UsersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "update": {
          "description": "Updates an existing user in a Cloud SQL instance.",
          "httpMethod": "PUT",
          "id": "sql.users.update",
          "parameterOrder": [
            "project",
            "instance",
            "name"
          ],
          "parameters": {
            "host": {
              "description": "Host of the user in the instance.",
              "location": "query",
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "name": {
              "description": "Name of the user in the instance.",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "projects/{project}/instances/{instance}/users",
          "request": {
            "$ref": "User"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    }
  },
  "revision": "20190510",
  "rootUrl": "https://www.googleapis.com/",
  "schemas": {
    "AclEntry": {
      "description": "An entry for an Access Control list.",
      "id": "AclEntry",
      "properties": {
        "expirationTime": {
          "description": "The time when this access control entry expires in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "format": "date-time",
          "type": "string"
        },
        "kind": {
          "default": "sql#aclEntry",
          "description": "This is always sql#aclEntry.",
          "type": "string"
        },
        "name": {
          "description": "An optional label to identify this entry.",
          "type": "string"
        },
        "value": {
          "description": "The whitelisted value for the access control list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiWarning": {
      "description": "An Admin API warning message.",
      "id": "ApiWarning",
      "properties": {
        "code": {
          "description": "Code to uniquely identify the warning type.",
          "type": "string"
        },
        "message": {
          "description": "The warning message.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupConfiguration": {
      "description": "Database instance backup configuration.",
      "id": "BackupConfiguration",
      "properties": {
        "binaryLogEnabled": {
          "description": "Whether binary log is enabled. If backup configuration is disabled, binary log must be disabled as well.",
          "type": "boolean"
        },
        "enabled": {
          "description": "Whether this configuration is enabled.",
          "type": "boolean"
        },
        "kind": {
          "default": "sql#backupConfiguration",
          "description": "This is always sql#backupConfiguration.",
          "type": "string"
        },
        "location": {
          "description": "The location of the backup.",
          "type": "string"
        },
        "replicationLogArchivingEnabled": {
          "description": "Reserved for future use.",
          "type": "boolean"
        },
        "startTime": {
          "description": "Start time for the daily backup configuration in UTC timezone in the 24 hour format - HH:MM.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupRun": {
      "description": "A BackupRun resource.",
      "id": "BackupRun",
      "properties": {
        "description": {
          "description": "The description of this run, only applicable to on-demand backups.",
          "type": "string"
        },
        "endTime": {
          "description": "The time the backup operation completed in UTC timezone in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "format": "date-time",
          "type": "string"
        },
        "enqueuedTime": {
          "description": "The time the run was enqueued in UTC timezone in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "OperationError",
          "description": "Information about why the backup operation failed. This is only present if the run has the FAILED status."
        },
        "id": {
          "description": "The identifier for this backup run. Unique only for a specific Cloud SQL instance.",
          "format": "int64",
          "type": "string"
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "kind": {
          "default": "sql#backupRun",
          "description": "This is always sql#backupRun.",
          "type": "string"
        },
        "location": {
          "description": "The location of the backup.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "startTime": {
          "description": "The time the backup operation actually started in UTC timezone in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of this run.",
          "type": "string"
        },
        "type": {
          "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\".",
          "type": "string"
        },
        "windowStartTime": {
          "description": "The start time of the backup window during which this the backup was attempted in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupRunsListResponse": {
      "description": "Backup run list results.",
      "id": "BackupRunsListResponse",
      "properties": {
        "items": {
          "description": "A list of backup runs in reverse chronological order of the enqueued time.",
          "items": {
            "$ref": "BackupRun"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#backupRunsList",
          "description": "This is always sql#backupRunsList.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BinLogCoordinates": {
      "description": "Binary log coordinates.",
      "id": "BinLogCoordinates",
      "properties": {
        "binLogFileName": {
          "description": "Name of the binary log file for a Cloud SQL instance.",
          "type": "string"
        },
        "binLogPosition": {
          "description": "Position (offset) within the binary log file.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "default": "sql#binLogCoordinates",
          "description": "This is always sql#binLogCoordinates.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloneContext": {
      "description": "Database instance clone context.",
      "id": "CloneContext",
      "properties": {
        "binLogCoordinates": {
          "$ref": "BinLogCoordinates",
          "description": "Binary log coordinates, if specified, identify the position up to which the source instance should be cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates."
        },
        "destinationInstanceName": {
          "description": "Name of the Cloud SQL instance to be created as a clone.",
          "type": "string"
        },
        "kind": {
          "default": "sql#cloneContext",
          "description": "This is always sql#cloneContext.",
          "type": "string"
        },
        "pitrTimestampMs": {
          "description": "Reserved for future use.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Database": {
      "description": "Represents a SQL database on the Cloud SQL instance.",
      "id": "Database",
      "properties": {
        "charset": {
          "description": "The MySQL charset value.",
          "type": "string"
        },
        "collation": {
          "description": "The MySQL collation value.",
          "type": "string"
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API.",
          "type": "string"
        },
        "instance": {
          "annotations": {
            "required": [
              "sql.databases.insert"
            ]
          },
          "description": "The name of the Cloud SQL instance. This does not include the project ID.",
          "type": "string"
        },
        "kind": {
          "default": "sql#database",
          "description": "This is always sql#database.",
          "type": "string"
        },
        "name": {
          "annotations": {
            "required": [
              "sql.databases.insert"
            ]
          },
          "description": "The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.",
          "type": "string"
        },
        "project": {
          "annotations": {
            "required": [
              "sql.databases.insert"
            ]
          },
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatabaseFlags": {
      "description": "Database flags for Cloud SQL instances.",
      "id": "DatabaseFlags",
      "properties": {
        "name": {
          "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables for MySQL. Flags should be specified with underscores, not hyphens. For more information, see Configuring Database Flags in the Cloud SQL documentation.",
          "type": "string"
        },
        "value": {
          "description": "The value of the flag. Booleans should be set to on for true and off for false. This field must be omitted if the flag doesn't take a value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatabaseInstance": {
      "description": "A Cloud SQL instance resource.",
      "id": "DatabaseInstance",
      "properties": {
        "backendType": {
          "description": "FIRST_GEN: First Generation instance. MySQL only.\nSECOND_GEN: Second Generation instance or PostgreSQL instance.\nEXTERNAL: A database server that is not managed by Google.\nThis property is read-only; use the tier property in the settings object to determine the database type and Second or First Generation.",
          "type": "string"
        },
        "connectionName": {
          "description": "Connection name of the Cloud SQL instance used in connection strings.",
          "type": "string"
        },
        "currentDiskSize": {
          "description": "The current disk usage of the instance in bytes. This property has been deprecated. Users should use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see this announcement for details.",
          "format": "int64",
          "type": "string"
        },
        "databaseVersion": {
          "description": "The database engine type and version. The databaseVersion field can not be changed after instance creation. MySQL Second Generation instances: MYSQL_5_7 (default) or MYSQL_5_6. PostgreSQL instances: POSTGRES_9_6 (default) or POSTGRES_11 Beta. MySQL First Generation instances: MYSQL_5_6 (default) or MYSQL_5_5",
          "type": "string"
        },
        "diskEncryptionConfiguration": {
          "$ref": "DiskEncryptionConfiguration",
          "description": "Disk encryption configuration specific to an instance. Applies only to Second Generation instances."
        },
        "diskEncryptionStatus": {
          "$ref": "DiskEncryptionStatus",
          "description": "Disk encryption status specific to an instance. Applies only to Second Generation instances."
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API. Use the settings.settingsVersion field instead.",
          "type": "string"
        },
        "failoverReplica": {
          "description": "The name and status of the failover replica. This property is applicable only to Second Generation instances.",
          "properties": {
            "available": {
              "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The master can only failover to the falover replica when the status is true.",
              "type": "boolean"
            },
            "name": {
              "description": "The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID. This property is applicable only to Second Generation instances.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "gceZone": {
          "description": "The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone.",
          "type": "string"
        },
        "instanceType": {
          "description": "The instance type. This can be one of the following.\nCLOUD_SQL_INSTANCE: A Cloud SQL instance that is not replicating from a master.\nON_PREMISES_INSTANCE: An instance running on the customer's premises.\nREAD_REPLICA_INSTANCE: A Cloud SQL instance configured as a read-replica.",
          "type": "string"
        },
        "ipAddresses": {
          "description": "The assigned IP addresses for the instance.",
          "items": {
            "$ref": "IpMapping"
          },
          "type": "array"
        },
        "ipv6Address": {
          "description": "The IPv6 address assigned to the instance. This property is applicable only to First Generation instances.",
          "type": "string"
        },
        "kind": {
          "default": "sql#instance",
          "description": "This is always sql#instance.",
          "type": "string"
        },
        "masterInstanceName": {
          "description": "The name of the instance which will act as master in the replication setup.",
          "type": "string"
        },
        "maxDiskSize": {
          "description": "The maximum disk size of the instance in bytes.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "annotations": {
            "required": [
              "sql.instances.insert"
            ]
          },
          "description": "Name of the Cloud SQL instance. This does not include the project ID.",
          "type": "string"
        },
        "onPremisesConfiguration": {
          "$ref": "OnPremisesConfiguration",
          "description": "Configuration specific to on-premises instances."
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.",
          "type": "string"
        },
        "region": {
          "description": "The geographical region. Can be us-central (FIRST_GEN instances only), us-central1 (SECOND_GEN instances only), asia-east1 or europe-west1. Defaults to us-central or us-central1 depending on the instance type (First Generation or Second Generation). The region can not be changed after instance creation.",
          "type": "string"
        },
        "replicaConfiguration": {
          "$ref": "ReplicaConfiguration",
          "description": "Configuration specific to failover replicas and read replicas."
        },
        "replicaNames": {
          "description": "The replicas of the instance.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "rootPassword": {
          "description": "Initial root password. Use only on creation.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "serverCaCert": {
          "$ref": "SslCert",
          "description": "SSL configuration."
        },
        "serviceAccountEmailAddress": {
          "description": "The service account email address assigned to the instance. This property is applicable only to Second Generation instances.",
          "type": "string"
        },
        "settings": {
          "$ref": "Settings",
          "annotations": {
            "required": [
              "sql.instances.insert",
              "sql.instances.update"
            ]
          },
          "description": "The user settings."
        },
        "state": {
          "description": "The current serving state of the Cloud SQL instance. This can be one of the following.\nRUNNABLE: The instance is running, or is ready to run when accessed.\nSUSPENDED: The instance is not available, for example due to problems with billing.\nPENDING_CREATE: The instance is being created.\nMAINTENANCE: The instance is down for maintenance.\nFAILED: The instance creation failed.\nUNKNOWN_STATE: The state of the instance is unknown.",
          "type": "string"
        },
        "suspensionReason": {
          "description": "If the instance state is SUSPENDED, the reason for the suspension.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DatabasesListResponse": {
      "description": "Database list response.",
      "id": "DatabasesListResponse",
      "properties": {
        "items": {
          "description": "List of database resources in the instance.",
          "items": {
            "$ref": "Database"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#databasesList",
          "description": "This is always sql#databasesList.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DemoteMasterConfiguration": {
      "description": "Read-replica configuration for connecting to the on-premises master.",
      "id": "DemoteMasterConfiguration",
      "properties": {
        "kind": {
          "default": "sql#demoteMasterConfiguration",
          "description": "This is always sql#demoteMasterConfiguration.",
          "type": "string"
        },
        "mysqlReplicaConfiguration": {
          "$ref": "DemoteMasterMySqlReplicaConfiguration",
          "description": "MySQL specific configuration when replicating from a MySQL on-premises master. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named master.info in the data directory."
        }
      },
      "type": "object"
    },
    "DemoteMasterContext": {
      "description": "Database instance demote master context.",
      "id": "DemoteMasterContext",
      "properties": {
        "kind": {
          "default": "sql#demoteMasterContext",
          "description": "This is always sql#demoteMasterContext.",
          "type": "string"
        },
        "masterInstanceName": {
          "description": "The name of the instance which will act as on-premises master in the replication setup.",
          "type": "string"
        },
        "replicaConfiguration": {
          "$ref": "DemoteMasterConfiguration",
          "description": "Configuration specific to read-replicas replicating from the on-premises master."
        },
        "verifyGtidConsistency": {
          "description": "Verify GTID consistency for demote operation. Default value: True. Second Generation instances only. Setting this flag to false enables you to bypass GTID consistency check between on-premises master and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DemoteMasterMySqlReplicaConfiguration": {
      "description": "Read-replica configuration specific to MySQL databases.",
      "id": "DemoteMasterMySqlReplicaConfiguration",
      "properties": {
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "PEM representation of the slave's x509 certificate.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the slave's private key. The corresponsing public key is encoded in the client's certificate. The format of the slave's private key can be either PKCS #1 or PKCS #8.",
          "type": "string"
        },
        "kind": {
          "default": "sql#demoteMasterMysqlReplicaConfiguration",
          "description": "This is always sql#demoteMasterMysqlReplicaConfiguration.",
          "type": "string"
        },
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiskEncryptionConfiguration": {
      "description": "Disk encryption configuration.",
      "id": "DiskEncryptionConfiguration",
      "properties": {
        "kind": {
          "default": "sql#diskEncryptionConfiguration",
          "description": "This is always sql#diskEncryptionConfiguration.",
          "type": "string"
        },
        "kmsKeyName": {
          "description": "KMS key resource name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiskEncryptionStatus": {
      "description": "Disk encryption status.",
      "id": "DiskEncryptionStatus",
      "properties": {
        "kind": {
          "default": "sql#diskEncryptionStatus",
          "description": "This is always sql#diskEncryptionStatus.",
          "type": "string"
        },
        "kmsKeyVersionName": {
          "description": "KMS key version used to encrypt the Cloud SQL instance disk",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportContext": {
      "description": "Database instance export context.",
      "id": "ExportContext",
      "properties": {
        "csvExportOptions": {
          "description": "Options for exporting data as CSV.",
          "properties": {
            "selectQuery": {
              "description": "The select query used to extract the data.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "databases": {
          "description": "Databases to be exported.\nMySQL instances: If fileType is SQL and no database is specified, all databases are exported, except for the mysql system database. If fileType is CSV, you can specify one database, either by using this property or by using the csvExportOptions.selectQuery property, which takes precedence over this property.\nPostgreSQL instances: Specify exactly one database to be exported. If fileType is CSV, this database must match the database used in the csvExportOptions.selectQuery property.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fileType": {
          "description": "The file type for the specified uri.\nSQL: The file contains SQL statements.\nCSV: The file contains CSV data.",
          "type": "string"
        },
        "kind": {
          "default": "sql#exportContext",
          "description": "This is always sql#exportContext.",
          "type": "string"
        },
        "sqlExportOptions": {
          "description": "Options for exporting data as SQL statements.",
          "properties": {
            "mysqlExportOptions": {
              "description": "Options for exporting from MySQL.",
              "properties": {
                "masterData": {
                  "description": "Option to include SQL statement required to set up replication. If set to 1, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to 2, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "schemaOnly": {
              "description": "Export only schemas.",
              "type": "boolean"
            },
            "tables": {
              "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "uri": {
          "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form gs://bucketName/fileName. If the file already exists, the requests succeeds, but the operation fails. If fileType is SQL and the filename ends with .gz, the contents are compressed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FailoverContext": {
      "description": "Database instance failover context.",
      "id": "FailoverContext",
      "properties": {
        "kind": {
          "default": "sql#failoverContext",
          "description": "This is always sql#failoverContext.",
          "type": "string"
        },
        "settingsVersion": {
          "description": "The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Flag": {
      "description": "A flag resource.",
      "id": "Flag",
      "properties": {
        "allowedStringValues": {
          "description": "For STRING flags, a list of strings that the value can be set to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "appliesTo": {
          "description": "The database version this flag applies to. Can be MYSQL_5_5, MYSQL_5_6, or MYSQL_5_7. MYSQL_5_7 is applicable only to Second Generation instances.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inBeta": {
          "description": "True if the flag is only released in Beta.",
          "type": "boolean"
        },
        "kind": {
          "default": "sql#flag",
          "description": "This is always sql#flag.",
          "type": "string"
        },
        "maxValue": {
          "description": "For INTEGER flags, the maximum allowed value.",
          "format": "int64",
          "type": "string"
        },
        "minValue": {
          "description": "For INTEGER flags, the minimum allowed value.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "This is the name of the flag. Flag names always use underscores, not hyphens, e.g. max_allowed_packet",
          "type": "string"
        },
        "requiresRestart": {
          "description": "Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances.",
          "type": "boolean"
        },
        "type": {
          "description": "The type of the flag. Flags are typed to being BOOLEAN, STRING, INTEGER or NONE. NONE is used for flags which do not take a value, such as skip_grant_tables.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FlagsListResponse": {
      "description": "Flags list response.",
      "id": "FlagsListResponse",
      "properties": {
        "items": {
          "description": "List of flags.",
          "items": {
            "$ref": "Flag"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#flagsList",
          "description": "This is always sql#flagsList.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImportContext": {
      "description": "Database instance import context.",
      "id": "ImportContext",
      "properties": {
        "csvImportOptions": {
          "description": "Options for importing data as CSV.",
          "properties": {
            "columns": {
              "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "table": {
              "description": "The table to which CSV data is imported.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "database": {
          "description": "The target database for the import. If fileType is SQL, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If fileType is CSV, one database must be specified.",
          "type": "string"
        },
        "fileType": {
          "description": "The file type for the specified uri.\nSQL: The file contains SQL statements.\nCSV: The file contains CSV data.",
          "type": "string"
        },
        "importUser": {
          "description": "The PostgreSQL user for this import operation. PostgreSQL instances only.",
          "type": "string"
        },
        "kind": {
          "default": "sql#importContext",
          "description": "This is always sql#importContext.",
          "type": "string"
        },
        "uri": {
          "description": "Path to the import file in Cloud Storage, in the form gs://bucketName/fileName. Compressed gzip files (.gz) are supported when fileType is SQL. The instance must have write permissions to the bucket and read access to the file.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InstancesCloneRequest": {
      "description": "Database instance clone request.",
      "id": "InstancesCloneRequest",
      "properties": {
        "cloneContext": {
          "$ref": "CloneContext",
          "description": "Contains details about the clone operation."
        }
      },
      "type": "object"
    },
    "InstancesDemoteMasterRequest": {
      "description": "Database demote master request.",
      "id": "InstancesDemoteMasterRequest",
      "properties": {
        "demoteMasterContext": {
          "$ref": "DemoteMasterContext",
          "description": "Contains details about the demoteMaster operation."
        }
      },
      "type": "object"
    },
    "InstancesExportRequest": {
      "description": "Database instance export request.",
      "id": "InstancesExportRequest",
      "properties": {
        "exportContext": {
          "$ref": "ExportContext",
          "description": "Contains details about the export operation."
        }
      },
      "type": "object"
    },
    "InstancesFailoverRequest": {
      "description": "Instance failover request.",
      "id": "InstancesFailoverRequest",
      "properties": {
        "failoverContext": {
          "$ref": "FailoverContext",
          "description": "Failover Context."
        }
      },
      "type": "object"
    },
    "InstancesImportRequest": {
      "description": "Database instance import request.",
      "id": "InstancesImportRequest",
      "properties": {
        "importContext": {
          "$ref": "ImportContext",
          "description": "Contains details about the import operation."
        }
      },
      "type": "object"
    },
    "InstancesListResponse": {
      "description": "Database instances list response.",
      "id": "InstancesListResponse",
      "properties": {
        "items": {
          "description": "List of database instance resources.",
          "items": {
            "$ref": "DatabaseInstance"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#instancesList",
          "description": "This is always sql#instancesList.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        },
        "warnings": {
          "description": "List of warnings that ocurred while handling the request.",
          "items": {
            "$ref": "ApiWarning"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InstancesListServerCasResponse": {
      "description": "Instances ListServerCas response.",
      "id": "InstancesListServerCasResponse",
      "properties": {
        "activeVersion": {
          "type": "string"
        },
        "certs": {
          "description": "List of server CA certificates for the instance.",
          "items": {
            "$ref": "SslCert"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#instancesListServerCas",
          "description": "This is always sql#instancesListServerCas.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InstancesRestoreBackupRequest": {
      "description": "Database instance restore backup request.",
      "id": "InstancesRestoreBackupRequest",
      "properties": {
        "restoreBackupContext": {
          "$ref": "RestoreBackupContext",
          "description": "Parameters required to perform the restore backup operation."
        }
      },
      "type": "object"
    },
    "InstancesRotateServerCaRequest": {
      "description": "Rotate Server CA request.",
      "id": "InstancesRotateServerCaRequest",
      "properties": {
        "rotateServerCaContext": {
          "$ref": "RotateServerCaContext",
          "description": "Contains details about the rotate server CA operation."
        }
      },
      "type": "object"
    },
    "InstancesTruncateLogRequest": {
      "description": "Instance truncate log request.",
      "id": "InstancesTruncateLogRequest",
      "properties": {
        "truncateLogContext": {
          "$ref": "TruncateLogContext",
          "description": "Contains details about the truncate log operation."
        }
      },
      "type": "object"
    },
    "IpConfiguration": {
      "description": "IP Management configuration.",
      "id": "IpConfiguration",
      "properties": {
        "authorizedNetworks": {
          "description": "The list of external networks that are allowed to connect to the instance using the IP. In CIDR notation, also known as 'slash' notation (e.g. 192.168.100.0/24).",
          "items": {
            "$ref": "AclEntry"
          },
          "type": "array"
        },
        "ipv4Enabled": {
          "description": "Whether the instance should be assigned an IP address or not.",
          "type": "boolean"
        },
        "privateNetwork": {
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, /projects/myProject/global/networks/default. This setting can be updated, but it cannot be removed after it is set.",
          "type": "string"
        },
        "requireSsl": {
          "description": "Whether SSL connections over IP should be enforced or not.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IpMapping": {
      "description": "Database instance IP Mapping.",
      "id": "IpMapping",
      "properties": {
        "ipAddress": {
          "description": "The IP address assigned.",
          "type": "string"
        },
        "timeToRetire": {
          "description": "The due time for this IP to be retired in RFC 3339 format, for example 2012-11-15T16:19:00.094Z. This field is only available when the IP is scheduled to be retired.",
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "description": "The type of this IP address. A PRIMARY address is an address that can accept incoming connections. An OUTGOING address is the source address of connections originating from the instance, if supported.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationPreference": {
      "description": "Preferred location. This specifies where a Cloud SQL instance should preferably be located, either in a specific Compute Engine zone, or co-located with an App Engine application. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.",
      "id": "LocationPreference",
      "properties": {
        "followGaeApplication": {
          "description": "The AppEngine application to follow, it must be in the same region as the Cloud SQL instance.",
          "type": "string"
        },
        "kind": {
          "default": "sql#locationPreference",
          "description": "This is always sql#locationPreference.",
          "type": "string"
        },
        "zone": {
          "description": "The preferred Compute Engine zone (e.g. us-central1-a, us-central1-b, etc.).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MaintenanceWindow": {
      "description": "Maintenance window. This specifies when a v2 Cloud SQL instance should preferably be restarted for system maintenance purposes.",
      "id": "MaintenanceWindow",
      "properties": {
        "day": {
          "description": "day of week (1-7), starting on Monday.",
          "format": "int32",
          "type": "integer"
        },
        "hour": {
          "description": "hour of day - 0 to 23.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "default": "sql#maintenanceWindow",
          "description": "This is always sql#maintenanceWindow.",
          "type": "string"
        },
        "updateTrack": {
          "description": "Maintenance timing setting: canary (Earlier) or stable (Later).\n Learn more.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MySqlReplicaConfiguration": {
      "description": "Read-replica configuration specific to MySQL databases.",
      "id": "MySqlReplicaConfiguration",
      "properties": {
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "PEM representation of the slave's x509 certificate.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the slave's private key. The corresponsing public key is encoded in the client's certificate.",
          "type": "string"
        },
        "connectRetryInterval": {
          "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds.",
          "format": "int32",
          "type": "integer"
        },
        "dumpFilePath": {
          "description": "Path to a SQL dump file in Google Cloud Storage from which the slave instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps should have the binlog co-ordinates from which replication should begin. This can be accomplished by setting --master-data to 1 when using mysqldump.",
          "type": "string"
        },
        "kind": {
          "default": "sql#mysqlReplicaConfiguration",
          "description": "This is always sql#mysqlReplicaConfiguration.",
          "type": "string"
        },
        "masterHeartbeatPeriod": {
          "description": "Interval in milliseconds between replication heartbeats.",
          "format": "int64",
          "type": "string"
        },
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "sslCipher": {
          "description": "A list of permissible ciphers to use for SSL encryption.",
          "type": "string"
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "verifyServerCertificate": {
          "description": "Whether or not to check the master's Common Name value in the certificate that it sends during the SSL handshake.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "OnPremisesConfiguration": {
      "description": "On-premises instance configuration.",
      "id": "OnPremisesConfiguration",
      "properties": {
        "hostPort": {
          "description": "The host and port of the on-premises instance in host:port format",
          "type": "string"
        },
        "kind": {
          "default": "sql#onPremisesConfiguration",
          "description": "This is always sql#onPremisesConfiguration.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Operation": {
      "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource.",
      "id": "Operation",
      "properties": {
        "endTime": {
          "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "OperationErrors",
          "description": "If errors occurred during processing of this operation, this field will be populated."
        },
        "exportContext": {
          "$ref": "ExportContext",
          "description": "The context for export operation, if applicable."
        },
        "importContext": {
          "$ref": "ImportContext",
          "description": "The context for import operation, if applicable."
        },
        "insertTime": {
          "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "format": "date-time",
          "type": "string"
        },
        "kind": {
          "default": "sql#operation",
          "description": "This is always sql#operation.",
          "type": "string"
        },
        "name": {
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.",
          "type": "string"
        },
        "operationType": {
          "description": "The type of the operation. Valid values are CREATE, DELETE, UPDATE, RESTART, IMPORT, EXPORT, BACKUP_VOLUME, RESTORE_VOLUME, CREATE_USER, DELETE_USER, CREATE_DATABASE, DELETE_DATABASE .",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "startTime": {
          "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of an operation. Valid values are PENDING, RUNNING, DONE, UNKNOWN.",
          "type": "string"
        },
        "targetId": {
          "description": "Name of the database instance related to this operation.",
          "type": "string"
        },
        "targetLink": {
          "type": "string"
        },
        "targetProject": {
          "description": "The project ID of the target instance related to this operation.",
          "type": "string"
        },
        "user": {
          "description": "The email address of the user who initiated this operation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationError": {
      "description": "Database instance operation error.",
      "id": "OperationError",
      "properties": {
        "code": {
          "description": "Identifies the specific error that occurred.",
          "type": "string"
        },
        "kind": {
          "default": "sql#operationError",
          "description": "This is always sql#operationError.",
          "type": "string"
        },
        "message": {
          "description": "Additional information about the error encountered.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationErrors": {
      "description": "Database instance operation errors list wrapper.",
      "id": "OperationErrors",
      "properties": {
        "errors": {
          "description": "The list of errors encountered while processing this operation.",
          "items": {
            "$ref": "OperationError"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#operationErrors",
          "description": "This is always sql#operationErrors.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationsListResponse": {
      "description": "Database instance list operations response.",
      "id": "OperationsListResponse",
      "properties": {
        "items": {
          "description": "List of operation resources.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#operationsList",
          "description": "This is always sql#operationsList.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReplicaConfiguration": {
      "description": "Read-replica configuration for connecting to the master.",
      "id": "ReplicaConfiguration",
      "properties": {
        "failoverTarget": {
          "description": "Specifies if the replica is the failover target. If the field is set to true the replica will be designated as a failover replica. In case the master instance fails, the replica instance will be promoted as the new master instance.\nOnly one replica can be specified as failover target, and the replica has to be in different zone with the master instance.",
          "type": "boolean"
        },
        "kind": {
          "default": "sql#replicaConfiguration",
          "description": "This is always sql#replicaConfiguration.",
          "type": "string"
        },
        "mysqlReplicaConfiguration": {
          "$ref": "MySqlReplicaConfiguration",
          "description": "MySQL specific configuration when replicating from a MySQL on-premises master. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named master.info in the data directory."
        }
      },
      "type": "object"
    },
    "RestoreBackupContext": {
      "description": "Database instance restore from backup context.",
      "id": "RestoreBackupContext",
      "properties": {
        "backupRunId": {
          "annotations": {
            "required": [
              "sql.instances.restoreBackup"
            ]
          },
          "description": "The ID of the backup run to restore from.",
          "format": "int64",
          "type": "string"
        },
        "instanceId": {
          "description": "The ID of the instance that the backup was taken from.",
          "type": "string"
        },
        "kind": {
          "default": "sql#restoreBackupContext",
          "description": "This is always sql#restoreBackupContext.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RotateServerCaContext": {
      "description": "Instance rotate server CA context.",
      "id": "RotateServerCaContext",
      "properties": {
        "kind": {
          "default": "sql#rotateServerCaContext",
          "description": "This is always sql#rotateServerCaContext.",
          "type": "string"
        },
        "nextVersion": {
          "description": "The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Settings": {
      "description": "Database instance settings.",
      "id": "Settings",
      "properties": {
        "activationPolicy": {
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values:\nALWAYS: The instance is on, and remains so even in the absence of connection requests.\nNEVER: The instance is off; it is not activated, even if a connection request arrives.\nON_DEMAND: First Generation instances only. The instance responds to incoming requests, and turns itself off when not in use. Instances with PER_USE pricing turn off after 15 minutes of inactivity. Instances with PER_PACKAGE pricing turn off after 12 hours of inactivity.",
          "type": "string"
        },
        "authorizedGaeApplications": {
          "description": "The App Engine app IDs that can access this instance. First Generation instances only.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "availabilityType": {
          "description": "Availability type (PostgreSQL instances only). Potential values:\nZONAL: The instance serves data from only one zone. Outages in that zone affect data accessibility.\nREGIONAL: The instance can serve data from more than one zone in a region (it is highly available).\nFor more information, see Overview of the High Availability Configuration.",
          "type": "string"
        },
        "backupConfiguration": {
          "$ref": "BackupConfiguration",
          "description": "The daily backup configuration for the instance."
        },
        "crashSafeReplicationEnabled": {
          "description": "Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property is only applicable to First Generation instances.",
          "type": "boolean"
        },
        "dataDiskSizeGb": {
          "description": "The size of data disk, in GB. The data disk size minimum is 10GB. Not used for First Generation instances.",
          "format": "int64",
          "type": "string"
        },
        "dataDiskType": {
          "description": "The type of data disk: PD_SSD (default) or PD_HDD. Not used for First Generation instances.",
          "type": "string"
        },
        "databaseFlags": {
          "description": "The database flags passed to the instance at startup.",
          "items": {
            "$ref": "DatabaseFlags"
          },
          "type": "array"
        },
        "databaseReplicationEnabled": {
          "description": "Configuration specific to read replica instances. Indicates whether replication is enabled or not.",
          "type": "boolean"
        },
        "ipConfiguration": {
          "$ref": "IpConfiguration",
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances."
        },
        "kind": {
          "default": "sql#settings",
          "description": "This is always sql#settings.",
          "type": "string"
        },
        "locationPreference": {
          "$ref": "LocationPreference",
          "description": "The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location is only applicable to First Generation instances."
        },
        "maintenanceWindow": {
          "$ref": "MaintenanceWindow",
          "description": "The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes. Not used for First Generation instances."
        },
        "pricingPlan": {
          "description": "The pricing plan for this instance. This can be either PER_USE or PACKAGE. Only PER_USE is supported for Second Generation instances.",
          "type": "string"
        },
        "replicationType": {
          "description": "The type of replication this instance uses. This can be either ASYNCHRONOUS or SYNCHRONOUS. This property is only applicable to First Generation instances.",
          "type": "string"
        },
        "settingsVersion": {
          "annotations": {
            "required": [
              "sql.instances.update"
            ]
          },
          "description": "The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.",
          "format": "int64",
          "type": "string"
        },
        "storageAutoResize": {
          "description": "Configuration to increase storage size automatically. The default value is true. Not used for First Generation instances.",
          "type": "boolean"
        },
        "storageAutoResizeLimit": {
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit. Not used for First Generation instances.",
          "format": "int64",
          "type": "string"
        },
        "tier": {
          "annotations": {
            "required": [
              "sql.instances.insert",
              "sql.instances.update"
            ]
          },
          "description": "The tier (or machine type) for this instance, for example db-n1-standard-1 (MySQL instances) or db-custom-1-3840 (PostgreSQL instances). For MySQL instances, this property determines whether the instance is First or Second Generation. For more information, see Instance Settings.",
          "type": "string"
        },
        "userLabels": {
          "additionalProperties": {
            "description": "An individual label entry, composed of a key and a value.",
            "type": "string"
          },
          "description": "User-provided labels, represented as a dictionary where each label is a single key value pair.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "SslCert": {
      "description": "SslCerts Resource",
      "id": "SslCert",
      "properties": {
        "cert": {
          "description": "PEM representation.",
          "type": "string"
        },
        "certSerialNumber": {
          "description": "Serial number, as extracted from the certificate.",
          "type": "string"
        },
        "commonName": {
          "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+.",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the certificate was created in RFC 3339 format, for example 2012-11-15T16:19:00.094Z",
          "format": "date-time",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the certificate expires in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "format": "date-time",
          "type": "string"
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "kind": {
          "default": "sql#sslCert",
          "description": "This is always sql#sslCert.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "sha1Fingerprint": {
          "description": "Sha1 Fingerprint.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertDetail": {
      "description": "SslCertDetail.",
      "id": "SslCertDetail",
      "properties": {
        "certInfo": {
          "$ref": "SslCert",
          "description": "The public information about the cert."
        },
        "certPrivateKey": {
          "description": "The private key for the client cert, in pem format. Keep private in order to protect your security.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertsCreateEphemeralRequest": {
      "description": "SslCerts create ephemeral certificate request.",
      "id": "SslCertsCreateEphemeralRequest",
      "properties": {
        "public_key": {
          "description": "PEM encoded public key to include in the signed certificate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertsInsertRequest": {
      "description": "SslCerts insert request.",
      "id": "SslCertsInsertRequest",
      "properties": {
        "commonName": {
          "description": "User supplied name. Must be a distinct name from the other certificates for this instance.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertsInsertResponse": {
      "description": "SslCert insert response.",
      "id": "SslCertsInsertResponse",
      "properties": {
        "clientCert": {
          "$ref": "SslCertDetail",
          "description": "The new client certificate and private key. For First Generation instances, the new certificate does not take effect until the instance is restarted."
        },
        "kind": {
          "default": "sql#sslCertsInsert",
          "description": "This is always sql#sslCertsInsert.",
          "type": "string"
        },
        "operation": {
          "$ref": "Operation",
          "description": "The operation to track the ssl certs insert request."
        },
        "serverCaCert": {
          "$ref": "SslCert",
          "description": "The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource."
        }
      },
      "type": "object"
    },
    "SslCertsListResponse": {
      "description": "SslCerts list response.",
      "id": "SslCertsListResponse",
      "properties": {
        "items": {
          "description": "List of client certificates for the instance.",
          "items": {
            "$ref": "SslCert"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#sslCertsList",
          "description": "This is always sql#sslCertsList.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Tier": {
      "description": "A Google Cloud SQL service tier resource.",
      "id": "Tier",
      "properties": {
        "DiskQuota": {
          "description": "The maximum disk size of this tier in bytes.",
          "format": "int64",
          "type": "string"
        },
        "RAM": {
          "description": "The maximum RAM usage of this tier in bytes.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "default": "sql#tier",
          "description": "This is always sql#tier.",
          "type": "string"
        },
        "region": {
          "description": "The applicable regions for this tier.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tier": {
          "description": "An identifier for the machine type, for example, db-n1-standard-1. For related information, see Pricing.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TiersListResponse": {
      "description": "Tiers list response.",
      "id": "TiersListResponse",
      "properties": {
        "items": {
          "description": "List of tiers.",
          "items": {
            "$ref": "Tier"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#tiersList",
          "description": "This is always sql#tiersList.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TruncateLogContext": {
      "description": "Database Instance truncate log context.",
      "id": "TruncateLogContext",
      "properties": {
        "kind": {
          "default": "sql#truncateLogContext",
          "description": "This is always sql#truncateLogContext.",
          "type": "string"
        },
        "logType": {
          "description": "The type of log to truncate. Valid values are MYSQL_GENERAL_TABLE and MYSQL_SLOW_TABLE.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "User": {
      "description": "A Cloud SQL user resource.",
      "id": "User",
      "properties": {
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API.",
          "type": "string"
        },
        "host": {
          "description": "The host name from which the user can connect. For insert operations, host defaults to an empty string. For update operations, host is specified as part of the request URL. The host name cannot be updated after insertion.",
          "type": "string"
        },
        "instance": {
          "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for update since it is already specified on the URL.",
          "type": "string"
        },
        "kind": {
          "default": "sql#user",
          "description": "This is always sql#user.",
          "type": "string"
        },
        "name": {
          "description": "The name of the user in the Cloud SQL instance. Can be omitted for update since it is already specified in the URL.",
          "type": "string"
        },
        "password": {
          "description": "The password for the user.",
          "type": "string"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for update since it is already specified on the URL.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UsersListResponse": {
      "description": "User list response.",
      "id": "UsersListResponse",
      "properties": {
        "items": {
          "description": "List of user resources in the instance.",
          "items": {
            "$ref": "User"
          },
          "type": "array"
        },
        "kind": {
          "default": "sql#usersList",
          "description": "This is always sql#usersList.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "servicePath": "sql/v1beta4/",
  "title": "Cloud SQL Admin API",
  "version": "v1beta4"
}