{
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "resources": {
    "operations": {
      "methods": {
        "cancel": {
          "path": "v1beta1/{+name}:cancel",
          "id": "dataproc.operations.cancel",
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use operations.get or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation.",
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be cancelled.",
              "required": true,
              "type": "string",
              "pattern": "^operations/.+$",
              "location": "path"
            }
          },
          "flatPath": "v1beta1/operations/{operationsId}:cancel"
        },
        "delete": {
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "location": "path",
              "description": "The name of the operation resource to be deleted.",
              "required": true,
              "type": "string",
              "pattern": "^operations/.+$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/operations/{operationsId}",
          "path": "v1beta1/{+name}",
          "id": "dataproc.operations.delete"
        },
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string",
              "pattern": "^operations/.+$",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/operations/{operationsId}",
          "id": "dataproc.operations.get",
          "path": "v1beta1/{+name}",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
        },
        "list": {
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "filter": {
              "description": "The standard list filter.",
              "type": "string",
              "location": "query"
            },
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^operations$",
              "location": "path",
              "description": "The name of the operation's parent resource."
            },
            "pageToken": {
              "location": "query",
              "description": "The standard list page token.",
              "type": "string"
            },
            "pageSize": {
              "type": "integer",
              "location": "query",
              "description": "The standard list page size.",
              "format": "int32"
            }
          },
          "flatPath": "v1beta1/operations",
          "id": "dataproc.operations.list",
          "path": "v1beta1/{+name}",
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding below allows API services to override the binding to use different resource name schemes, such as users/*/operations."
        }
      }
    },
    "projects": {
      "resources": {
        "clusters": {
          "methods": {
            "diagnose": {
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "projectId",
                "clusterName"
              ],
              "httpMethod": "POST",
              "parameters": {
                "clusterName": {
                  "location": "path",
                  "description": "Required The cluster name.",
                  "required": true,
                  "type": "string"
                },
                "projectId": {
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectId}/clusters/{clusterName}:diagnose",
              "path": "v1beta1/projects/{projectId}/clusters/{clusterName}:diagnose",
              "id": "dataproc.projects.clusters.diagnose",
              "request": {
                "$ref": "DiagnoseClusterRequest"
              },
              "description": "Gets cluster diagnostic information. After the operation completes, the Operation.response field contains DiagnoseClusterOutputLocation."
            },
            "delete": {
              "description": "Deletes a cluster in a project.",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "projectId",
                "clusterName"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "clusterName": {
                  "description": "Required The cluster name.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "projectId": {
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectId}/clusters/{clusterName}",
              "path": "v1beta1/projects/{projectId}/clusters/{clusterName}",
              "id": "dataproc.projects.clusters.delete"
            },
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId"
              ],
              "response": {
                "$ref": "ListClustersResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The standard List page token.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The standard List page size.",
                  "format": "int32",
                  "type": "integer"
                },
                "projectId": {
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional A filter constraining which clusters to list. Valid filters contain label terms such as: labels.key1 = val1 AND (-labels.k2 = val2 OR labels.k3 = val3)"
                }
              },
              "flatPath": "v1beta1/projects/{projectId}/clusters",
              "id": "dataproc.projects.clusters.list",
              "path": "v1beta1/projects/{projectId}/clusters",
              "description": "Lists all clusters in a project."
            },
            "create": {
              "request": {
                "$ref": "Cluster"
              },
              "description": "Creates a cluster in a project.",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "projectId": {
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectId}/clusters",
              "path": "v1beta1/projects/{projectId}/clusters",
              "id": "dataproc.projects.clusters.create"
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId",
                "clusterName"
              ],
              "response": {
                "$ref": "Cluster"
              },
              "parameters": {
                "clusterName": {
                  "location": "path",
                  "description": "Required The cluster name.",
                  "required": true,
                  "type": "string"
                },
                "projectId": {
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectId}/clusters/{clusterName}",
              "id": "dataproc.projects.clusters.get",
              "path": "v1beta1/projects/{projectId}/clusters/{clusterName}",
              "description": "Gets the resource representation for a cluster in a project."
            },
            "patch": {
              "flatPath": "v1beta1/projects/{projectId}/clusters/{clusterName}",
              "path": "v1beta1/projects/{projectId}/clusters/{clusterName}",
              "id": "dataproc.projects.clusters.patch",
              "description": "Updates a cluster in a project.",
              "request": {
                "$ref": "Cluster"
              },
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "projectId",
                "clusterName"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "clusterName": {
                  "location": "path",
                  "description": "Required The cluster name.",
                  "required": true,
                  "type": "string"
                },
                "projectId": {
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project the cluster belongs to.",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "description": "Required Specifies the path, relative to \u003ccode\u003eCluster\u003c/code\u003e, of the field to update. For example, to change the number of workers in a cluster to 5, the \u003ccode\u003eupdate_mask\u003c/code\u003e parameter would be specified as \u003ccode\u003econfiguration.worker_configuration.num_instances\u003c/code\u003e, and the PATCH request body would specify the new value, as follows:\n{\n  \"configuration\":{\n    \"workerConfiguration\":{\n      \"numInstances\":\"5\"\n    }\n  }\n}\nSimilarly, to change the number of preemptible workers in a cluster to 5, the \u003ccode\u003eupdate_mask\u003c/code\u003e parameter would be \u003ccode\u003econfig.secondary_worker_config.num_instances\u003c/code\u003e, and the PATCH request body would be set as follows:\n{\n  \"config\":{\n    \"secondaryWorkerConfig\":{\n      \"numInstances\":\"5\"\n    }\n  }\n}\n\u003cstrong\u003eNote:\u003c/strong\u003e Currently, \u003ccode\u003econfig.worker_config.num_instances\u003c/code\u003e and \u003ccode\u003econfig.secondary_worker_config.num_instances\u003c/code\u003e are the only fields that can be updated.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                }
              }
            }
          }
        },
        "jobs": {
          "methods": {
            "submit": {
              "path": "v1beta1/projects/{projectId}/jobs:submit",
              "id": "dataproc.projects.jobs.submit",
              "request": {
                "$ref": "SubmitJobRequest"
              },
              "description": "Submits a job to a cluster.",
              "response": {
                "$ref": "Job"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "POST",
              "parameters": {
                "projectId": {
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectId}/jobs:submit"
            },
            "delete": {
              "description": "Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "projectId": {
                  "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "jobId": {
                  "description": "Required The job ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectId}/jobs/{jobId}",
              "path": "v1beta1/projects/{projectId}/jobs/{jobId}",
              "id": "dataproc.projects.jobs.delete"
            },
            "list": {
              "response": {
                "$ref": "ListJobsResponse"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "filter": {
                  "description": "Optional A filter constraining which jobs to list. Valid filters contain job state and label terms such as: labels.key1 = val1 AND (labels.k2 = val2 OR labels.k3 = val3)",
                  "type": "string",
                  "location": "query"
                },
                "jobStateMatcher": {
                  "description": "Optional Specifies enumerated categories of jobs to list.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "ALL",
                    "ACTIVE",
                    "NON_ACTIVE"
                  ]
                },
                "pageToken": {
                  "description": "Optional The page token, returned by a previous call, to request the next page of results.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Optional The number of results to return in each response.",
                  "format": "int32",
                  "type": "integer"
                },
                "clusterName": {
                  "description": "Optional If set, the returned jobs list includes only jobs that were submitted to the named cluster.",
                  "type": "string",
                  "location": "query"
                },
                "projectId": {
                  "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectId}/jobs",
              "path": "v1beta1/projects/{projectId}/jobs",
              "id": "dataproc.projects.jobs.list",
              "description": "Lists jobs in a project."
            },
            "cancel": {
              "response": {
                "$ref": "Job"
              },
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "projectId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project that the job belongs to."
                },
                "jobId": {
                  "description": "Required The job ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v1beta1/projects/{projectId}/jobs/{jobId}:cancel",
              "path": "v1beta1/projects/{projectId}/jobs/{jobId}:cancel",
              "id": "dataproc.projects.jobs.cancel",
              "description": "Starts a job cancellation request. To access the job resource after cancellation, call jobs.list or jobs.get.",
              "request": {
                "$ref": "CancelJobRequest"
              }
            },
            "get": {
              "description": "Gets the resource representation for a job in a project.",
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "response": {
                "$ref": "Job"
              },
              "httpMethod": "GET",
              "parameters": {
                "projectId": {
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                  "required": true,
                  "type": "string"
                },
                "jobId": {
                  "location": "path",
                  "description": "Required The job ID.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectId}/jobs/{jobId}",
              "path": "v1beta1/projects/{projectId}/jobs/{jobId}",
              "id": "dataproc.projects.jobs.get"
            },
            "patch": {
              "flatPath": "v1beta1/projects/{projectId}/jobs/{jobId}",
              "id": "dataproc.projects.jobs.patch",
              "path": "v1beta1/projects/{projectId}/jobs/{jobId}",
              "request": {
                "$ref": "Job"
              },
              "description": "Updates a job in a project.",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "projectId",
                "jobId"
              ],
              "response": {
                "$ref": "Job"
              },
              "parameters": {
                "projectId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required The ID of the Google Cloud Platform project that the job belongs to."
                },
                "jobId": {
                  "description": "Required The job ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "updateMask": {
                  "location": "query",
                  "description": "Required Specifies the path, relative to \u003ccode\u003eJob\u003c/code\u003e, of the field to update. For example, to update the labels of a Job the \u003ccode\u003eupdate_mask\u003c/code\u003e parameter would be specified as \u003ccode\u003elabels\u003c/code\u003e, and the PATCH request body would specify the new value. \u003cstrong\u003eNote:\u003c/strong\u003e Currently, \u003ccode\u003elabels\u003c/code\u003e is the only field that can be updated.",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    }
  },
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "pp": {
      "location": "query",
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true"
    },
    "bearer_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth bearer token."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    }
  },
  "schemas": {
    "SparkJob": {
      "id": "SparkJob",
      "description": "A Cloud Dataproc job for running Spark applications on YARN.",
      "type": "object",
      "properties": {
        "fileUris": {
          "description": "Optional HCFS URIs of files to be copied to the working directory of Spark drivers and distributed tasks. Useful for naively parallel tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainClass": {
          "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.",
          "type": "string"
        },
        "archiveUris": {
          "description": "Optional HCFS URIs of archives to be extracted in the working directory of Spark drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainJarFileUri": {
          "description": "The Hadoop Compatible Filesystem (HCFS) URI of the jar file that contains the main class.",
          "type": "string"
        },
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loggingConfiguration": {
          "description": "Optional The runtime log configuration for job execution.",
          "$ref": "LoggingConfiguration"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
          "type": "object"
        },
        "args": {
          "description": "Optional The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Job": {
      "description": "A Cloud Dataproc job resource.",
      "type": "object",
      "properties": {
        "interactive": {
          "description": "Optional If set to true, the driver's stdin will be kept open and driver_input_uri will be set to provide a path at which additional input can be sent to the driver.",
          "type": "boolean"
        },
        "driverInputResourceUri": {
          "description": "Output-only A URI pointing to the location of the stdin of the job's driver program, only set if the job is interactive.",
          "type": "string"
        },
        "hadoopJob": {
          "description": "Job is a Hadoop job.",
          "$ref": "HadoopJob"
        },
        "status": {
          "$ref": "JobStatus",
          "description": "Output-only The job status. Additional application-specific status information may be contained in the \u003ccode\u003etype_job\u003c/code\u003e and \u003ccode\u003eyarn_applications\u003c/code\u003e fields."
        },
        "placement": {
          "description": "Required Job information, including how, when, and where to run the job.",
          "$ref": "JobPlacement"
        },
        "driverControlFilesUri": {
          "description": "Output-only If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri.",
          "type": "string"
        },
        "submittedBy": {
          "description": "Output-only The email address of the user submitting the job. For jobs submitted on the cluster, the address is \u003ccode\u003eusername@hostname\u003c/code\u003e.",
          "type": "string"
        },
        "scheduling": {
          "$ref": "JobScheduling",
          "description": "Optional Job scheduling configuration."
        },
        "pigJob": {
          "$ref": "PigJob",
          "description": "Job is a Pig job."
        },
        "hiveJob": {
          "$ref": "HiveJob",
          "description": "Job is a Hive job."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\p{Ll}\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\p{Ll}\\p{Lo}\\p{N}_-{0,63}No more than 64 labels can be associated with a given job.",
          "type": "object"
        },
        "driverOutputResourceUri": {
          "description": "Output-only A URI pointing to the location of the stdout of the job's driver program.",
          "type": "string"
        },
        "statusHistory": {
          "description": "Output-only The previous job status.",
          "type": "array",
          "items": {
            "$ref": "JobStatus"
          }
        },
        "sparkJob": {
          "description": "Job is a Spark job.",
          "$ref": "SparkJob"
        },
        "sparkSqlJob": {
          "$ref": "SparkSqlJob",
          "description": "Job is a SparkSql job."
        },
        "yarnApplications": {
          "description": "Output-only The collection of YARN applications spun up by this job.",
          "type": "array",
          "items": {
            "$ref": "YarnApplication"
          }
        },
        "pysparkJob": {
          "$ref": "PySparkJob",
          "description": "Job is a Pyspark job."
        },
        "reference": {
          "$ref": "JobReference",
          "description": "Optional The fully qualified reference to the job, which can be used to obtain the equivalent REST path of the job resource. If this property is not specified when a job is created, the server generates a \u003ccode\u003ejob_id\u003c/code\u003e."
        }
      },
      "id": "Job"
    },
    "JobStatus": {
      "description": "Cloud Dataproc job status.",
      "type": "object",
      "properties": {
        "stateStartTime": {
          "description": "Output-only The time when this state was entered.",
          "format": "google-datetime",
          "type": "string"
        },
        "substate": {
          "type": "string",
          "enumDescriptions": [
            "",
            "The Job is submitted to the agent.Applies to RUNNING state.",
            "The Job has been received and is awaiting execution (it may be waiting for a condition to be met). See the \"details\" field for the reason for the delay.Applies to RUNNING state.",
            "The agent-reported status is out of date, which may be caused by a loss of communication between the agent and Cloud Dataproc. If the agent does not send a timely update, the job will fail.Applies to RUNNING state."
          ],
          "enum": [
            "UNSPECIFIED",
            "SUBMITTED",
            "QUEUED",
            "STALE_STATUS"
          ],
          "description": "Output-only Additional state information, which includes status reported by the agent."
        },
        "state": {
          "enumDescriptions": [
            "The job state is unknown.",
            "The job is pending; it has been submitted, but is not yet running.",
            "Job has been received by the service and completed initial setup; it will shortly be submitted to the cluster.",
            "The job is running on the cluster.",
            "A CancelJob request has been received, but is pending.",
            "Transient in-flight resources have been canceled, and the request to cancel the running job has been issued to the cluster.",
            "The job cancelation was successful.",
            "The job has completed successfully.",
            "The job has completed, but encountered an error.",
            "Job attempt has failed. The detail field contains failure details for this attempt.Applies to restartable jobs only."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SETUP_DONE",
            "RUNNING",
            "CANCEL_PENDING",
            "CANCEL_STARTED",
            "CANCELLED",
            "DONE",
            "ERROR",
            "ATTEMPT_FAILURE"
          ],
          "description": "Required A state message specifying the overall job state.",
          "type": "string"
        },
        "details": {
          "type": "string",
          "description": "Optional Job state details, such as an error description if the state is \u003ccode\u003eERROR\u003c/code\u003e."
        }
      },
      "id": "JobStatus"
    },
    "DiskConfiguration": {
      "description": "Specifies the configuration of disk options for a group of VM instances.",
      "type": "object",
      "properties": {
        "bootDiskSizeGb": {
          "description": "Optional Size in GB of the boot disk (default is 500GB).",
          "format": "int32",
          "type": "integer"
        },
        "numLocalSsds": {
          "description": "Optional Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic configuration and installed binaries.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "DiskConfiguration"
    },
    "ClusterOperationStatus": {
      "properties": {
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unused.",
            "The operation has been created.",
            "The operation is running.",
            "The operation is done; either cancelled or completed."
          ],
          "enum": [
            "UNKNOWN",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "description": "Output-only. A message containing the operation state."
        },
        "details": {
          "description": "Output-only.A message containing any operation metadata details.",
          "type": "string"
        },
        "innerState": {
          "type": "string",
          "description": "Output-only. A message containing the detailed operation state."
        },
        "stateStartTime": {
          "description": "Output-only. The time this state was entered.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "ClusterOperationStatus",
      "description": "The status of the operation.",
      "type": "object"
    },
    "HadoopJob": {
      "description": "A Cloud Dataproc job for running Hadoop MapReduce jobs on YARN.",
      "type": "object",
      "properties": {
        "mainJarFileUri": {
          "description": "The Hadoop Compatible Filesystem (HCFS) URI of the jar file containing the main class. Examples:  'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar'  'hdfs:/tmp/test-samples/custom-wordcount.jar'  'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'",
          "type": "string"
        },
        "jarFileUris": {
          "description": "Optional Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loggingConfiguration": {
          "$ref": "LoggingConfiguration",
          "description": "Optional The runtime log configuration for job execution."
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.",
          "type": "object"
        },
        "args": {
          "description": "Optional The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileUris": {
          "description": "Optional HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainClass": {
          "description": "The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.",
          "type": "string"
        },
        "archiveUris": {
          "description": "Optional HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "HadoopJob"
    },
    "QueryList": {
      "type": "object",
      "properties": {
        "queries": {
          "description": "Required The queries to execute. You do not need to terminate a query with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of an Cloud Dataproc API snippet that uses a QueryList to specify a HiveJob:\n\"hiveJob\": {\n  \"queryList\": {\n    \"queries\": [\n      \"query1\",\n      \"query2\",\n      \"query3;query4\",\n    ]\n  }\n}\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "QueryList",
      "description": "A list of queries to run on a cluster."
    },
    "YarnApplication": {
      "description": "A YARN application created by a job. Application information is a subset of \u003ccode\u003eorg.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto\u003c/code\u003e.",
      "type": "object",
      "properties": {
        "trackingUrl": {
          "description": "Optional The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.",
          "type": "string"
        },
        "progress": {
          "description": "Required The numerical progress of the application, from 1 to 100.",
          "format": "float",
          "type": "number"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "NEW",
            "NEW_SAVING",
            "SUBMITTED",
            "ACCEPTED",
            "RUNNING",
            "FINISHED",
            "FAILED",
            "KILLED"
          ],
          "description": "Required The application state.",
          "type": "string",
          "enumDescriptions": [
            "Status is unspecified.",
            "Status is NEW.",
            "Status is NEW_SAVING.",
            "Status is SUBMITTED.",
            "Status is ACCEPTED.",
            "Status is RUNNING.",
            "Status is FINISHED.",
            "Status is FAILED.",
            "Status is KILLED."
          ]
        },
        "name": {
          "description": "Required The application name.",
          "type": "string"
        }
      },
      "id": "YarnApplication"
    },
    "DiagnoseClusterRequest": {
      "id": "DiagnoseClusterRequest",
      "description": "A request to collect cluster diagnostic information.",
      "type": "object",
      "properties": {}
    },
    "ClusterOperationMetadata": {
      "description": "Metadata describing the operation.",
      "type": "object",
      "properties": {
        "operationType": {
          "description": "Output-only. The operation type.",
          "type": "string"
        },
        "description": {
          "description": "Output-only. Short description of operation.",
          "type": "string"
        },
        "warnings": {
          "description": "Output-only. Errors encountered during operation execution.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output-only. Labels associated with the operation",
          "type": "object"
        },
        "status": {
          "$ref": "ClusterOperationStatus",
          "description": "Output-only. Current operation status."
        },
        "statusHistory": {
          "description": "Output-only. The previous operation status.",
          "type": "array",
          "items": {
            "$ref": "ClusterOperationStatus"
          }
        },
        "clusterUuid": {
          "description": "Output-only. Cluster UUID for the operation.",
          "type": "string"
        },
        "clusterName": {
          "description": "Output-only. Name of the cluster for the operation.",
          "type": "string"
        }
      },
      "id": "ClusterOperationMetadata"
    },
    "HiveJob": {
      "properties": {
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scriptVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional Mapping of query variable names to values (equivalent to the Hive command: SET name=\"value\";).",
          "type": "object"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.",
          "type": "object"
        },
        "continueOnFailure": {
          "description": "Optional Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.",
          "type": "boolean"
        },
        "queryList": {
          "description": "A list of queries.",
          "$ref": "QueryList"
        },
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains Hive queries.",
          "type": "string"
        }
      },
      "id": "HiveJob",
      "description": "A Cloud Dataproc job for running Hive queries on YARN.",
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\nservice Foo {\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n}\nThe JSON representation for Empty is empty JSON object {}.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "DiagnoseClusterResults": {
      "description": "The location of diagnostic output.",
      "type": "object",
      "properties": {
        "outputUri": {
          "description": "Output-only. The Google Cloud Storage URI of the diagnostic output. The output report is a plain text file with a summary of collected diagnostics.",
          "type": "string"
        }
      },
      "id": "DiagnoseClusterResults"
    },
    "SoftwareConfiguration": {
      "description": "Specifies the selection and configuration of software inside the cluster.",
      "type": "object",
      "properties": {
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional The properties to set on daemon configuration files.Property keys are specified in \"prefix:property\" format, such as \"core:fs.defaultFS\". The following are supported prefixes and their mappings:  core - core-site.xml  hdfs - hdfs-site.xml  mapred - mapred-site.xml  yarn - yarn-site.xml  hive - hive-site.xml  pig - pig.properties  spark - spark-defaults.conf",
          "type": "object"
        },
        "imageVersion": {
          "description": "Optional The version of software inside the cluster. It must match the regular expression [0-9]+\\.[0-9]+. If unspecified, it defaults to the latest version (see Cloud Dataproc Versioning).",
          "type": "string"
        }
      },
      "id": "SoftwareConfiguration"
    },
    "PySparkJob": {
      "description": "A Cloud Dataproc job for running PySpark applications on YARN.",
      "type": "object",
      "properties": {
        "pythonFileUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip."
        },
        "mainPythonFileUri": {
          "description": "Required The Hadoop Compatible Filesystem (HCFS) URI of the main Python file to use as the driver. Must be a .py file.",
          "type": "string"
        },
        "archiveUris": {
          "description": "Optional HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loggingConfiguration": {
          "$ref": "LoggingConfiguration",
          "description": "Optional The runtime log configuration for job execution."
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
          "type": "object"
        },
        "args": {
          "description": "Optional The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileUris": {
          "description": "Optional HCFS URIs of files to be copied to the working directory of Python drivers and distributed tasks. Useful for naively parallel tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "PySparkJob"
    },
    "ClusterMetrics": {
      "description": "Contains cluster daemon metrics, such as HDFS and YARN stats.",
      "type": "object",
      "properties": {
        "yarnMetrics": {
          "description": "The YARN metrics.",
          "type": "object",
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          }
        },
        "hdfsMetrics": {
          "description": "The HDFS metrics.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "id": "ClusterMetrics"
    },
    "ClusterConfiguration": {
      "id": "ClusterConfiguration",
      "description": "The cluster configuration.",
      "type": "object",
      "properties": {
        "secondaryWorkerConfiguration": {
          "description": "Optional The Google Compute Engine configuration settings for additional worker instances in a cluster.",
          "$ref": "InstanceGroupConfiguration"
        },
        "initializationActions": {
          "description": "Optional Commands to execute on each node after configuration is completed. By default, executables are run on master and all worker nodes. You can test a node's \u003ccode\u003erole\u003c/code\u003e metadata to run an executable on a master or worker node, as shown below:\nROLE=$(/usr/share/google/get_metadata_value attributes/role)\nif [[ \"${ROLE}\" == 'Master' ]]; then\n  ... master specific actions ...\nelse\n  ... worker specific actions ...\nfi\n",
          "type": "array",
          "items": {
            "$ref": "NodeInitializationAction"
          }
        },
        "workerConfiguration": {
          "$ref": "InstanceGroupConfiguration",
          "description": "Optional The Google Compute Engine configuration settings for worker instances in a cluster."
        },
        "gceClusterConfiguration": {
          "$ref": "GceClusterConfiguration",
          "description": "Required The shared Google Compute Engine configuration settings for all instances in a cluster."
        },
        "softwareConfiguration": {
          "$ref": "SoftwareConfiguration",
          "description": "Optional The configuration settings for software inside the cluster."
        },
        "configurationBucket": {
          "description": "Optional A Google Cloud Storage staging bucket used for sharing generated SSH keys and configuration. If you do not specify a staging bucket, Cloud Dataproc will determine an appropriate Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Google Compute Engine zone where your cluster is deployed, and then it will create and manage this project-level, per-location bucket for you.",
          "type": "string"
        },
        "masterConfiguration": {
          "$ref": "InstanceGroupConfiguration",
          "description": "Optional The Google Compute Engine configuration settings for the master instance in a cluster."
        }
      }
    },
    "LoggingConfiguration": {
      "properties": {
        "driverLogLevels": {
          "description": "The per-package log levels for the driver. This may include \"root\" package name to configure rootLogger. Examples:  'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'",
          "type": "object",
          "additionalProperties": {
            "enum": [
              "LEVEL_UNSPECIFIED",
              "ALL",
              "TRACE",
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR",
              "FATAL",
              "OFF"
            ],
            "type": "string"
          }
        }
      },
      "id": "LoggingConfiguration",
      "description": "The runtime logging configuration of the job.",
      "type": "object"
    },
    "InstanceGroupConfiguration": {
      "id": "InstanceGroupConfiguration",
      "description": "The configuration settings for Google Compute Engine resources in an instance group, such as a master or worker group.",
      "type": "object",
      "properties": {
        "numInstances": {
          "type": "integer",
          "description": "The number of VM instances in the instance group. For master instance groups, must be set to 1.",
          "format": "int32"
        },
        "diskConfiguration": {
          "$ref": "DiskConfiguration",
          "description": "Disk option configuration settings."
        },
        "imageUri": {
          "type": "string",
          "description": "Output-only The Google Compute Engine image resource used for cluster instances. Inferred from SoftwareConfiguration.image_version."
        },
        "machineTypeUri": {
          "description": "The Google Compute Engine machine type used for cluster instances. Example: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2.",
          "type": "string"
        },
        "isPreemptible": {
          "description": "Specifies that this instance group contains Preemptible Instances.",
          "type": "boolean"
        },
        "instanceNames": {
          "description": "The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group if not set by user (recommended practice is to let Dataproc derive the name).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managedGroupConfiguration": {
          "description": "Output-only The configuration for Google Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
          "$ref": "ManagedGroupConfiguration"
        },
        "accelerators": {
          "description": "Optional The Google Compute Engine accelerator configuration for these instances.",
          "type": "array",
          "items": {
            "$ref": "AcceleratorConfiguration"
          }
        }
      }
    },
    "GceClusterConfiguration": {
      "properties": {
        "zoneUri": {
          "type": "string",
          "description": "Required The zone where the Google Compute Engine cluster will be located. Example: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The Google Compute Engine metadata entries to add to all instances.",
          "type": "object"
        },
        "internalIpOnly": {
          "description": "If true, all instances in the cluser will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.",
          "type": "boolean"
        },
        "serviceAccountScopes": {
          "description": "The URIs of service account scopes to be included in Google Compute Engine instances. The following base set of scopes is always included: - https://www.googleapis.com/auth/cloud.useraccounts.readonly - https://www.googleapis.com/auth/devstorage.read_write - https://www.googleapis.com/auth/logging.write If no scopes are specfied, the following defaults are also provided: - https://www.googleapis.com/auth/bigquery - https://www.googleapis.com/auth/bigtable.admin.table - https://www.googleapis.com/auth/bigtable.data - https://www.googleapis.com/auth/devstorage.full_control",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "description": "The Google Compute Engine tags to add to all instances.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceAccount": {
          "description": "Optional The service account of the instances. Defaults to the default Google Compute Engine service account. Custom service accounts need permissions equivalent to the folloing IAM roles:\nroles/logging.logWriter\nroles/storage.objectAdmin(see https://cloud.google.com/compute/docs/access/service-accounts#custom_service_accounts for more information). Example: [account_id]@[project_id].iam.gserviceaccount.com",
          "type": "string"
        },
        "subnetworkUri": {
          "description": "The Google Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri. Example: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/sub0.",
          "type": "string"
        },
        "networkUri": {
          "description": "The Google Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see https://cloud.google.com/compute/docs/subnetworks for more information). Example: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default.",
          "type": "string"
        }
      },
      "id": "GceClusterConfiguration",
      "description": "Common configuration settings for resources of Google Compute Engine cluster instances, applicable to all instances in the cluster.",
      "type": "object"
    },
    "CancelOperationRequest": {
      "properties": {},
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object"
    },
    "DiagnoseClusterOutputLocation": {
      "description": "The location of diagnostic output.",
      "type": "object",
      "properties": {
        "outputUri": {
          "description": "Output-only The Google Cloud Storage URI of the diagnostic output. This is a plain text file with a summary of collected diagnostics.",
          "type": "string"
        }
      },
      "id": "DiagnoseClusterOutputLocation"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available."
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should have the format of operations/some/unique/name.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "OperationStatus": {
      "description": "The status of the operation.",
      "type": "object",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Unused.",
            "The operation has been created.",
            "The operation is running.",
            "The operation is done; either cancelled or completed."
          ],
          "enum": [
            "UNKNOWN",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "description": "A message containing the operation state.",
          "type": "string"
        },
        "details": {
          "description": "A message containing any operation metadata details.",
          "type": "string"
        },
        "innerState": {
          "description": "A message containing the detailed operation state.",
          "type": "string"
        },
        "stateStartTime": {
          "description": "The time this state was entered.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "OperationStatus"
    },
    "JobReference": {
      "description": "Encapsulates the full scoping used to reference a job.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
          "type": "string"
        },
        "jobId": {
          "description": "Required The job ID, which must be unique within the project. The job ID is generated by the server upon job submission or provided by the user as a means to perform retries without creating duplicate jobs. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.",
          "type": "string"
        }
      },
      "id": "JobReference"
    },
    "SubmitJobRequest": {
      "description": "A request to submit a job.",
      "type": "object",
      "properties": {
        "job": {
          "$ref": "Job",
          "description": "Required The job resource."
        }
      },
      "id": "SubmitJobRequest"
    },
    "Status": {
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There will be a common set of message types for APIs to use."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "Status",
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). The error model is designed to be:\nSimple to use and understand for most users\nFlexible enough to meet unexpected needsOverviewThe Status message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a developer-facing English message that helps developers understand and resolve the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package google.rpc that can be used for common error conditions.Language mappingThe Status message is the logical representation of the error model, but it is not necessarily the actual wire format. When the Status message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C.Other usesThe error model and the Status message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments.Example uses of this error model include:\nPartial errors. If a service needs to return partial errors to the client, it may embed the Status in the normal response to indicate the partial errors.\nWorkflow errors. A typical workflow has multiple steps. Each step may have a Status message for error reporting.\nBatch operations. If a client uses batch request and batch response, the Status message should be used directly inside batch response, one for each error sub-response.\nAsynchronous operations. If an API call embeds asynchronous operation results in its response, the status of those operations should be represented directly using the Status message.\nLogging. If some API errors are stored in logs, the message Status could be used directly after any stripping needed for security/privacy reasons.",
      "type": "object"
    },
    "JobScheduling": {
      "id": "JobScheduling",
      "description": "Job scheduling options.Beta Feature: These options are available for testing purposes only. They may be changed before final release.",
      "type": "object",
      "properties": {
        "maxFailuresPerHour": {
          "description": "Optional Maximum number of times per hour a driver may be restarted as a result of driver terminating with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NodeInitializationAction": {
      "description": "Specifies an executable to run on a fully configured node and a timeout period for executable completion.",
      "type": "object",
      "properties": {
        "executableFile": {
          "description": "Required Google Cloud Storage URI of executable file.",
          "type": "string"
        },
        "executionTimeout": {
          "description": "Optional Amount of time executable has to complete. Default is 10 minutes. Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "NodeInitializationAction"
    },
    "ListJobsResponse": {
      "description": "A list of jobs in a project.",
      "type": "object",
      "properties": {
        "jobs": {
          "description": "Output-only Jobs list.",
          "type": "array",
          "items": {
            "$ref": "Job"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Optional This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent \u003ccode\u003eListJobsRequest\u003c/code\u003e."
        }
      },
      "id": "ListJobsResponse"
    },
    "CancelJobRequest": {
      "type": "object",
      "properties": {},
      "id": "CancelJobRequest",
      "description": "A request to cancel a job."
    },
    "SparkSqlJob": {
      "description": "A Cloud Dataproc job for running Spark SQL queries.",
      "type": "object",
      "properties": {
        "scriptVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\"value\";).",
          "type": "object"
        },
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to be added to the Spark CLASSPATH.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loggingConfiguration": {
          "$ref": "LoggingConfiguration",
          "description": "Optional The runtime log configuration for job execution."
        },
        "properties": {
          "description": "Optional A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains SQL queries.",
          "type": "string"
        },
        "queryList": {
          "$ref": "QueryList",
          "description": "A list of queries."
        }
      },
      "id": "SparkSqlJob"
    },
    "Cluster": {
      "properties": {
        "configuration": {
          "$ref": "ClusterConfiguration",
          "description": "Required The cluster configuration. Note that Cloud Dataproc may set default values, and values may change when clusters are updated."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}\\p{N}_-{0,63}No more than 64 labels can be associated with a given cluster.",
          "type": "object"
        },
        "status": {
          "description": "Output-only Cluster status.",
          "$ref": "ClusterStatus"
        },
        "metrics": {
          "$ref": "ClusterMetrics",
          "description": "Contains cluster daemon metrics such as HDFS and YARN stats."
        },
        "statusHistory": {
          "description": "Output-only Previous cluster statuses.",
          "type": "array",
          "items": {
            "$ref": "ClusterStatus"
          }
        },
        "clusterUuid": {
          "description": "Output-only A cluster UUID (Unique Universal Identifier). Cloud Dataproc generates this value when it creates the cluster.",
          "type": "string"
        },
        "clusterName": {
          "description": "Required The cluster name. Cluster names within a project must be unique. Names from deleted clusters can be reused.",
          "type": "string"
        },
        "projectId": {
          "description": "Required The Google Cloud Platform project ID that the cluster belongs to.",
          "type": "string"
        }
      },
      "id": "Cluster",
      "description": "Describes the identifying information, configuration, and status of a cluster of Google Compute Engine instances.",
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "id": "ListOperationsResponse"
    },
    "OperationMetadata": {
      "description": "Metadata describing the operation.",
      "type": "object",
      "properties": {
        "operationType": {
          "description": "Output-only The operation type.",
          "type": "string"
        },
        "description": {
          "description": "Output-only Short description of operation.",
          "type": "string"
        },
        "warnings": {
          "description": "Output-only Errors encountered during operation execution.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "OperationStatus",
          "description": "Output-only Current operation status."
        },
        "statusHistory": {
          "description": "Output-only Previous operation status.",
          "type": "array",
          "items": {
            "$ref": "OperationStatus"
          }
        },
        "clusterName": {
          "description": "Name of the cluster for the operation.",
          "type": "string"
        },
        "clusterUuid": {
          "description": "Cluster UUId for the operation.",
          "type": "string"
        }
      },
      "id": "OperationMetadata"
    },
    "JobPlacement": {
      "description": "Cloud Dataproc job configuration.",
      "type": "object",
      "properties": {
        "clusterName": {
          "description": "Required The name of the cluster where the job will be submitted.",
          "type": "string"
        },
        "clusterUuid": {
          "description": "Output-only A cluster UUID generated by the Dataproc service when the job is submitted.",
          "type": "string"
        }
      },
      "id": "JobPlacement"
    },
    "ClusterStatus": {
      "description": "The status of a cluster and its instances.",
      "type": "object",
      "properties": {
        "stateStartTime": {
          "description": "Time when this state was entered.",
          "format": "google-datetime",
          "type": "string"
        },
        "substate": {
          "enumDescriptions": [
            "",
            "The cluster is known to be in an unhealthy state (for example, critical daemons are not running or HDFS capacity is exhausted).Applies to RUNNING state.",
            "The agent-reported status is out of date (may occur if Cloud Dataproc loses communication with Agent).Applies to RUNNING state."
          ],
          "enum": [
            "UNSPECIFIED",
            "UNHEALTHY",
            "STALE_STATUS"
          ],
          "description": "Output-only Additional state information that includes status reported by the agent.",
          "type": "string"
        },
        "detail": {
          "description": "Optional details of cluster's state.",
          "type": "string"
        },
        "state": {
          "description": "The cluster's state.",
          "type": "string",
          "enumDescriptions": [
            "The cluster state is unknown.",
            "The cluster is being created and set up. It is not ready for use.",
            "The cluster is currently running and healthy. It is ready for use.",
            "The cluster encountered an error. It is not ready for use.",
            "The cluster is being deleted. It cannot be used.",
            "The cluster is being updated. It continues to accept and process jobs."
          ],
          "enum": [
            "UNKNOWN",
            "CREATING",
            "RUNNING",
            "ERROR",
            "DELETING",
            "UPDATING"
          ]
        }
      },
      "id": "ClusterStatus"
    },
    "PigJob": {
      "description": "A Cloud Dataproc job for running Pig queries on YARN.",
      "type": "object",
      "properties": {
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.",
          "type": "object"
        },
        "continueOnFailure": {
          "description": "Optional Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.",
          "type": "boolean"
        },
        "queryList": {
          "$ref": "QueryList",
          "description": "A list of queries."
        },
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains the Pig queries.",
          "type": "string"
        },
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scriptVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional Mapping of query variable names to values (equivalent to the Pig command: name=[value]).",
          "type": "object"
        },
        "loggingConfiguration": {
          "description": "Optional The runtime log configuration for job execution.",
          "$ref": "LoggingConfiguration"
        }
      },
      "id": "PigJob"
    },
    "AcceleratorConfiguration": {
      "id": "AcceleratorConfiguration",
      "description": "Specifies the type and number of accelerator cards attached to the instances of an instance group (see GPUs on Compute Engine).",
      "type": "object",
      "properties": {
        "acceleratorCount": {
          "description": "The number of the accelerator cards of this type exposed to this instance.",
          "format": "int32",
          "type": "integer"
        },
        "acceleratorTypeUri": {
          "description": "Full or partial URI of the accelerator type resource to expose to this instance. See Google Compute Engine AcceleratorTypes( /compute/docs/reference/beta/acceleratorTypes)",
          "type": "string"
        }
      }
    },
    "ListClustersResponse": {
      "description": "The list of all clusters in a project.",
      "type": "object",
      "properties": {
        "clusters": {
          "description": "Output-only The clusters in the project.",
          "type": "array",
          "items": {
            "$ref": "Cluster"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListClustersResponse"
    },
    "ManagedGroupConfiguration": {
      "description": "Specifies the resources used to actively manage an instance group.",
      "type": "object",
      "properties": {
        "instanceTemplateName": {
          "description": "Output-only The name of the Instance Template used for the Managed Instance Group.",
          "type": "string"
        },
        "instanceGroupManagerName": {
          "description": "Output-only The name of the Instance Group Manager for this group.",
          "type": "string"
        }
      },
      "id": "ManagedGroupConfiguration"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version": "v1beta1",
  "baseUrl": "https://dataproc.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "servicePath": "",
  "description": "Manages Hadoop-based clusters and jobs on Google Cloud Platform.",
  "kind": "discovery#restDescription",
  "rootUrl": "https://dataproc.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "dataproc",
  "batchPath": "batch",
  "id": "dataproc:v1beta1",
  "documentationLink": "https://cloud.google.com/dataproc/",
  "revision": "20170523",
  "title": "Google Cloud Dataproc API"
}
