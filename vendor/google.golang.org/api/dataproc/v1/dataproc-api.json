{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "basePath": "",
  "baseUrl": "https://dataproc.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "Dataproc",
  "description": "Manages Hadoop-based clusters and jobs on Google Cloud Platform.",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/dataproc/",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "dataproc:v1",
  "kind": "discovery#restDescription",
  "name": "dataproc",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "autoscalingPolicies": {
              "methods": {
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:getIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.autoscalingPolicies.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.autoscalingPolicies.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.autoscalingPolicies.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "workflowTemplates": {
              "methods": {
                "create": {
                  "description": "Creates new workflow template.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.workflowTemplates.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The \"resource name\" of the region, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/workflowTemplates",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes a workflow template. It does not cancel in-progress workflows.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}",
                  "httpMethod": "DELETE",
                  "id": "dataproc.projects.locations.workflowTemplates.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The \"resource name\" of the workflow template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "version": {
                      "description": "Optional. The version of workflow template to delete. If specified, will only delete the template if the current server version matches specified version.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "description": "Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.locations.workflowTemplates.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The \"resource name\" of the workflow template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "version": {
                      "description": "Optional. The version of workflow template to retrieve. Only previously instatiated versions can be retrieved.If unspecified, retrieves the current version.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:getIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.workflowTemplates.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "instantiate": {
                  "description": "Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata.On successful completion, Operation.response will be Empty.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:instantiate",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.workflowTemplates.instantiate",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The \"resource name\" of the workflow template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:instantiate",
                  "request": {
                    "$ref": "InstantiateWorkflowTemplateRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "instantiateInline": {
                  "description": "Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata.On successful completion, Operation.response will be Empty.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates:instantiateInline",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.workflowTemplates.instantiateInline",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The \"resource name\" of the workflow template region, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/workflowTemplates:instantiateInline",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists workflows that match the specified filter in the request.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.locations.workflowTemplates.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "Optional. The maximum number of results to return in each response.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Optional. The page token, returned by a previous call, to request the next page of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The \"resource name\" of the region, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/workflowTemplates",
                  "response": {
                    "$ref": "ListWorkflowTemplatesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.workflowTemplates.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.workflowTemplates.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "update": {
                  "description": "Updates (replaces) workflow template. The updated template must contain version that matches the current server version.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}",
                  "httpMethod": "PUT",
                  "id": "dataproc.projects.locations.workflowTemplates.update",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Output only. The \"resource name\" of the template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        },
        "regions": {
          "resources": {
            "autoscalingPolicies": {
              "methods": {
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:getIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.autoscalingPolicies.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.autoscalingPolicies.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.autoscalingPolicies.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "clusters": {
              "methods": {
                "create": {
                  "description": "Creates a cluster in a project.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.clusters.create",
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "parameters": {
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A unique id used to identify the request. If the server receives two CreateClusterRequest requests with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/clusters",
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes a cluster in a project.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "httpMethod": "DELETE",
                  "id": "dataproc.projects.regions.clusters.delete",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "parameters": {
                    "clusterName": {
                      "description": "Required. The cluster name.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterUuid": {
                      "description": "Optional. Specifying the cluster_uuid means the RPC should fail (with error NOT_FOUND) if cluster with specified UUID does not exist.",
                      "location": "query",
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A unique id used to identify the request. If the server receives two DeleteClusterRequest requests with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "diagnose": {
                  "description": "Gets cluster diagnostic information. After the operation completes, the Operation.response field contains DiagnoseClusterOutputLocation.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.clusters.diagnose",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "parameters": {
                    "clusterName": {
                      "description": "Required. The cluster name.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose",
                  "request": {
                    "$ref": "DiagnoseClusterRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "description": "Gets the resource representation for a cluster in a project.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.regions.clusters.get",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "parameters": {
                    "clusterName": {
                      "description": "Required. The cluster name.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "response": {
                    "$ref": "Cluster"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:getIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.clusters.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists all regions/{region}/clusters in a project.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.regions.clusters.list",
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "Optional. A filter constraining the clusters to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is one of status.state, clusterName, or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be one of the following: ACTIVE, INACTIVE, CREATING, RUNNING, ERROR, DELETING, or UPDATING. ACTIVE contains the CREATING, UPDATING, and RUNNING states. INACTIVE contains the DELETING and ERROR states. clusterName is the name of the cluster provided at creation time. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND clusterName = mycluster AND labels.env = staging AND labels.starred = *",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The standard List page size.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Optional. The standard List page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/clusters",
                  "response": {
                    "$ref": "ListClustersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "description": "Updates a cluster in a project.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "httpMethod": "PATCH",
                  "id": "dataproc.projects.regions.clusters.patch",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "parameters": {
                    "clusterName": {
                      "description": "Required. The cluster name.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "gracefulDecommissionTimeout": {
                      "description": "Optional. Timeout for graceful YARN decomissioning. Graceful decommissioning allows removing nodes from the cluster without interrupting jobs in progress. Timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day.Only supported on Dataproc image versions 1.2 and higher.",
                      "format": "google-duration",
                      "location": "query",
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A unique id used to identify the request. If the server receives two UpdateClusterRequest requests with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Specifies the path, relative to Cluster, of the field to update. For example, to change the number of workers in a cluster to 5, the update_mask parameter would be specified as config.worker_config.num_instances, and the PATCH request body would specify the new value, as follows:\n{\n  \"config\":{\n    \"workerConfig\":{\n      \"numInstances\":\"5\"\n    }\n  }\n}\nSimilarly, to change the number of preemptible workers in a cluster to 5, the update_mask parameter would be config.secondary_worker_config.num_instances, and the PATCH request body would be set as follows:\n{\n  \"config\":{\n    \"secondaryWorkerConfig\":{\n      \"numInstances\":\"5\"\n    }\n  }\n}\n\u003cstrong\u003eNote:\u003c/strong\u003e Currently, only the following fields can be updated:\u003ctable\u003e  \u003ctbody\u003e  \u003ctr\u003e  \u003ctd\u003e\u003cstrong\u003eMask\u003c/strong\u003e\u003c/td\u003e  \u003ctd\u003e\u003cstrong\u003ePurpose\u003c/strong\u003e\u003c/td\u003e  \u003c/tr\u003e  \u003ctr\u003e  \u003ctd\u003e\u003cstrong\u003e\u003cem\u003elabels\u003c/em\u003e\u003c/strong\u003e\u003c/td\u003e  \u003ctd\u003eUpdate labels\u003c/td\u003e  \u003c/tr\u003e  \u003ctr\u003e  \u003ctd\u003e\u003cstrong\u003e\u003cem\u003econfig.worker_config.num_instances\u003c/em\u003e\u003c/strong\u003e\u003c/td\u003e  \u003ctd\u003eResize primary worker group\u003c/td\u003e  \u003c/tr\u003e  \u003ctr\u003e  \u003ctd\u003e\u003cstrong\u003e\u003cem\u003econfig.secondary_worker_config.num_instances\u003c/em\u003e\u003c/strong\u003e\u003c/td\u003e  \u003ctd\u003eResize secondary worker group\u003c/td\u003e  \u003c/tr\u003e  \u003c/tbody\u003e  \u003c/table\u003e",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:setIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.clusters.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:testIamPermissions",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.clusters.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "jobs": {
              "methods": {
                "cancel": {
                  "description": "Starts a job cancellation request. To access the job resource after cancellation, call regions/{region}/jobs.list or regions/{region}/jobs.get.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.jobs.cancel",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "parameters": {
                    "jobId": {
                      "description": "Required. The job ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel",
                  "request": {
                    "$ref": "CancelJobRequest"
                  },
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "httpMethod": "DELETE",
                  "id": "dataproc.projects.regions.jobs.delete",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "parameters": {
                    "jobId": {
                      "description": "Required. The job ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "description": "Gets the resource representation for a job in a project.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.regions.jobs.get",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "parameters": {
                    "jobId": {
                      "description": "Required. The job ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:getIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.jobs.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists regions/{region}/jobs in a project.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.regions.jobs.list",
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "parameters": {
                    "clusterName": {
                      "description": "Optional. If set, the returned jobs list includes only jobs that were submitted to the named cluster.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. A filter constraining the jobs to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is status.state or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be either ACTIVE or NON_ACTIVE. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND labels.env = staging AND labels.starred = *",
                      "location": "query",
                      "type": "string"
                    },
                    "jobStateMatcher": {
                      "description": "Optional. Specifies enumerated categories of jobs to list. (default = match ALL jobs).If filter is provided, jobStateMatcher will be ignored.",
                      "enum": [
                        "ALL",
                        "ACTIVE",
                        "NON_ACTIVE"
                      ],
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The number of results to return in each response.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Optional. The page token, returned by a previous call, to request the next page of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/jobs",
                  "response": {
                    "$ref": "ListJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "description": "Updates a job in a project.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "httpMethod": "PATCH",
                  "id": "dataproc.projects.regions.jobs.patch",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "parameters": {
                    "jobId": {
                      "description": "Required. The job ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Specifies the path, relative to \u003ccode\u003eJob\u003c/code\u003e, of the field to update. For example, to update the labels of a Job the \u003ccode\u003eupdate_mask\u003c/code\u003e parameter would be specified as \u003ccode\u003elabels\u003c/code\u003e, and the PATCH request body would specify the new value. \u003cstrong\u003eNote:\u003c/strong\u003e Currently, \u003ccode\u003elabels\u003c/code\u003e is the only field that can be updated.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "request": {
                    "$ref": "Job"
                  },
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.jobs.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "submit": {
                  "description": "Submits a job to a cluster.",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs:submit",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.jobs.submit",
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "parameters": {
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required. The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/jobs:submit",
                  "request": {
                    "$ref": "SubmitJobRequest"
                  },
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.jobs.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.operations.cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "id": "dataproc.projects.regions.operations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.regions.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:getIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.operations.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.regions.operations.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations$",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.operations.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.operations.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "workflowTemplates": {
              "methods": {
                "create": {
                  "description": "Creates new workflow template.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.workflowTemplates.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The \"resource name\" of the region, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/workflowTemplates",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes a workflow template. It does not cancel in-progress workflows.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}",
                  "httpMethod": "DELETE",
                  "id": "dataproc.projects.regions.workflowTemplates.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The \"resource name\" of the workflow template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "version": {
                      "description": "Optional. The version of workflow template to delete. If specified, will only delete the template if the current server version matches specified version.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "description": "Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.regions.workflowTemplates.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The \"resource name\" of the workflow template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "version": {
                      "description": "Optional. The version of workflow template to retrieve. Only previously instatiated versions can be retrieved.If unspecified, retrieves the current version.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:getIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.workflowTemplates.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "instantiate": {
                  "description": "Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata.On successful completion, Operation.response will be Empty.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:instantiate",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.workflowTemplates.instantiate",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The \"resource name\" of the workflow template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:instantiate",
                  "request": {
                    "$ref": "InstantiateWorkflowTemplateRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "instantiateInline": {
                  "description": "Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata.On successful completion, Operation.response will be Empty.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates:instantiateInline",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.workflowTemplates.instantiateInline",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The \"resource name\" of the workflow template region, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/workflowTemplates:instantiateInline",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists workflows that match the specified filter in the request.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates",
                  "httpMethod": "GET",
                  "id": "dataproc.projects.regions.workflowTemplates.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "Optional. The maximum number of results to return in each response.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Optional. The page token, returned by a previous call, to request the next page of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The \"resource name\" of the region, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/workflowTemplates",
                  "response": {
                    "$ref": "ListWorkflowTemplatesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.workflowTemplates.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.workflowTemplates.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "update": {
                  "description": "Updates (replaces) workflow template. The updated template must contain version that matches the current server version.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}",
                  "httpMethod": "PUT",
                  "id": "dataproc.projects.regions.workflowTemplates.update",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Output only. The \"resource name\" of the template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "revision": "20190511",
  "rootUrl": "https://dataproc.googleapis.com/",
  "schemas": {
    "AcceleratorConfig": {
      "description": "Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine.",
      "id": "AcceleratorConfig",
      "properties": {
        "acceleratorCount": {
          "description": "The number of the accelerator cards of this type exposed to this instance.",
          "format": "int32",
          "type": "integer"
        },
        "acceleratorTypeUri": {
          "description": "Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes.Examples:\nhttps://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80\nprojects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80\nnvidia-tesla-k80Auto Zone Exception: If you are using the Cloud Dataproc Auto Zone Placement feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Binding": {
      "description": "Associates members with a role.",
      "id": "Binding",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. NOTE: An unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently."
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. members can have the following values:\nallUsers: A special identifier that represents anyone who is  on the internet; with or without a Google account.\nallAuthenticatedUsers: A special identifier that represents anyone  who is authenticated with a Google account or a service account.\nuser:{emailid}: An email address that represents a specific Google  account. For example, alice@gmail.com .\nserviceAccount:{emailid}: An email address that represents a service  account. For example, my-other-app@appspot.gserviceaccount.com.\ngroup:{emailid}: An email address that represents a Google group.  For example, admins@example.com.\ndomain:{domain}: The G Suite domain (primary) that represents all the  users of that domain. For example, google.com or example.com.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "role": {
          "description": "Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelJobRequest": {
      "description": "A request to cancel a job.",
      "id": "CancelJobRequest",
      "properties": {},
      "type": "object"
    },
    "Cluster": {
      "description": "Describes the identifying information, config, and status of a cluster of Compute Engine instances.",
      "id": "Cluster",
      "properties": {
        "clusterName": {
          "description": "Required. The cluster name. Cluster names within a project must be unique. Names of deleted clusters can be reused.",
          "type": "string"
        },
        "clusterUuid": {
          "description": "Output only. A cluster UUID (Unique Universal Identifier). Cloud Dataproc generates this value when it creates the cluster.",
          "type": "string"
        },
        "config": {
          "$ref": "ClusterConfig",
          "description": "Required. The cluster config. Note that Cloud Dataproc may set default values, and values may change when clusters are updated."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.",
          "type": "object"
        },
        "metrics": {
          "$ref": "ClusterMetrics",
          "description": "Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release."
        },
        "projectId": {
          "description": "Required. The Google Cloud Platform project ID that the cluster belongs to.",
          "type": "string"
        },
        "status": {
          "$ref": "ClusterStatus",
          "description": "Output only. Cluster status."
        },
        "statusHistory": {
          "description": "Output only. The previous cluster status.",
          "items": {
            "$ref": "ClusterStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ClusterConfig": {
      "description": "The cluster config.",
      "id": "ClusterConfig",
      "properties": {
        "configBucket": {
          "description": "Optional. A Google Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Google Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Cloud Dataproc staging bucket).",
          "type": "string"
        },
        "encryptionConfig": {
          "$ref": "EncryptionConfig",
          "description": "Optional. Encryption settings for the cluster."
        },
        "gceClusterConfig": {
          "$ref": "GceClusterConfig",
          "description": "Optional. The shared Compute Engine config settings for all instances in a cluster."
        },
        "initializationActions": {
          "description": "Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget):\nROLE=$(curl -H Metadata-Flavor:Google\nhttp://metadata/computeMetadata/v1/instance/attributes/dataproc-role)\nif [[ \"${ROLE}\" == 'Master' ]]; then\n  ... master specific actions ...\nelse\n  ... worker specific actions ...\nfi\n",
          "items": {
            "$ref": "NodeInitializationAction"
          },
          "type": "array"
        },
        "masterConfig": {
          "$ref": "InstanceGroupConfig",
          "description": "Optional. The Compute Engine config settings for the master instance in a cluster."
        },
        "secondaryWorkerConfig": {
          "$ref": "InstanceGroupConfig",
          "description": "Optional. The Compute Engine config settings for additional worker instances in a cluster."
        },
        "softwareConfig": {
          "$ref": "SoftwareConfig",
          "description": "Optional. The config settings for software inside the cluster."
        },
        "workerConfig": {
          "$ref": "InstanceGroupConfig",
          "description": "Optional. The Compute Engine config settings for worker instances in a cluster."
        }
      },
      "type": "object"
    },
    "ClusterMetrics": {
      "description": "Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
      "id": "ClusterMetrics",
      "properties": {
        "hdfsMetrics": {
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "description": "The HDFS metrics.",
          "type": "object"
        },
        "yarnMetrics": {
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "description": "The YARN metrics.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClusterOperation": {
      "description": "The cluster operation triggered by a workflow.",
      "id": "ClusterOperation",
      "properties": {
        "done": {
          "description": "Output only. Indicates the operation is done.",
          "type": "boolean"
        },
        "error": {
          "description": "Output only. Error, if operation failed.",
          "type": "string"
        },
        "operationId": {
          "description": "Output only. The id of the cluster operation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClusterOperationMetadata": {
      "description": "Metadata describing the operation.",
      "id": "ClusterOperationMetadata",
      "properties": {
        "clusterName": {
          "description": "Output only. Name of the cluster for the operation.",
          "type": "string"
        },
        "clusterUuid": {
          "description": "Output only. Cluster UUID for the operation.",
          "type": "string"
        },
        "description": {
          "description": "Output only. Short description of operation.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. Labels associated with the operation",
          "type": "object"
        },
        "operationType": {
          "description": "Output only. The operation type.",
          "type": "string"
        },
        "status": {
          "$ref": "ClusterOperationStatus",
          "description": "Output only. Current operation status."
        },
        "statusHistory": {
          "description": "Output only. The previous operation status.",
          "items": {
            "$ref": "ClusterOperationStatus"
          },
          "type": "array"
        },
        "warnings": {
          "description": "Output only. Errors encountered during operation execution.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ClusterOperationStatus": {
      "description": "The status of the operation.",
      "id": "ClusterOperationStatus",
      "properties": {
        "details": {
          "description": "Output only. A message containing any operation metadata details.",
          "type": "string"
        },
        "innerState": {
          "description": "Output only. A message containing the detailed operation state.",
          "type": "string"
        },
        "state": {
          "description": "Output only. A message containing the operation state.",
          "enum": [
            "UNKNOWN",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "enumDescriptions": [
            "Unused.",
            "The operation has been created.",
            "The operation is running.",
            "The operation is done; either cancelled or completed."
          ],
          "type": "string"
        },
        "stateStartTime": {
          "description": "Output only. The time this state was entered.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClusterSelector": {
      "description": "A selector that chooses target cluster for jobs based on metadata.",
      "id": "ClusterSelector",
      "properties": {
        "clusterLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Required. The cluster labels. Cluster must have all labels to match.",
          "type": "object"
        },
        "zone": {
          "description": "Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClusterStatus": {
      "description": "The status of a cluster and its instances.",
      "id": "ClusterStatus",
      "properties": {
        "detail": {
          "description": "Output only. Optional details of cluster's state.",
          "type": "string"
        },
        "state": {
          "description": "Output only. The cluster's state.",
          "enum": [
            "UNKNOWN",
            "CREATING",
            "RUNNING",
            "ERROR",
            "DELETING",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The cluster state is unknown.",
            "The cluster is being created and set up. It is not ready for use.",
            "The cluster is currently running and healthy. It is ready for use.",
            "The cluster encountered an error. It is not ready for use.",
            "The cluster is being deleted. It cannot be used.",
            "The cluster is being updated. It continues to accept and process jobs."
          ],
          "type": "string"
        },
        "stateStartTime": {
          "description": "Output only. Time when this state was entered.",
          "format": "google-datetime",
          "type": "string"
        },
        "substate": {
          "description": "Output only. Additional state information that includes status reported by the agent.",
          "enum": [
            "UNSPECIFIED",
            "UNHEALTHY",
            "STALE_STATUS"
          ],
          "enumDescriptions": [
            "The cluster substate is unknown.",
            "The cluster is known to be in an unhealthy state (for example, critical daemons are not running or HDFS capacity is exhausted).Applies to RUNNING state.",
            "The agent-reported status is out of date (may occur if Cloud Dataproc loses communication with Agent).Applies to RUNNING state."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiagnoseClusterRequest": {
      "description": "A request to collect cluster diagnostic information.",
      "id": "DiagnoseClusterRequest",
      "properties": {},
      "type": "object"
    },
    "DiagnoseClusterResults": {
      "description": "The location of diagnostic output.",
      "id": "DiagnoseClusterResults",
      "properties": {
        "outputUri": {
          "description": "Output only. The Cloud Storage URI of the diagnostic output. The output report is a plain text file with a summary of collected diagnostics.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiskConfig": {
      "description": "Specifies the config of disk options for a group of VM instances.",
      "id": "DiskConfig",
      "properties": {
        "bootDiskSizeGb": {
          "description": "Optional. Size in GB of the boot disk (default is 500GB).",
          "format": "int32",
          "type": "integer"
        },
        "bootDiskType": {
          "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-ssd\" (Persistent Disk Solid State Drive) or \"pd-standard\" (Persistent Disk Hard Disk Drive).",
          "type": "string"
        },
        "numLocalSsds": {
          "description": "Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\nservice Foo {\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n}\nThe JSON representation for Empty is empty JSON object {}.",
      "id": "Empty",
      "properties": {},
      "type": "object"
    },
    "EncryptionConfig": {
      "description": "Encryption settings for the cluster.",
      "id": "EncryptionConfig",
      "properties": {
        "gcePdKmsKeyName": {
          "description": "Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Expr": {
      "description": "Represents an expression text. Example:\ntitle: \"User account presence\"\ndescription: \"Determines whether the request has a user account\"\nexpression: \"size(request.user) \u003e 0\"\n",
      "id": "Expr",
      "properties": {
        "description": {
          "description": "An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.The application context of the containing message determines which well-known feature set of CEL is supported.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GceClusterConfig": {
      "description": "Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.",
      "id": "GceClusterConfig",
      "properties": {
        "internalIpOnly": {
          "description": "Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).",
          "type": "object"
        },
        "networkUri": {
          "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see Using Subnetworks for more information).A full URL, partial URI, or short name are valid. Examples:\nhttps://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default\nprojects/[project_id]/regions/global/default\ndefault",
          "type": "string"
        },
        "serviceAccount": {
          "description": "Optional. The service account of the instances. Defaults to the default Compute Engine service account. Custom service accounts need permissions equivalent to the following IAM roles:\nroles/logging.logWriter\nroles/storage.objectAdmin(see https://cloud.google.com/compute/docs/access/service-accounts#custom_service_accounts for more information). Example: [account_id]@[project_id].iam.gserviceaccount.com",
          "type": "string"
        },
        "serviceAccountScopes": {
          "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included:\nhttps://www.googleapis.com/auth/cloud.useraccounts.readonly\nhttps://www.googleapis.com/auth/devstorage.read_write\nhttps://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided:\nhttps://www.googleapis.com/auth/bigquery\nhttps://www.googleapis.com/auth/bigtable.admin.table\nhttps://www.googleapis.com/auth/bigtable.data\nhttps://www.googleapis.com/auth/devstorage.full_control",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subnetworkUri": {
          "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples:\nhttps://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0\nprojects/[project_id]/regions/us-east1/subnetworks/sub0\nsub0",
          "type": "string"
        },
        "tags": {
          "description": "The Compute Engine tags to add to all instances (see Tagging instances).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "zoneUri": {
          "description": "Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the \"global\" region. If omitted in a non-global Cloud Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples:\nhttps://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]\nprojects/[project_id]/zones/[zone]\nus-central1-f",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetIamPolicyRequest": {
      "description": "Request message for GetIamPolicy method.",
      "id": "GetIamPolicyRequest",
      "properties": {},
      "type": "object"
    },
    "HadoopJob": {
      "description": "A Cloud Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).",
      "id": "HadoopJob",
      "properties": {
        "archiveUris": {
          "description": "Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "args": {
          "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fileUris": {
          "description": "Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "jarFileUris": {
          "description": "Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        },
        "mainClass": {
          "description": "The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.",
          "type": "string"
        },
        "mainJarFileUri": {
          "description": "The HCFS URI of the jar file containing the main class. Examples:  'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar'  'hdfs:/tmp/test-samples/custom-wordcount.jar'  'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "HiveJob": {
      "description": "A Cloud Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.",
      "id": "HiveJob",
      "properties": {
        "continueOnFailure": {
          "description": "Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.",
          "type": "boolean"
        },
        "jarFileUris": {
          "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.",
          "type": "object"
        },
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains Hive queries.",
          "type": "string"
        },
        "queryList": {
          "$ref": "QueryList",
          "description": "A list of queries."
        },
        "scriptVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name=\"value\";).",
          "type": "object"
        }
      },
      "type": "object"
    },
    "InstanceGroupConfig": {
      "description": "Optional. The config settings for Compute Engine resources in an instance group, such as a master or worker group.",
      "id": "InstanceGroupConfig",
      "properties": {
        "accelerators": {
          "description": "Optional. The Compute Engine accelerator configuration for these instances.Beta Feature: This feature is still under development. It may be changed before final release.",
          "items": {
            "$ref": "AcceleratorConfig"
          },
          "type": "array"
        },
        "diskConfig": {
          "$ref": "DiskConfig",
          "description": "Optional. Disk option config settings."
        },
        "imageUri": {
          "description": "Optional. The Compute Engine image resource used for cluster instances. It can be specified or may be inferred from SoftwareConfig.image_version.",
          "type": "string"
        },
        "instanceNames": {
          "description": "Output only. The list of instance names. Cloud Dataproc derives the names from cluster_name, num_instances, and the instance group.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "isPreemptible": {
          "description": "Optional. Specifies that this instance group contains preemptible instances.",
          "type": "boolean"
        },
        "machineTypeUri": {
          "description": "Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples:\nhttps://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2\nprojects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2\nn1-standard-2Auto Zone Exception: If you are using the Cloud Dataproc Auto Zone Placement feature, you must use the short name of the machine type resource, for example, n1-standard-2.",
          "type": "string"
        },
        "managedGroupConfig": {
          "$ref": "ManagedGroupConfig",
          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups."
        },
        "numInstances": {
          "description": "Optional. The number of VM instances in the instance group. For master instance groups, must be set to 1.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InstantiateWorkflowTemplateRequest": {
      "description": "A request to instantiate a workflow template.",
      "id": "InstantiateWorkflowTemplateRequest",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Map from parameter names to values that should be used for those parameters. Values may not exceed 100 characters.",
          "type": "object"
        },
        "requestId": {
          "description": "Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
          "type": "string"
        },
        "version": {
          "description": "Optional. The version of workflow template to instantiate. If specified, the workflow will be instantiated only if the current version of the workflow template has the supplied version.This option cannot be used to instantiate a previous version of workflow template.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Job": {
      "description": "A Cloud Dataproc job resource.",
      "id": "Job",
      "properties": {
        "driverControlFilesUri": {
          "description": "Output only. If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri.",
          "type": "string"
        },
        "driverOutputResourceUri": {
          "description": "Output only. A URI pointing to the location of the stdout of the job's driver program.",
          "type": "string"
        },
        "hadoopJob": {
          "$ref": "HadoopJob",
          "description": "Job is a Hadoop job."
        },
        "hiveJob": {
          "$ref": "HiveJob",
          "description": "Job is a Hive job."
        },
        "jobUuid": {
          "description": "Output only. A UUID that uniquely identifies a job within the project over time. This is in contrast to a user-settable reference.job_id that may be reused over time.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.",
          "type": "object"
        },
        "pigJob": {
          "$ref": "PigJob",
          "description": "Job is a Pig job."
        },
        "placement": {
          "$ref": "JobPlacement",
          "description": "Required. Job information, including how, when, and where to run the job."
        },
        "pysparkJob": {
          "$ref": "PySparkJob",
          "description": "Job is a Pyspark job."
        },
        "reference": {
          "$ref": "JobReference",
          "description": "Optional. The fully qualified reference to the job, which can be used to obtain the equivalent REST path of the job resource. If this property is not specified when a job is created, the server generates a \u003ccode\u003ejob_id\u003c/code\u003e."
        },
        "scheduling": {
          "$ref": "JobScheduling",
          "description": "Optional. Job scheduling configuration."
        },
        "sparkJob": {
          "$ref": "SparkJob",
          "description": "Job is a Spark job."
        },
        "sparkSqlJob": {
          "$ref": "SparkSqlJob",
          "description": "Job is a SparkSql job."
        },
        "status": {
          "$ref": "JobStatus",
          "description": "Output only. The job status. Additional application-specific status information may be contained in the \u003ccode\u003etype_job\u003c/code\u003e and \u003ccode\u003eyarn_applications\u003c/code\u003e fields."
        },
        "statusHistory": {
          "description": "Output only. The previous job status.",
          "items": {
            "$ref": "JobStatus"
          },
          "type": "array"
        },
        "yarnApplications": {
          "description": "Output only. The collection of YARN applications spun up by this job.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
          "items": {
            "$ref": "YarnApplication"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "JobPlacement": {
      "description": "Cloud Dataproc job config.",
      "id": "JobPlacement",
      "properties": {
        "clusterName": {
          "description": "Required. The name of the cluster where the job will be submitted.",
          "type": "string"
        },
        "clusterUuid": {
          "description": "Output only. A cluster UUID generated by the Cloud Dataproc service when the job is submitted.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobReference": {
      "description": "Encapsulates the full scoping used to reference a job.",
      "id": "JobReference",
      "properties": {
        "jobId": {
          "description": "Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.",
          "type": "string"
        },
        "projectId": {
          "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobScheduling": {
      "description": "Job scheduling options.",
      "id": "JobScheduling",
      "properties": {
        "maxFailuresPerHour": {
          "description": "Optional. Maximum number of times per hour a driver may be restarted as a result of driver terminating with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "JobStatus": {
      "description": "Cloud Dataproc job status.",
      "id": "JobStatus",
      "properties": {
        "details": {
          "description": "Output only. Optional job state details, such as an error description if the state is \u003ccode\u003eERROR\u003c/code\u003e.",
          "type": "string"
        },
        "state": {
          "description": "Output only. A state message specifying the overall job state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SETUP_DONE",
            "RUNNING",
            "CANCEL_PENDING",
            "CANCEL_STARTED",
            "CANCELLED",
            "DONE",
            "ERROR",
            "ATTEMPT_FAILURE"
          ],
          "enumDescriptions": [
            "The job state is unknown.",
            "The job is pending; it has been submitted, but is not yet running.",
            "Job has been received by the service and completed initial setup; it will soon be submitted to the cluster.",
            "The job is running on the cluster.",
            "A CancelJob request has been received, but is pending.",
            "Transient in-flight resources have been canceled, and the request to cancel the running job has been issued to the cluster.",
            "The job cancellation was successful.",
            "The job has completed successfully.",
            "The job has completed, but encountered an error.",
            "Job attempt has failed. The detail field contains failure details for this attempt.Applies to restartable jobs only."
          ],
          "type": "string"
        },
        "stateStartTime": {
          "description": "Output only. The time when this state was entered.",
          "format": "google-datetime",
          "type": "string"
        },
        "substate": {
          "description": "Output only. Additional state information, which includes status reported by the agent.",
          "enum": [
            "UNSPECIFIED",
            "SUBMITTED",
            "QUEUED",
            "STALE_STATUS"
          ],
          "enumDescriptions": [
            "The job substate is unknown.",
            "The Job is submitted to the agent.Applies to RUNNING state.",
            "The Job has been received and is awaiting execution (it may be waiting for a condition to be met). See the \"details\" field for the reason for the delay.Applies to RUNNING state.",
            "The agent-reported status is out of date, which may be caused by a loss of communication between the agent and Cloud Dataproc. If the agent does not send a timely update, the job will fail.Applies to RUNNING state."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListClustersResponse": {
      "description": "The list of all clusters in a project.",
      "id": "ListClustersResponse",
      "properties": {
        "clusters": {
          "description": "Output only. The clusters in the project.",
          "items": {
            "$ref": "Cluster"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListClustersRequest.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListJobsResponse": {
      "description": "A list of jobs in a project.",
      "id": "ListJobsResponse",
      "properties": {
        "jobs": {
          "description": "Output only. Jobs list.",
          "items": {
            "$ref": "Job"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Optional. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent \u003ccode\u003eListJobsRequest\u003c/code\u003e.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListWorkflowTemplatesResponse": {
      "description": "A response to a request to list workflow templates in a project.",
      "id": "ListWorkflowTemplatesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent \u003ccode\u003eListWorkflowTemplatesRequest\u003c/code\u003e.",
          "type": "string"
        },
        "templates": {
          "description": "Output only. WorkflowTemplates list.",
          "items": {
            "$ref": "WorkflowTemplate"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LoggingConfig": {
      "description": "The runtime logging config of the job.",
      "id": "LoggingConfig",
      "properties": {
        "driverLogLevels": {
          "additionalProperties": {
            "enum": [
              "LEVEL_UNSPECIFIED",
              "ALL",
              "TRACE",
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR",
              "FATAL",
              "OFF"
            ],
            "type": "string"
          },
          "description": "The per-package log levels for the driver. This may include \"root\" package name to configure rootLogger. Examples:  'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ManagedCluster": {
      "description": "Cluster that is managed by the workflow.",
      "id": "ManagedCluster",
      "properties": {
        "clusterName": {
          "description": "Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.",
          "type": "string"
        },
        "config": {
          "$ref": "ClusterConfig",
          "description": "Required. The cluster configuration."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}\\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ManagedGroupConfig": {
      "description": "Specifies the resources used to actively manage an instance group.",
      "id": "ManagedGroupConfig",
      "properties": {
        "instanceGroupManagerName": {
          "description": "Output only. The name of the Instance Group Manager for this group.",
          "type": "string"
        },
        "instanceTemplateName": {
          "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NodeInitializationAction": {
      "description": "Specifies an executable to run on a fully configured node and a timeout period for executable completion.",
      "id": "NodeInitializationAction",
      "properties": {
        "executableFile": {
          "description": "Required. Cloud Storage URI of executable file.",
          "type": "string"
        },
        "executionTimeout": {
          "description": "Optional. Amount of time executable has to complete. Default is 10 minutes. Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "properties": {
        "done": {
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
          "type": "boolean"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.",
          "type": "string"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrderedJob": {
      "description": "A job executed by the workflow.",
      "id": "OrderedJob",
      "properties": {
        "hadoopJob": {
          "$ref": "HadoopJob",
          "description": "Job is a Hadoop job."
        },
        "hiveJob": {
          "$ref": "HiveJob",
          "description": "Job is a Hive job."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\p{Ll}\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\p{Ll}\\p{Lo}\\p{N}_-{0,63}No more than 32 labels can be associated with a given job.",
          "type": "object"
        },
        "pigJob": {
          "$ref": "PigJob",
          "description": "Job is a Pig job."
        },
        "prerequisiteStepIds": {
          "description": "Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pysparkJob": {
          "$ref": "PySparkJob",
          "description": "Job is a Pyspark job."
        },
        "scheduling": {
          "$ref": "JobScheduling",
          "description": "Optional. Job scheduling configuration."
        },
        "sparkJob": {
          "$ref": "SparkJob",
          "description": "Job is a Spark job."
        },
        "sparkSqlJob": {
          "$ref": "SparkSqlJob",
          "description": "Job is a SparkSql job."
        },
        "stepId": {
          "description": "Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ParameterValidation": {
      "description": "Configuration for parameter validation.",
      "id": "ParameterValidation",
      "properties": {
        "regex": {
          "$ref": "RegexValidation",
          "description": "Validation based on regular expressions."
        },
        "values": {
          "$ref": "ValueValidation",
          "description": "Validation based on a list of allowed values."
        }
      },
      "type": "object"
    },
    "PigJob": {
      "description": "A Cloud Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.",
      "id": "PigJob",
      "properties": {
        "continueOnFailure": {
          "description": "Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.",
          "type": "boolean"
        },
        "jarFileUris": {
          "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.",
          "type": "object"
        },
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains the Pig queries.",
          "type": "string"
        },
        "queryList": {
          "$ref": "QueryList",
          "description": "A list of queries."
        },
        "scriptVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Policy": {
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources.A Policy consists of a list of bindings. A binding binds a list of members to a role, where the members can be user accounts, Google groups, Google domains, and service accounts. A role is a named list of permissions defined by IAM.JSON Example\n{\n  \"bindings\": [\n    {\n      \"role\": \"roles/owner\",\n      \"members\": [\n        \"user:mike@example.com\",\n        \"group:admins@example.com\",\n        \"domain:google.com\",\n        \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n      ]\n    },\n    {\n      \"role\": \"roles/viewer\",\n      \"members\": [\"user:sean@example.com\"]\n    }\n  ]\n}\nYAML Example\nbindings:\n- members:\n  - user:mike@example.com\n  - group:admins@example.com\n  - domain:google.com\n  - serviceAccount:my-other-app@appspot.gserviceaccount.com\n  role: roles/owner\n- members:\n  - user:sean@example.com\n  role: roles/viewer\nFor a description of IAM and its features, see the IAM developer's guide (https://cloud.google.com/iam/docs).",
      "id": "Policy",
      "properties": {
        "bindings": {
          "description": "Associates a list of members to a role. bindings with no members will result in an error.",
          "items": {
            "$ref": "Binding"
          },
          "type": "array"
        },
        "etag": {
          "description": "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.If no etag is provided in the call to setIamPolicy, then the existing policy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        },
        "version": {
          "description": "Deprecated.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PySparkJob": {
      "description": "A Cloud Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.",
      "id": "PySparkJob",
      "properties": {
        "archiveUris": {
          "description": "Optional. HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "args": {
          "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fileUris": {
          "description": "Optional. HCFS URIs of files to be copied to the working directory of Python drivers and distributed tasks. Useful for naively parallel tasks.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "jarFileUris": {
          "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        },
        "mainPythonFileUri": {
          "description": "Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
          "type": "object"
        },
        "pythonFileUris": {
          "description": "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "QueryList": {
      "description": "A list of queries to run on a cluster.",
      "id": "QueryList",
      "properties": {
        "queries": {
          "description": "Required. The queries to execute. You do not need to terminate a query with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of an Cloud Dataproc API snippet that uses a QueryList to specify a HiveJob:\n\"hiveJob\": {\n  \"queryList\": {\n    \"queries\": [\n      \"query1\",\n      \"query2\",\n      \"query3;query4\",\n    ]\n  }\n}\n",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RegexValidation": {
      "description": "Validation based on regular expressions.",
      "id": "RegexValidation",
      "properties": {
        "regexes": {
          "description": "Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "description": "Request message for SetIamPolicy method.",
      "id": "SetIamPolicyRequest",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
        }
      },
      "type": "object"
    },
    "SoftwareConfig": {
      "description": "Specifies the selection and config of software inside the cluster.",
      "id": "SoftwareConfig",
      "properties": {
        "imageVersion": {
          "description": "Optional. The version of software inside the cluster. It must be one of the supported Cloud Dataproc Versions, such as \"1.2\" (including a subminor version, such as \"1.2.29\"), or the \"preview\" version. If unspecified, it defaults to the latest Debian version.",
          "type": "string"
        },
        "optionalComponents": {
          "description": "The set of optional components to activate on the cluster.",
          "enumDescriptions": [
            "Unspecified component.",
            "The Anaconda python distribution.",
            "The Hive Web HCatalog (the REST service for accessing HCatalog).",
            "The Jupyter Notebook.",
            "The Zeppelin notebook."
          ],
          "items": {
            "enum": [
              "COMPONENT_UNSPECIFIED",
              "ANACONDA",
              "HIVE_WEBHCAT",
              "JUPYTER",
              "ZEPPELIN"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings:\ncapacity-scheduler: capacity-scheduler.xml\ncore: core-site.xml\ndistcp: distcp-default.xml\nhdfs: hdfs-site.xml\nhive: hive-site.xml\nmapred: mapred-site.xml\npig: pig.properties\nspark: spark-defaults.conf\nyarn: yarn-site.xmlFor more information, see Cluster properties.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "SparkJob": {
      "description": "A Cloud Dataproc job for running Apache Spark (http://spark.apache.org/) applications on YARN.",
      "id": "SparkJob",
      "properties": {
        "archiveUris": {
          "description": "Optional. HCFS URIs of archives to be extracted in the working directory of Spark drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "args": {
          "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fileUris": {
          "description": "Optional. HCFS URIs of files to be copied to the working directory of Spark drivers and distributed tasks. Useful for naively parallel tasks.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "jarFileUris": {
          "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        },
        "mainClass": {
          "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.",
          "type": "string"
        },
        "mainJarFileUri": {
          "description": "The HCFS URI of the jar file that contains the main class.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "SparkSqlJob": {
      "description": "A Cloud Dataproc job for running Apache Spark SQL (http://spark.apache.org/sql/) queries.",
      "id": "SparkSqlJob",
      "properties": {
        "jarFileUris": {
          "description": "Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.",
          "type": "object"
        },
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains SQL queries.",
          "type": "string"
        },
        "queryList": {
          "$ref": "QueryList",
          "description": "A list of queries."
        },
        "scriptVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\"value\";).",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). The error model is designed to be:\nSimple to use and understand for most users\nFlexible enough to meet unexpected needsOverviewThe Status message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a developer-facing English message that helps developers understand and resolve the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package google.rpc that can be used for common error conditions.Language mappingThe Status message is the logical representation of the error model, but it is not necessarily the actual wire format. When the Status message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C.Other usesThe error model and the Status message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments.Example uses of this error model include:\nPartial errors. If a service needs to return partial errors to the client, it may embed the Status in the normal response to indicate the partial errors.\nWorkflow errors. A typical workflow has multiple steps. Each step may have a Status message for error reporting.\nBatch operations. If a client uses batch request and batch response, the Status message should be used directly inside batch response, one for each error sub-response.\nAsynchronous operations. If an API call embeds asynchronous operation results in its response, the status of those operations should be represented directly using the Status message.\nLogging. If some API errors are stored in logs, the message Status could be used directly after any stripping needed for security/privacy reasons.",
      "id": "Status",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubmitJobRequest": {
      "description": "A request to submit a job.",
      "id": "SubmitJobRequest",
      "properties": {
        "job": {
          "$ref": "Job",
          "description": "Required. The job resource."
        },
        "requestId": {
          "description": "Optional. A unique id used to identify the request. If the server receives two SubmitJobRequest requests with the same id, then the second request will be ignored and the first Job created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TemplateParameter": {
      "description": "A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)",
      "id": "TemplateParameter",
      "properties": {
        "description": {
          "description": "Optional. Brief description of the parameter. Must not exceed 1024 characters.",
          "type": "string"
        },
        "fields": {
          "description": "Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax:\nValues in maps can be referenced by key:\nlabels'key'\nplacement.clusterSelector.clusterLabels'key'\nplacement.managedCluster.labels'key'\nplacement.clusterSelector.clusterLabels'key'\njobs'step-id'.labels'key'\nJobs in the jobs list can be referenced by step-id:\njobs'step-id'.hadoopJob.mainJarFileUri\njobs'step-id'.hiveJob.queryFileUri\njobs'step-id'.pySparkJob.mainPythonFileUri\njobs'step-id'.hadoopJob.jarFileUris0\njobs'step-id'.hadoopJob.archiveUris0\njobs'step-id'.hadoopJob.fileUris0\njobs'step-id'.pySparkJob.pythonFileUris0\nItems in repeated fields can be referenced by a zero-based index:\njobs'step-id'.sparkJob.args0\nOther examples:\njobs'step-id'.hadoopJob.properties'key'\njobs'step-id'.hadoopJob.args0\njobs'step-id'.hiveJob.scriptVariables'key'\njobs'step-id'.hadoopJob.mainJarFileUri\nplacement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid:\nplacement.clusterSelector.clusterLabels\njobs'step-id'.sparkJob.args",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.",
          "type": "string"
        },
        "validation": {
          "$ref": "ParameterValidation",
          "description": "Optional. Validation rules to be applied to this parameter's value."
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for TestIamPermissions method.",
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the resource. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for TestIamPermissions method.",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "description": "A subset of TestPermissionsRequest.permissions that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ValueValidation": {
      "description": "Validation based on a list of allowed values.",
      "id": "ValueValidation",
      "properties": {
        "values": {
          "description": "Required. List of allowed values for the parameter.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowGraph": {
      "description": "The workflow graph.",
      "id": "WorkflowGraph",
      "properties": {
        "nodes": {
          "description": "Output only. The workflow nodes.",
          "items": {
            "$ref": "WorkflowNode"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowMetadata": {
      "description": "A Cloud Dataproc workflow template resource.",
      "id": "WorkflowMetadata",
      "properties": {
        "clusterName": {
          "description": "Output only. The name of the target cluster.",
          "type": "string"
        },
        "clusterUuid": {
          "description": "Output only. The UUID of target cluster.",
          "type": "string"
        },
        "createCluster": {
          "$ref": "ClusterOperation",
          "description": "Output only. The create cluster operation metadata."
        },
        "deleteCluster": {
          "$ref": "ClusterOperation",
          "description": "Output only. The delete cluster operation metadata."
        },
        "endTime": {
          "description": "Output only. Workflow end time.",
          "format": "google-datetime",
          "type": "string"
        },
        "graph": {
          "$ref": "WorkflowGraph",
          "description": "Output only. The workflow graph."
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map from parameter names to values that were used for those parameters.",
          "type": "object"
        },
        "startTime": {
          "description": "Output only. Workflow start time.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "description": "Output only. The workflow state.",
          "enum": [
            "UNKNOWN",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "enumDescriptions": [
            "Unused.",
            "The operation has been created.",
            "The operation is running.",
            "The operation is done; either cancelled or completed."
          ],
          "type": "string"
        },
        "template": {
          "description": "Output only. The \"resource name\" of the template.",
          "type": "string"
        },
        "version": {
          "description": "Output only. The version of template at the time of workflow instantiation.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "WorkflowNode": {
      "description": "The workflow node.",
      "id": "WorkflowNode",
      "properties": {
        "error": {
          "description": "Output only. The error detail.",
          "type": "string"
        },
        "jobId": {
          "description": "Output only. The job id; populated after the node enters RUNNING state.",
          "type": "string"
        },
        "prerequisiteStepIds": {
          "description": "Output only. Node's prerequisite nodes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "state": {
          "description": "Output only. The node state.",
          "enum": [
            "NODE_STATE_UNSPECIFIED",
            "BLOCKED",
            "RUNNABLE",
            "RUNNING",
            "COMPLETED",
            "FAILED"
          ],
          "enumDescriptions": [
            "State is unspecified.",
            "The node is awaiting prerequisite node to finish.",
            "The node is runnable but not running.",
            "The node is running.",
            "The node completed successfully.",
            "The node failed. A node can be marked FAILED because its ancestor or peer failed."
          ],
          "type": "string"
        },
        "stepId": {
          "description": "Output only. The name of the node.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowTemplate": {
      "description": "A Cloud Dataproc workflow template resource.",
      "id": "WorkflowTemplate",
      "properties": {
        "createTime": {
          "description": "Output only. The time template was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "id": {
          "description": "Required. The template id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.",
          "type": "string"
        },
        "jobs": {
          "description": "Required. The Directed Acyclic Graph of Jobs to submit.",
          "items": {
            "$ref": "OrderedJob"
          },
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The \"resource name\" of the template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}",
          "type": "string"
        },
        "parameters": {
          "description": "Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.",
          "items": {
            "$ref": "TemplateParameter"
          },
          "type": "array"
        },
        "placement": {
          "$ref": "WorkflowTemplatePlacement",
          "description": "Required. WorkflowTemplate scheduling information."
        },
        "updateTime": {
          "description": "Output only. The time template was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "version": {
          "description": "Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "WorkflowTemplatePlacement": {
      "description": "Specifies workflow execution target.Either managed_cluster or cluster_selector is required.",
      "id": "WorkflowTemplatePlacement",
      "properties": {
        "clusterSelector": {
          "$ref": "ClusterSelector",
          "description": "Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted."
        },
        "managedCluster": {
          "$ref": "ManagedCluster",
          "description": "Optional. A cluster that is managed by the workflow."
        }
      },
      "type": "object"
    },
    "YarnApplication": {
      "description": "A YARN application created by a job. Application information is a subset of \u003ccode\u003eorg.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto\u003c/code\u003e.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
      "id": "YarnApplication",
      "properties": {
        "name": {
          "description": "Required. The application name.",
          "type": "string"
        },
        "progress": {
          "description": "Required. The numerical progress of the application, from 1 to 100.",
          "format": "float",
          "type": "number"
        },
        "state": {
          "description": "Required. The application state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "NEW",
            "NEW_SAVING",
            "SUBMITTED",
            "ACCEPTED",
            "RUNNING",
            "FINISHED",
            "FAILED",
            "KILLED"
          ],
          "enumDescriptions": [
            "Status is unspecified.",
            "Status is NEW.",
            "Status is NEW_SAVING.",
            "Status is SUBMITTED.",
            "Status is ACCEPTED.",
            "Status is RUNNING.",
            "Status is FINISHED.",
            "Status is FAILED.",
            "Status is KILLED."
          ],
          "type": "string"
        },
        "trackingUrl": {
          "description": "Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "servicePath": "",
  "title": "Cloud Dataproc API",
  "version": "v1"
}