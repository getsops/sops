{
  "basePath": "",
  "revision": "20171003",
  "documentationLink": "https://cloud.google.com/dlp/docs/",
  "id": "dlp:v2beta1",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "GooglePrivacyDlpV2beta1SummaryResult": {
      "description": "A collection that informs the user the number of times a particular\n`TransformationResultCode` and error details occurred.",
      "type": "object",
      "properties": {
        "details": {
          "description": "A place for warnings or errors to show up if a transformation didn't\nwork as expected.",
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "string"
        },
        "code": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "TRANSFORMATION_RESULT_CODE_UNSPECIFIED",
            "SUCCESS",
            "ERROR"
          ],
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1SummaryResult"
    },
    "GooglePrivacyDlpV2beta1BigQueryTable": {
      "properties": {
        "datasetId": {
          "description": "Dataset ID of the table.",
          "type": "string"
        },
        "tableId": {
          "description": "Name of the table.",
          "type": "string"
        },
        "projectId": {
          "description": "The Google Cloud Platform project ID of the project containing the table.\nIf omitted, project ID is inferred from the API call.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1BigQueryTable",
      "description": "Message defining the location of a BigQuery table. A table is uniquely\nidentified  by its project_id, dataset_id, and table_name. Within a query\na table is often referenced with a string in the format of:\n`\u003cproject_id\u003e:\u003cdataset_id\u003e.\u003ctable_id\u003e` or\n`\u003cproject_id\u003e.\u003cdataset_id\u003e.\u003ctable_id\u003e`.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1InfoTypeTransformations": {
      "description": "A type of transformation that will scan unstructured text and\napply various `PrimitiveTransformation`s to each finding, where the\ntransformation is applied to only values that were identified as a specific\ninfo_type.",
      "type": "object",
      "properties": {
        "transformations": {
          "description": "Transformation for each info type. Cannot specify more than one\nfor a given info type. [required]",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InfoTypeTransformation"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1InfoTypeTransformations"
    },
    "GooglePrivacyDlpV2beta1ListRootCategoriesResponse": {
      "description": "Response for ListRootCategories request.",
      "type": "object",
      "properties": {
        "categories": {
          "description": "List of all into type categories supported by the API.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1CategoryDescription"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1ListRootCategoriesResponse"
    },
    "GooglePrivacyDlpV2beta1KindExpression": {
      "description": "A representation of a Datastore kind.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the kind.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1KindExpression"
    },
    "GooglePrivacyDlpV2beta1FileSet": {
      "properties": {
        "url": {
          "description": "The url, in the format `gs://\u003cbucket\u003e/\u003cpath\u003e`. Trailing wildcard in the\npath is allowed.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1FileSet",
      "description": "Set of files to scan.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1AnalyzeDataSourceRiskRequest": {
      "properties": {
        "sourceTable": {
          "$ref": "GooglePrivacyDlpV2beta1BigQueryTable",
          "description": "Input dataset to compute metrics over."
        },
        "privacyMetric": {
          "description": "Privacy metric to compute.",
          "$ref": "GooglePrivacyDlpV2beta1PrivacyMetric"
        }
      },
      "id": "GooglePrivacyDlpV2beta1AnalyzeDataSourceRiskRequest",
      "description": "Request for creating a risk analysis operation.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1InfoTypeTransformation": {
      "description": "A transformation to apply to text that is identified as a specific\ninfo_type.",
      "type": "object",
      "properties": {
        "primitiveTransformation": {
          "description": "Primitive transformation to apply to the info type. [required]",
          "$ref": "GooglePrivacyDlpV2beta1PrimitiveTransformation"
        },
        "infoTypes": {
          "description": "Info types to apply the transformation to. Empty list will match all\navailable info types for this transformation.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InfoType"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1InfoTypeTransformation"
    },
    "GooglePrivacyDlpV2beta1Bucket": {
      "description": "Buckets represented as ranges, along with replacement values. Ranges must\nbe non-overlapping.",
      "type": "object",
      "properties": {
        "max": {
          "$ref": "GooglePrivacyDlpV2beta1Value",
          "description": "Upper bound of the range, exclusive; type must match min."
        },
        "replacementValue": {
          "description": "Replacement value for this bucket. If not provided\nthe default behavior will be to hyphenate the min-max range.",
          "$ref": "GooglePrivacyDlpV2beta1Value"
        },
        "min": {
          "description": "Lower bound of the range, inclusive. Type should be the same as max if\nused.",
          "$ref": "GooglePrivacyDlpV2beta1Value"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Bucket"
    },
    "GooglePrivacyDlpV2beta1KAnonymityResult": {
      "description": "Result of the k-anonymity computation.",
      "type": "object",
      "properties": {
        "equivalenceClassHistogramBuckets": {
          "description": "Histogram of k-anonymity equivalence classes.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1KAnonymityHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1KAnonymityResult"
    },
    "GooglePrivacyDlpV2beta1CategoricalStatsHistogramBucket": {
      "description": "Histogram bucket of value frequencies in the column.",
      "type": "object",
      "properties": {
        "bucketSize": {
          "description": "Total number of records in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "valueFrequencyUpperBound": {
          "description": "Upper bound on the value frequency of the values in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "valueFrequencyLowerBound": {
          "description": "Lower bound on the value frequency of the values in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValues": {
          "description": "Sample of value frequencies in this bucket. The total number of\nvalues returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ValueFrequency"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1CategoricalStatsHistogramBucket"
    },
    "GooglePrivacyDlpV2beta1TableLocation": {
      "properties": {
        "rowIndex": {
          "description": "The zero-based index of the row where the finding is located.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1TableLocation",
      "description": "Location of a finding within a `ContentItem.Table`.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1KAnonymityConfig": {
      "description": "k-anonymity metric, used for analysis of reidentification risk.",
      "type": "object",
      "properties": {
        "entityId": {
          "$ref": "GooglePrivacyDlpV2beta1EntityId",
          "description": "Optional message indicating that each distinct `EntityId` should not\ncontribute to the k-anonymity count more than once per equivalence class."
        },
        "quasiIds": {
          "description": "Set of fields to compute k-anonymity over. When multiple fields are\nspecified, they are considered a single composite key. Structs and\nrepeated data types are not supported; however, nested fields are\nsupported so long as they are not structs themselves or nested within\na repeated field.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldId"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1KAnonymityConfig"
    },
    "GooglePrivacyDlpV2beta1DatastoreKey": {
      "description": "Record key for a finding in Cloud Datastore.",
      "type": "object",
      "properties": {
        "entityKey": {
          "$ref": "GooglePrivacyDlpV2beta1Key",
          "description": "Datastore entity key."
        }
      },
      "id": "GooglePrivacyDlpV2beta1DatastoreKey"
    },
    "GooglePrivacyDlpV2beta1RecordKey": {
      "properties": {
        "datastoreKey": {
          "$ref": "GooglePrivacyDlpV2beta1DatastoreKey"
        },
        "cloudStorageKey": {
          "$ref": "GooglePrivacyDlpV2beta1CloudStorageKey"
        }
      },
      "id": "GooglePrivacyDlpV2beta1RecordKey",
      "description": "Message for a unique key indicating a record that contains a finding.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1DeidentifyContentRequest": {
      "properties": {
        "deidentifyConfig": {
          "description": "Configuration for the de-identification of the list of content items.",
          "$ref": "GooglePrivacyDlpV2beta1DeidentifyConfig"
        },
        "inspectConfig": {
          "description": "Configuration for the inspector.",
          "$ref": "GooglePrivacyDlpV2beta1InspectConfig"
        },
        "items": {
          "description": "The list of items to inspect. Up to 100 are allowed per request.\nAll items will be treated as text/*.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ContentItem"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1DeidentifyContentRequest",
      "description": "Request to de-identify a list of items.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1InspectResult": {
      "properties": {
        "findingsTruncated": {
          "description": "If true, then this item might have more findings than were returned,\nand the findings returned are an arbitrary subset of all findings.\nThe findings list might be truncated because the input items were too\nlarge, or because the server reached the maximum amount of resources\nallowed for a single API call. For best results, divide the input into\nsmaller batches.",
          "type": "boolean"
        },
        "findings": {
          "description": "List of findings for an item.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Finding"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1InspectResult",
      "description": "All the findings for a single scanned item.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1ImageLocation": {
      "properties": {
        "height": {
          "description": "Height of the bounding box in pixels.",
          "format": "int32",
          "type": "integer"
        },
        "top": {
          "description": "Top coordinate of the bounding box. (0,0) is upper left.",
          "format": "int32",
          "type": "integer"
        },
        "left": {
          "description": "Left coordinate of the bounding box. (0,0) is upper left.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "description": "Width of the bounding box in pixels.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GooglePrivacyDlpV2beta1ImageLocation",
      "description": "Bounding box encompassing detected text within an image.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1ReplaceValueConfig": {
      "description": "Replace each input value with a given `Value`.",
      "type": "object",
      "properties": {
        "newValue": {
          "$ref": "GooglePrivacyDlpV2beta1Value",
          "description": "Value to replace it with."
        }
      },
      "id": "GooglePrivacyDlpV2beta1ReplaceValueConfig"
    },
    "GooglePrivacyDlpV2beta1ContentItem": {
      "description": "Container structure for the content to inspect.",
      "type": "object",
      "properties": {
        "value": {
          "description": "String data to inspect or redact.",
          "type": "string"
        },
        "table": {
          "description": "Structured content for inspection.",
          "$ref": "GooglePrivacyDlpV2beta1Table"
        },
        "data": {
          "description": "Content data to inspect or redact.",
          "format": "byte",
          "type": "string"
        },
        "type": {
          "description": "Type of the content, as defined in Content-Type HTTP header.\nSupported types are: all \"text\" types, octet streams, PNG images,\nJPEG images.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1ContentItem"
    },
    "GooglePrivacyDlpV2beta1CryptoReplaceFfxFpeConfig": {
      "description": "Replaces an identifier with an surrogate using FPE with the FFX\nmode of operation.\nThe identifier must be representable by the US-ASCII character set.\nFor a given crypto key and context, the same identifier will be\nreplaced with the same surrogate.\nNote that a given identifier must be either the empty string or be at\nleast two characters long.",
      "type": "object",
      "properties": {
        "customAlphabet": {
          "description": "This is supported by mapping these to the alphanumeric characters\nthat the FFX mode natively supports. This happens before/after\nencryption/decryption.\nEach character listed must appear only once.\nNumber of characters must be in the range [2, 62].\nThis must be encoded as ASCII.\nThe order of characters does not matter.",
          "type": "string"
        },
        "cryptoKey": {
          "description": "The key used by the encryption algorithm. [required]",
          "$ref": "GooglePrivacyDlpV2beta1CryptoKey"
        },
        "commonAlphabet": {
          "enum": [
            "FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED",
            "NUMERIC",
            "HEXADECIMAL",
            "UPPER_CASE_ALPHA_NUMERIC",
            "ALPHA_NUMERIC"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "[0-9] (radix of 10)",
            "[0-9A-F] (radix of 16)",
            "[0-9A-Z] (radix of 36)",
            "[0-9A-Za-z] (radix of 62)"
          ]
        },
        "radix": {
          "description": "The native way to select the alphabet. Must be in the range [2, 62].",
          "format": "int32",
          "type": "integer"
        },
        "context": {
          "description": "A context may be used for higher security since the same\nidentifier in two different contexts likely will be given a distinct\nsurrogate. The principle is that the likeliness is inversely related\nto the ratio of the number of distinct identifiers per context over the\nnumber of possible surrogates: As long as this ratio is small, the\nlikehood is large.\n\nIf the context is not set, a default tweak will be used.\nIf the context is set but:\n\n1. there is no record present when transforming a given value or\n1. the field is not present when transforming a given value,\n\na default tweak will be used.\n\nNote that case (1) is expected when an `InfoTypeTransformation` is\napplied to both structured and non-structured `ContentItem`s.\nCurrently, the referenced field may be of value type integer or string.\n\nThe tweak is constructed as a sequence of bytes in big endian byte order\nsuch that:\n\n- a 64 bit integer is encoded followed by a single byte of value 1\n- a string is encoded in UTF-8 format followed by a single byte of value 2\n\nThis is also known as the 'tweak', as in tweakable encryption.",
          "$ref": "GooglePrivacyDlpV2beta1FieldId"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CryptoReplaceFfxFpeConfig"
    },
    "GooglePrivacyDlpV2beta1Color": {
      "properties": {
        "red": {
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "green": {
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "blue": {
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Color",
      "description": "Represents a color in the RGB color space.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1Table": {
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Row"
          }
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldId"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1Table",
      "description": "Structured content to inspect. Up to 50,000 `Value`s per request allowed.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1ValueFrequency": {
      "properties": {
        "count": {
          "description": "How many times the value is contained in the field.",
          "format": "int64",
          "type": "string"
        },
        "value": {
          "description": "A value contained in the field in question.",
          "$ref": "GooglePrivacyDlpV2beta1Value"
        }
      },
      "id": "GooglePrivacyDlpV2beta1ValueFrequency",
      "description": "A value of a field, including its frequency.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1InfoTypeLimit": {
      "properties": {
        "maxFindings": {
          "description": "Max findings limit for the given infoType.",
          "format": "int32",
          "type": "integer"
        },
        "infoType": {
          "$ref": "GooglePrivacyDlpV2beta1InfoType",
          "description": "Type of information the findings limit applies to. Only one limit per\ninfo_type should be provided. If InfoTypeLimit does not have an\ninfo_type, the DLP API applies the limit against all info_types that are\nfound but not specified in another InfoTypeLimit."
        }
      },
      "id": "GooglePrivacyDlpV2beta1InfoTypeLimit",
      "description": "Max findings configuration per info type, per content item or long running\noperation.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1CryptoKey": {
      "properties": {
        "kmsWrapped": {
          "$ref": "GooglePrivacyDlpV2beta1KmsWrappedCryptoKey"
        },
        "unwrapped": {
          "$ref": "GooglePrivacyDlpV2beta1UnwrappedCryptoKey"
        },
        "transient": {
          "$ref": "GooglePrivacyDlpV2beta1TransientCryptoKey"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CryptoKey",
      "description": "This is a data encryption key (DEK) (as opposed to\na key encryption key (KEK) stored by KMS).\nWhen using KMS to wrap/unwrap DEKs, be sure to set an appropriate\nIAM policy on the KMS CryptoKey (KEK) to ensure an attacker cannot\nunwrap the data crypto key.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1LDiversityHistogramBucket": {
      "properties": {
        "sensitiveValueFrequencyUpperBound": {
          "description": "Upper bound on the sensitive value frequencies of the equivalence\nclasses in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "sensitiveValueFrequencyLowerBound": {
          "description": "Lower bound on the sensitive value frequencies of the equivalence\nclasses in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValues": {
          "description": "Sample of equivalence classes in this bucket. The total number of\nclasses returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1LDiversityEquivalenceClass"
          }
        },
        "bucketSize": {
          "description": "Total number of records in this bucket.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1LDiversityHistogramBucket",
      "description": "Histogram bucket of sensitive value frequencies in the table.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1Value": {
      "properties": {
        "timeValue": {
          "$ref": "GoogleTypeTimeOfDay"
        },
        "integerValue": {
          "format": "int64",
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate"
        },
        "timestampValue": {
          "format": "google-datetime",
          "type": "string"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "floatValue": {
          "format": "double",
          "type": "number"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Value",
      "description": "Set of primitive values supported by the system.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1Condition": {
      "properties": {
        "field": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId",
          "description": "Field within the record this condition is evaluated against. [required]"
        },
        "operator": {
          "enumDescriptions": [
            "",
            "Equal.",
            "Not equal to.",
            "Greater than.",
            "Less than.",
            "Greater than or equals.",
            "Less than or equals.",
            "Exists"
          ],
          "enum": [
            "RELATIONAL_OPERATOR_UNSPECIFIED",
            "EQUAL_TO",
            "NOT_EQUAL_TO",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_OR_EQUALS",
            "LESS_THAN_OR_EQUALS",
            "EXISTS"
          ],
          "description": "Operator used to compare the field or info type to the value. [required]",
          "type": "string"
        },
        "value": {
          "$ref": "GooglePrivacyDlpV2beta1Value",
          "description": "Value to compare against. [Required, except for `EXISTS` tests.]"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Condition",
      "description": "The field type of `value` and `field` do not need to match to be\nconsidered equal, but not all comparisons are possible.\n\nA `value` of type:\n\n- `string` can be compared against all other types\n- `boolean` can only be compared against other booleans\n- `integer` can be compared against doubles or a string if the string value\ncan be parsed as an integer.\n- `double` can be compared against integers or a string if the string can\nbe parsed as a double.\n- `Timestamp` can be compared against strings in RFC 3339 date string\nformat.\n- `TimeOfDay` can be compared against timestamps and strings in the format\nof 'HH:mm:ss'.\n\nIf we fail to compare do to type mismatch, a warning will be given and\nthe condition will evaluate to false.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1PartitionId": {
      "description": "Datastore partition ID.\nA partition ID identifies a grouping of entities. The grouping is always\nby project and namespace, however the namespace ID may be empty.\n\nA partition ID contains several dimensions:\nproject ID and namespace ID.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "The ID of the project to which the entities belong.",
          "type": "string"
        },
        "namespaceId": {
          "description": "If not empty, the ID of the namespace to which the entities belong.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1PartitionId"
    },
    "GooglePrivacyDlpV2beta1InspectContentResponse": {
      "properties": {
        "results": {
          "description": "Each content_item from the request has a result in this list, in the\nsame order as the request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InspectResult"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1InspectContentResponse",
      "description": "Results of inspecting a list of items.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1RedactContentRequest": {
      "description": "Request to search for potentially sensitive info in a list of items\nand replace it with a default or provided content.",
      "type": "object",
      "properties": {
        "replaceConfigs": {
          "description": "The strings to replace findings text findings with. Must specify at least\none of these or one ImageRedactionConfig if redacting images.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ReplaceConfig"
          }
        },
        "imageRedactionConfigs": {
          "description": "The configuration for specifying what content to redact from images.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ImageRedactionConfig"
          }
        },
        "inspectConfig": {
          "description": "Configuration for the inspector.",
          "$ref": "GooglePrivacyDlpV2beta1InspectConfig"
        },
        "items": {
          "description": "The list of items to inspect. Up to 100 are allowed per request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ContentItem"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1RedactContentRequest"
    },
    "GooglePrivacyDlpV2beta1FieldId": {
      "description": "General identifier of a data field in a storage service.",
      "type": "object",
      "properties": {
        "columnName": {
          "description": "Name describing the field.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1FieldId"
    },
    "GooglePrivacyDlpV2beta1TransformationSummary": {
      "properties": {
        "transformation": {
          "$ref": "GooglePrivacyDlpV2beta1PrimitiveTransformation",
          "description": "The specific transformation these stats apply to."
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1SummaryResult"
          }
        },
        "field": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId",
          "description": "Set if the transformation was limited to a specific FieldId."
        },
        "fieldTransformations": {
          "description": "The field transformation that was applied. This list will contain\nmultiple only in the case of errors.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldTransformation"
          }
        },
        "recordSuppress": {
          "$ref": "GooglePrivacyDlpV2beta1RecordSuppression",
          "description": "The specific suppression option these stats apply to."
        },
        "infoType": {
          "$ref": "GooglePrivacyDlpV2beta1InfoType",
          "description": "Set if the transformation was limited to a specific info_type."
        }
      },
      "id": "GooglePrivacyDlpV2beta1TransformationSummary",
      "description": "Summary of a single tranformation.",
      "type": "object"
    },
    "GoogleLongrunningCancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "GoogleLongrunningCancelOperationRequest"
    },
    "GooglePrivacyDlpV2beta1CharacterMaskConfig": {
      "description": "Partially mask a string by replacing a given number of characters with a\nfixed character. Masking can start from the beginning or end of the string.\nThis can be used on data of any type (numbers, longs, and so on) and when\nde-identifying structured data we'll attempt to preserve the original data's\ntype. (This allows you to take a long like 123 and modify it to a string like\n**3.",
      "type": "object",
      "properties": {
        "maskingCharacter": {
          "description": "Character to mask the sensitive values&mdash;for example, \"*\" for an\nalphabetic string such as name, or \"0\" for a numeric string such as ZIP\ncode or credit card number. String must have length 1. If not supplied, we\nwill default to \"*\" for strings, 0 for digits.",
          "type": "string"
        },
        "reverseOrder": {
          "description": "Mask characters in reverse order. For example, if `masking_character` is\n'0', number_to_mask is 14, and `reverse_order` is false, then\n1234-5678-9012-3456 -\u003e 00000000000000-3456\nIf `masking_character` is '*', `number_to_mask` is 3, and `reverse_order`\nis true, then 12345 -\u003e 12***",
          "type": "boolean"
        },
        "numberToMask": {
          "description": "Number of characters to mask. If not set, all matching chars will be\nmasked. Skipped characters do not count towards this tally.",
          "format": "int32",
          "type": "integer"
        },
        "charactersToIgnore": {
          "description": "When masking a string, items in this list will be skipped when replacing.\nFor example, if your string is 555-555-5555 and you ask us to skip `-` and\nmask 5 chars with * we would produce ***-*55-5555.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1CharsToIgnore"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1CharacterMaskConfig"
    },
    "GooglePrivacyDlpV2beta1TransientCryptoKey": {
      "properties": {
        "name": {
          "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1TransientCryptoKey",
      "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the operation/request finishes.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1CreateInspectOperationRequest": {
      "description": "Request for scheduling a scan of a data subset from a Google Platform data\nrepository.",
      "type": "object",
      "properties": {
        "storageConfig": {
          "description": "Specification of the data set to process.",
          "$ref": "GooglePrivacyDlpV2beta1StorageConfig"
        },
        "outputConfig": {
          "description": "Optional location to store findings.",
          "$ref": "GooglePrivacyDlpV2beta1OutputStorageConfig"
        },
        "operationConfig": {
          "$ref": "GooglePrivacyDlpV2beta1OperationConfig",
          "description": "Additional configuration settings for long running operations."
        },
        "inspectConfig": {
          "description": "Configuration for the inspector.",
          "$ref": "GooglePrivacyDlpV2beta1InspectConfig"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CreateInspectOperationRequest"
    },
    "GooglePrivacyDlpV2beta1RedactContentResponse": {
      "description": "Results of redacting a list of items.",
      "type": "object",
      "properties": {
        "items": {
          "description": "The redacted content.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ContentItem"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1RedactContentResponse"
    },
    "GooglePrivacyDlpV2beta1InfoTypeStatistics": {
      "description": "Statistics regarding a specific InfoType.",
      "type": "object",
      "properties": {
        "infoType": {
          "description": "The type of finding this stat is for.",
          "$ref": "GooglePrivacyDlpV2beta1InfoType"
        },
        "count": {
          "description": "Number of findings for this info type.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InfoTypeStatistics"
    },
    "GooglePrivacyDlpV2beta1PropertyReference": {
      "properties": {
        "name": {
          "description": "The name of the property.\nIf name includes \".\"s, it may be interpreted as a property name path.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1PropertyReference",
      "description": "A reference to a property relative to the Datastore kind expressions.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1FieldTransformation": {
      "description": "The transformation to apply to the field.",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "GooglePrivacyDlpV2beta1RecordCondition",
          "description": "Only apply the transformation if the condition evaluates to true for the\ngiven `RecordCondition`. The conditions are allowed to reference fields\nthat are not used in the actual transformation. [optional]\n\nExample Use Cases:\n\n- Apply a different bucket transformation to an age column if the zip code\ncolumn for the same record is within a specific range.\n- Redact a field if the date of birth field is greater than 85."
        },
        "infoTypeTransformations": {
          "$ref": "GooglePrivacyDlpV2beta1InfoTypeTransformations",
          "description": "Treat the contents of the field as free text, and selectively\ntransform content that matches an `InfoType`."
        },
        "fields": {
          "description": "Input field(s) to apply the transformation to. [required]",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldId"
          }
        },
        "primitiveTransformation": {
          "$ref": "GooglePrivacyDlpV2beta1PrimitiveTransformation",
          "description": "Apply the transformation to the entire field."
        }
      },
      "id": "GooglePrivacyDlpV2beta1FieldTransformation"
    },
    "GooglePrivacyDlpV2beta1OutputStorageConfig": {
      "properties": {
        "table": {
          "description": "Store findings in a new table in the dataset.",
          "$ref": "GooglePrivacyDlpV2beta1BigQueryTable"
        },
        "storagePath": {
          "$ref": "GooglePrivacyDlpV2beta1CloudStoragePath",
          "description": "The path to a Google Cloud Storage location to store output.\nThe bucket must already exist and\nthe Google APIs service account for DLP must have write permission to\nwrite to the given bucket.\nResults are split over multiple csv files with each file name matching\nthe pattern \"[operation_id]_[count].csv\", for example\n`3094877188788974909_1.csv`. The `operation_id` matches the\nidentifier for the Operation, and the `count` is a counter used for\ntracking the number of files written.\n\nThe CSV file(s) contain the following columns regardless of storage type\nscanned:\n- id\n- info_type\n- likelihood\n- byte size of finding\n- quote\n- timestamp\n\nFor Cloud Storage the next columns are:\n\n- file_path\n- start_offset\n\nFor Cloud Datastore the next columns are:\n\n- project_id\n- namespace_id\n- path\n- column_name\n- offset\n\nFor BigQuery the next columns are:\n\n- row_number\n- project_id\n- dataset_id\n- table_id"
        }
      },
      "id": "GooglePrivacyDlpV2beta1OutputStorageConfig",
      "description": "Cloud repository for storing output.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1BucketingConfig": {
      "description": "Generalization function that buckets values based on ranges. The ranges and\nreplacement values are dynamically provided by the user for custom behavior,\nsuch as 1-30 -\u003e LOW 31-65 -\u003e MEDIUM 66-100 -\u003e HIGH\nThis can be used on\ndata of type: number, long, string, timestamp.\nIf the bound `Value` type differs from the type of data being transformed, we\nwill first attempt converting the type of the data to be transformed to match\nthe type of the bound before comparing.",
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Bucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1BucketingConfig"
    },
    "GooglePrivacyDlpV2beta1DeidentifyContentResponse": {
      "description": "Results of de-identifying a list of items.",
      "type": "object",
      "properties": {
        "summaries": {
          "description": "A review of the transformations that took place for each item.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1DeidentificationSummary"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ContentItem"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1DeidentifyContentResponse"
    },
    "GooglePrivacyDlpV2beta1KAnonymityEquivalenceClass": {
      "properties": {
        "equivalenceClassSize": {
          "description": "Size of the equivalence class, for example number of rows with the\nabove set of values.",
          "format": "int64",
          "type": "string"
        },
        "quasiIdsValues": {
          "description": "Set of values defining the equivalence class. One value per\nquasi-identifier column in the original KAnonymity metric message.\nThe order is always the same as the original request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1KAnonymityEquivalenceClass",
      "description": "The set of columns' values that share the same k-anonymity value.",
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "This field will contain an InspectOperationResult object for `inspect.operations.create` or a RiskAnalysisOperationResult object for `dataSource.analyze`.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name. The `name` should have the format of `inspect/operations/\u003cidentifier\u003e`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "This field will contain an InspectOperationMetadata object for `inspect.operations.create` or a RiskAnalysisOperationMetadata object for `dataSource.analyze`.  This will always be returned with the Operation.",
          "type": "object"
        }
      },
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1KmsWrappedCryptoKey": {
      "description": "Include to use an existing data crypto key wrapped by KMS.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
      "type": "object",
      "properties": {
        "wrappedKey": {
          "description": "The wrapped data crypto key. [required]",
          "format": "byte",
          "type": "string"
        },
        "cryptoKeyName": {
          "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1KmsWrappedCryptoKey"
    },
    "GooglePrivacyDlpV2beta1InspectOperationMetadata": {
      "properties": {
        "totalEstimatedBytes": {
          "description": "Estimate of the number of bytes to process.",
          "format": "int64",
          "type": "string"
        },
        "infoTypeStats": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InfoTypeStatistics"
          }
        },
        "requestInspectConfig": {
          "description": "The inspect config used to create the Operation.",
          "$ref": "GooglePrivacyDlpV2beta1InspectConfig"
        },
        "requestOutputConfig": {
          "$ref": "GooglePrivacyDlpV2beta1OutputStorageConfig",
          "description": "Optional location to store findings."
        },
        "createTime": {
          "description": "The time which this request was started.",
          "format": "google-datetime",
          "type": "string"
        },
        "requestStorageConfig": {
          "$ref": "GooglePrivacyDlpV2beta1StorageConfig",
          "description": "The storage config used to create the Operation."
        },
        "processedBytes": {
          "description": "Total size in bytes that were processed.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InspectOperationMetadata",
      "description": "Metadata returned within GetOperation for an inspect request.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1InfoType": {
      "properties": {
        "name": {
          "description": "Name of the information type.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InfoType",
      "description": "Type of information detected by the API.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1CharsToIgnore": {
      "properties": {
        "commonCharactersToIgnore": {
          "enumDescriptions": [
            "",
            "0-9",
            "A-Z",
            "a-z",
            "US Punctuation, one of !\"#$%&'()*+,-./:;\u003c=\u003e?@[\\]^_`{|}~",
            "Whitespace character, one of [ \\t\\n\\x0B\\f\\r]"
          ],
          "enum": [
            "CHARACTER_GROUP_UNSPECIFIED",
            "NUMERIC",
            "ALPHA_UPPER_CASE",
            "ALPHA_LOWER_CASE",
            "PUNCTUATION",
            "WHITESPACE"
          ],
          "type": "string"
        },
        "charactersToSkip": {
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CharsToIgnore",
      "description": "Characters to skip when doing deidentification of a value. These will be left\nalone and skipped.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1FixedSizeBucketingConfig": {
      "description": "Buckets values based on fixed size ranges. The\nBucketing transformation can provide all of this functionality,\nbut requires more configuration. This message is provided as a convenience to\nthe user for simple bucketing strategies.\nThe resulting value will be a hyphenated string of\nlower_bound-upper_bound.\nThis can be used on data of type: double, long.\nIf the bound Value type differs from the type of data\nbeing transformed, we will first attempt converting the type of the data to\nbe transformed to match the type of the bound before comparing.",
      "type": "object",
      "properties": {
        "upperBound": {
          "description": "Upper bound value of buckets. All values greater than upper_bound are\ngrouped together into a single bucket; for example if `upper_bound` = 89,\nthen all values greater than 89 are replaced with the value “89+”.\n[Required].",
          "$ref": "GooglePrivacyDlpV2beta1Value"
        },
        "lowerBound": {
          "description": "Lower bound value of buckets. All values less than `lower_bound` are\ngrouped together into a single bucket; for example if `lower_bound` = 10,\nthen all values less than 10 are replaced with the value “-10”. [Required].",
          "$ref": "GooglePrivacyDlpV2beta1Value"
        },
        "bucketSize": {
          "description": "Size of each bucket (except for minimum and maximum buckets). So if\n`lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the\nfollowing buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,\n60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works. [Required].",
          "format": "double",
          "type": "number"
        }
      },
      "id": "GooglePrivacyDlpV2beta1FixedSizeBucketingConfig"
    },
    "GooglePrivacyDlpV2beta1RiskAnalysisOperationResult": {
      "properties": {
        "categoricalStatsResult": {
          "$ref": "GooglePrivacyDlpV2beta1CategoricalStatsResult"
        },
        "numericalStatsResult": {
          "$ref": "GooglePrivacyDlpV2beta1NumericalStatsResult"
        },
        "kAnonymityResult": {
          "$ref": "GooglePrivacyDlpV2beta1KAnonymityResult"
        },
        "lDiversityResult": {
          "$ref": "GooglePrivacyDlpV2beta1LDiversityResult"
        }
      },
      "id": "GooglePrivacyDlpV2beta1RiskAnalysisOperationResult",
      "description": "Result of a risk analysis\n[`Operation`](/dlp/docs/reference/rest/v2beta1/inspect.operations)\nrequest.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1Conditions": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Condition"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1Conditions"
    },
    "GooglePrivacyDlpV2beta1CategoryDescription": {
      "properties": {
        "name": {
          "description": "Internal name of the category.",
          "type": "string"
        },
        "displayName": {
          "description": "Human readable form of the category name.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CategoryDescription",
      "description": "Info Type Category description.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1PrimitiveTransformation": {
      "properties": {
        "characterMaskConfig": {
          "$ref": "GooglePrivacyDlpV2beta1CharacterMaskConfig"
        },
        "redactConfig": {
          "$ref": "GooglePrivacyDlpV2beta1RedactConfig"
        },
        "bucketingConfig": {
          "$ref": "GooglePrivacyDlpV2beta1BucketingConfig"
        },
        "replaceWithInfoTypeConfig": {
          "$ref": "GooglePrivacyDlpV2beta1ReplaceWithInfoTypeConfig"
        },
        "cryptoHashConfig": {
          "$ref": "GooglePrivacyDlpV2beta1CryptoHashConfig"
        },
        "cryptoReplaceFfxFpeConfig": {
          "$ref": "GooglePrivacyDlpV2beta1CryptoReplaceFfxFpeConfig"
        },
        "replaceConfig": {
          "$ref": "GooglePrivacyDlpV2beta1ReplaceValueConfig"
        },
        "timePartConfig": {
          "$ref": "GooglePrivacyDlpV2beta1TimePartConfig"
        },
        "fixedSizeBucketingConfig": {
          "$ref": "GooglePrivacyDlpV2beta1FixedSizeBucketingConfig"
        }
      },
      "id": "GooglePrivacyDlpV2beta1PrimitiveTransformation",
      "description": "A rule for transforming a value.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1CategoricalStatsConfig": {
      "properties": {
        "field": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId",
          "description": "Field to compute categorical stats on. All column types are\nsupported except for arrays and structs. However, it may be more\ninformative to use NumericalStats when the field type is supported,\ndepending on the data."
        }
      },
      "id": "GooglePrivacyDlpV2beta1CategoricalStatsConfig",
      "description": "Compute numerical stats over an individual column, including\nnumber of distinct values and value count distribution.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1Finding": {
      "properties": {
        "infoType": {
          "description": "The specific type of info the string might be.",
          "$ref": "GooglePrivacyDlpV2beta1InfoType"
        },
        "createTime": {
          "description": "Timestamp when finding was detected.",
          "format": "google-datetime",
          "type": "string"
        },
        "quote": {
          "description": "The specific string that may be potentially sensitive info.",
          "type": "string"
        },
        "location": {
          "$ref": "GooglePrivacyDlpV2beta1Location",
          "description": "Location of the info found."
        },
        "likelihood": {
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Estimate of how likely it is that the info_type is correct.",
          "type": "string",
          "enumDescriptions": [
            "Default value; information with all likelihoods is included.",
            "Few matching elements.",
            "",
            "Some matching elements.",
            "",
            "Many matching elements."
          ]
        }
      },
      "id": "GooglePrivacyDlpV2beta1Finding",
      "description": "Container structure describing a single finding within a string or image.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1RiskAnalysisOperationMetadata": {
      "properties": {
        "requestedPrivacyMetric": {
          "$ref": "GooglePrivacyDlpV2beta1PrivacyMetric",
          "description": "Privacy metric to compute."
        },
        "createTime": {
          "description": "The time which this request was started.",
          "format": "google-datetime",
          "type": "string"
        },
        "requestedSourceTable": {
          "description": "Input dataset to compute metrics over.",
          "$ref": "GooglePrivacyDlpV2beta1BigQueryTable"
        }
      },
      "id": "GooglePrivacyDlpV2beta1RiskAnalysisOperationMetadata",
      "description": "Metadata returned within the\n[`riskAnalysis.operations.get`](/dlp/docs/reference/rest/v2beta1/riskAnalysis.operations/get)\nfor risk analysis.",
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        }
      },
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1Row": {
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1Row",
      "type": "object"
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1ListInspectFindingsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more results that match the\nrequest; this value should be passed in a new `ListInspectFindingsRequest`.",
          "type": "string"
        },
        "result": {
          "description": "The results.",
          "$ref": "GooglePrivacyDlpV2beta1InspectResult"
        }
      },
      "id": "GooglePrivacyDlpV2beta1ListInspectFindingsResponse",
      "description": "Response to the ListInspectFindings request.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1Expressions": {
      "description": "A collection of expressions",
      "type": "object",
      "properties": {
        "logicalOperator": {
          "enum": [
            "LOGICAL_OPERATOR_UNSPECIFIED",
            "AND"
          ],
          "description": "The operator to apply to the result of conditions. Default and currently\nonly supported value is `AND`.",
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "conditions": {
          "$ref": "GooglePrivacyDlpV2beta1Conditions"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Expressions"
    },
    "GooglePrivacyDlpV2beta1CloudStorageOptions": {
      "description": "Options defining a file or a set of files (path ending with *) within\na Google Cloud Storage bucket.",
      "type": "object",
      "properties": {
        "fileSet": {
          "$ref": "GooglePrivacyDlpV2beta1FileSet"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CloudStorageOptions"
    },
    "GooglePrivacyDlpV2beta1CloudStoragePath": {
      "properties": {
        "path": {
          "description": "The url, in the format of `gs://bucket/\u003cpath\u003e`.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CloudStoragePath",
      "description": "A location in Cloud Storage.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1KAnonymityHistogramBucket": {
      "properties": {
        "equivalenceClassSizeLowerBound": {
          "description": "Lower bound on the size of the equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "equivalenceClassSizeUpperBound": {
          "description": "Upper bound on the size of the equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketSize": {
          "description": "Total number of records in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValues": {
          "description": "Sample of equivalence classes in this bucket. The total number of\nclasses returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1KAnonymityEquivalenceClass"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1KAnonymityHistogramBucket",
      "description": "Histogram bucket of equivalence class sizes in the table.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1InspectOperationResult": {
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `inspect/results/{id}`.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InspectOperationResult",
      "description": "The operational data.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1LDiversityResult": {
      "description": "Result of the l-diversity computation.",
      "type": "object",
      "properties": {
        "sensitiveValueFrequencyHistogramBuckets": {
          "description": "Histogram of l-diversity equivalence class sensitive value frequencies.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1LDiversityHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1LDiversityResult"
    },
    "GooglePrivacyDlpV2beta1CategoricalStatsResult": {
      "properties": {
        "valueFrequencyHistogramBuckets": {
          "description": "Histogram of value frequencies in the column.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1CategoricalStatsHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1CategoricalStatsResult",
      "description": "Result of the categorical stats computation.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1Range": {
      "description": "Generic half-open interval [start, end)",
      "type": "object",
      "properties": {
        "start": {
          "description": "Index of the first character of the range (inclusive).",
          "format": "int64",
          "type": "string"
        },
        "end": {
          "description": "Index of the last character of the range (exclusive).",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Range"
    },
    "GoogleTypeTimeOfDay": {
      "properties": {
        "minutes": {
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "format": "int32",
          "type": "integer"
        },
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32",
          "type": "integer"
        },
        "nanos": {
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleTypeTimeOfDay",
      "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1DeidentifyConfig": {
      "description": "The configuration that controls how the data will change.",
      "type": "object",
      "properties": {
        "recordTransformations": {
          "$ref": "GooglePrivacyDlpV2beta1RecordTransformations",
          "description": "Treat the dataset as structured. Transformations can be applied to\nspecific locations within structured datasets, such as transforming\na column within a table."
        },
        "infoTypeTransformations": {
          "description": "Treat the dataset as free-form text and apply the same free text\ntransformation everywhere.",
          "$ref": "GooglePrivacyDlpV2beta1InfoTypeTransformations"
        }
      },
      "id": "GooglePrivacyDlpV2beta1DeidentifyConfig"
    },
    "GooglePrivacyDlpV2beta1LDiversityConfig": {
      "description": "l-diversity metric, used for analysis of reidentification risk.",
      "type": "object",
      "properties": {
        "sensitiveAttribute": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId",
          "description": "Sensitive field for computing the l-value."
        },
        "quasiIds": {
          "description": "Set of quasi-identifiers indicating how equivalence classes are\ndefined for the l-diversity computation. When multiple fields are\nspecified, they are considered a single composite key.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldId"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1LDiversityConfig"
    },
    "GooglePrivacyDlpV2beta1StorageConfig": {
      "properties": {
        "cloudStorageOptions": {
          "$ref": "GooglePrivacyDlpV2beta1CloudStorageOptions",
          "description": "Google Cloud Storage options specification."
        },
        "datastoreOptions": {
          "$ref": "GooglePrivacyDlpV2beta1DatastoreOptions",
          "description": "Google Cloud Datastore options specification."
        },
        "bigQueryOptions": {
          "$ref": "GooglePrivacyDlpV2beta1BigQueryOptions",
          "description": "BigQuery options specification."
        }
      },
      "id": "GooglePrivacyDlpV2beta1StorageConfig",
      "description": "Shared message indicating Cloud storage type.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1BigQueryOptions": {
      "description": "Options defining BigQuery table and row identifiers.",
      "type": "object",
      "properties": {
        "identifyingFields": {
          "description": "References to fields uniquely identifying rows within the table.\nNested fields in the format, like `person.birthdate.year`, are allowed.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldId"
          }
        },
        "tableReference": {
          "$ref": "GooglePrivacyDlpV2beta1BigQueryTable",
          "description": "Complete BigQuery table reference."
        }
      },
      "id": "GooglePrivacyDlpV2beta1BigQueryOptions"
    },
    "GooglePrivacyDlpV2beta1OperationConfig": {
      "description": "Additional configuration for inspect long running operations.",
      "type": "object",
      "properties": {
        "maxItemFindings": {
          "description": "Max number of findings per file, Datastore entity, or database row.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1OperationConfig"
    },
    "GooglePrivacyDlpV2beta1PrivacyMetric": {
      "description": "Privacy metric to compute for reidentification risk analysis.",
      "type": "object",
      "properties": {
        "numericalStatsConfig": {
          "$ref": "GooglePrivacyDlpV2beta1NumericalStatsConfig"
        },
        "kAnonymityConfig": {
          "$ref": "GooglePrivacyDlpV2beta1KAnonymityConfig"
        },
        "categoricalStatsConfig": {
          "$ref": "GooglePrivacyDlpV2beta1CategoricalStatsConfig"
        },
        "lDiversityConfig": {
          "$ref": "GooglePrivacyDlpV2beta1LDiversityConfig"
        }
      },
      "id": "GooglePrivacyDlpV2beta1PrivacyMetric"
    },
    "GooglePrivacyDlpV2beta1ReplaceConfig": {
      "type": "object",
      "properties": {
        "infoType": {
          "$ref": "GooglePrivacyDlpV2beta1InfoType",
          "description": "Type of information to replace. Only one ReplaceConfig per info_type\nshould be provided. If ReplaceConfig does not have an info_type, the DLP\nAPI matches it against all info_types that are found but not specified in\nanother ReplaceConfig."
        },
        "replaceWith": {
          "description": "Content replacing sensitive information of given type. Max 256 chars.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1ReplaceConfig"
    },
    "GooglePrivacyDlpV2beta1NumericalStatsConfig": {
      "properties": {
        "field": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId",
          "description": "Field to compute numerical stats on. Supported types are\ninteger, float, date, datetime, timestamp, time."
        }
      },
      "id": "GooglePrivacyDlpV2beta1NumericalStatsConfig",
      "description": "Compute numerical stats over an individual column, including\nmin, max, and quantiles.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1LDiversityEquivalenceClass": {
      "properties": {
        "equivalenceClassSize": {
          "description": "Size of the k-anonymity equivalence class.",
          "format": "int64",
          "type": "string"
        },
        "quasiIdsValues": {
          "description": "Quasi-identifier values defining the k-anonymity equivalence\nclass. The order is always the same as the original request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Value"
          }
        },
        "numDistinctSensitiveValues": {
          "description": "Number of distinct sensitive values in this equivalence class.",
          "format": "int64",
          "type": "string"
        },
        "topSensitiveValues": {
          "description": "Estimated frequencies of top sensitive values.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ValueFrequency"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1LDiversityEquivalenceClass",
      "description": "The set of columns' values that share the same l-diversity value.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1DeidentificationSummary": {
      "description": "High level summary of deidentification.",
      "type": "object",
      "properties": {
        "transformedBytes": {
          "description": "Total size in bytes that were transformed in some way.",
          "format": "int64",
          "type": "string"
        },
        "transformationSummaries": {
          "description": "Transformations applied to the dataset.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1TransformationSummary"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1DeidentificationSummary"
    },
    "GooglePrivacyDlpV2beta1RecordCondition": {
      "description": "A condition for determing whether a transformation should be applied to\na field.",
      "type": "object",
      "properties": {
        "expressions": {
          "$ref": "GooglePrivacyDlpV2beta1Expressions"
        }
      },
      "id": "GooglePrivacyDlpV2beta1RecordCondition"
    },
    "GooglePrivacyDlpV2beta1TimePartConfig": {
      "description": "For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a\nportion of the value.",
      "type": "object",
      "properties": {
        "partToExtract": {
          "enum": [
            "TIME_PART_UNSPECIFIED",
            "YEAR",
            "MONTH",
            "DAY_OF_MONTH",
            "DAY_OF_WEEK",
            "WEEK_OF_YEAR",
            "HOUR_OF_DAY"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "[000-9999]",
            "[1-12]",
            "[1-31]",
            "[1-7]",
            "[1-52]",
            "[0-24]"
          ]
        }
      },
      "id": "GooglePrivacyDlpV2beta1TimePartConfig"
    },
    "GooglePrivacyDlpV2beta1ListInfoTypesResponse": {
      "description": "Response to the ListInfoTypes request.",
      "type": "object",
      "properties": {
        "infoTypes": {
          "description": "Set of sensitive info types belonging to a category.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InfoTypeDescription"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1ListInfoTypesResponse"
    },
    "GooglePrivacyDlpV2beta1CloudStorageKey": {
      "description": "Record key for a finding in a Cloud Storage file.",
      "type": "object",
      "properties": {
        "filePath": {
          "description": "Path to the file.",
          "type": "string"
        },
        "startOffset": {
          "description": "Byte offset of the referenced data in the file.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CloudStorageKey"
    },
    "GooglePrivacyDlpV2beta1NumericalStatsResult": {
      "properties": {
        "minValue": {
          "$ref": "GooglePrivacyDlpV2beta1Value",
          "description": "Minimum value appearing in the column."
        },
        "maxValue": {
          "$ref": "GooglePrivacyDlpV2beta1Value",
          "description": "Maximum value appearing in the column."
        },
        "quantileValues": {
          "description": "List of 99 values that partition the set of field values into 100 equal\nsized buckets.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1NumericalStatsResult",
      "description": "Result of the numerical stats computation.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1DatastoreOptions": {
      "properties": {
        "kind": {
          "$ref": "GooglePrivacyDlpV2beta1KindExpression",
          "description": "The kind to process."
        },
        "projection": {
          "description": "Properties to scan. If none are specified, all properties will be scanned\nby default.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Projection"
          }
        },
        "partitionId": {
          "$ref": "GooglePrivacyDlpV2beta1PartitionId",
          "description": "A partition ID identifies a grouping of entities. The grouping is always\nby project and namespace, however the namespace ID may be empty."
        }
      },
      "id": "GooglePrivacyDlpV2beta1DatastoreOptions",
      "description": "Options defining a data set within Google Cloud Datastore.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1RecordTransformations": {
      "properties": {
        "recordSuppressions": {
          "description": "Configuration defining which records get suppressed entirely. Records that\nmatch any suppression rule are omitted from the output [optional].",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1RecordSuppression"
          }
        },
        "fieldTransformations": {
          "description": "Transform the record by applying various field transformations.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldTransformation"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1RecordTransformations",
      "description": "A type of transformation that is applied over structured data such as a\ntable.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1InspectConfig": {
      "description": "Configuration description of the scanning process.\nWhen used with redactContent only info_types and min_likelihood are currently\nused.",
      "type": "object",
      "properties": {
        "excludeTypes": {
          "description": "When true, excludes type information of the findings.",
          "type": "boolean"
        },
        "minLikelihood": {
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Only returns findings equal or above this threshold.",
          "type": "string",
          "enumDescriptions": [
            "Default value; information with all likelihoods is included.",
            "Few matching elements.",
            "",
            "Some matching elements.",
            "",
            "Many matching elements."
          ]
        },
        "infoTypeLimits": {
          "description": "Configuration of findings limit given for specified info types.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InfoTypeLimit"
          }
        },
        "maxFindings": {
          "description": "Limits the number of findings per content item or long running operation.",
          "format": "int32",
          "type": "integer"
        },
        "infoTypes": {
          "description": "Restricts what info_types to look for. The values must correspond to\nInfoType values returned by ListInfoTypes or found in documentation.\nEmpty info_types runs all enabled detectors.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InfoType"
          }
        },
        "includeQuote": {
          "description": "When true, a contextual quote from the data that triggered a finding is\nincluded in the response; see Finding.quote.",
          "type": "boolean"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InspectConfig"
    },
    "GooglePrivacyDlpV2beta1Projection": {
      "description": "A representation of a Datastore property in a projection.",
      "type": "object",
      "properties": {
        "property": {
          "description": "The property to project.",
          "$ref": "GooglePrivacyDlpV2beta1PropertyReference"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Projection"
    },
    "GooglePrivacyDlpV2beta1RedactConfig": {
      "description": "Redact a given value. For example, if used with an `InfoTypeTransformation`\ntransforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the\noutput would be 'My phone number is '.",
      "type": "object",
      "properties": {},
      "id": "GooglePrivacyDlpV2beta1RedactConfig"
    },
    "GooglePrivacyDlpV2beta1Key": {
      "properties": {
        "path": {
          "description": "The entity path.\nAn entity path consists of one or more elements composed of a kind and a\nstring or numerical identifier, which identify entities. The first\nelement identifies a _root entity_, the second element identifies\na _child_ of the root entity, the third element identifies a child of the\nsecond entity, and so forth. The entities identified by all prefixes of\nthe path are called the element's _ancestors_.\n\nA path can never be empty, and a path can have at most 100 elements.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1PathElement"
          }
        },
        "partitionId": {
          "$ref": "GooglePrivacyDlpV2beta1PartitionId",
          "description": "Entities are partitioned into subsets, currently identified by a project\nID and namespace ID.\nQueries are scoped to a single partition."
        }
      },
      "id": "GooglePrivacyDlpV2beta1Key",
      "description": "A unique identifier for a Datastore entity.\nIf a key's partition ID or any of its path kinds or names are\nreserved/read-only, the key is reserved/read-only.\nA reserved/read-only key is forbidden in certain documented contexts.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1CryptoHashConfig": {
      "properties": {
        "cryptoKey": {
          "description": "The key used by the hash function.",
          "$ref": "GooglePrivacyDlpV2beta1CryptoKey"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CryptoHashConfig",
      "description": "Pseudonymization method that generates surrogates via cryptographic hashing.\nUses SHA-256.\nOutputs a 32 byte digest as an uppercase hex string\n(for example, 41D1567F7F99F1DC2A5FAB886DEE5BEE).\nCurrently, only string and integer values can be hashed.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1InspectContentRequest": {
      "description": "Request to search for potentially sensitive info in a list of items.",
      "type": "object",
      "properties": {
        "inspectConfig": {
          "$ref": "GooglePrivacyDlpV2beta1InspectConfig",
          "description": "Configuration for the inspector."
        },
        "items": {
          "description": "The list of items to inspect. Items in a single request are\nconsidered \"related\" unless inspect_config.independent_inputs is true.\nUp to 100 are allowed per request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ContentItem"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1InspectContentRequest"
    },
    "GoogleTypeDate": {
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year/month where the day is not significant.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "description": "Month of year. Must be from 1 to 12.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleTypeDate",
      "description": "Represents a whole calendar date, e.g. date of birth. The time of day and\ntime zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. The day may be 0 to\nrepresent a year and month where the day is not significant, e.g. credit card\nexpiration date. The year may be 0 to represent a month and day independent\nof year, e.g. anniversary date. Related types are google.type.TimeOfDay\nand `google.protobuf.Timestamp`.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1ReplaceWithInfoTypeConfig": {
      "description": "Replace each matching finding with the name of the info_type.",
      "type": "object",
      "properties": {},
      "id": "GooglePrivacyDlpV2beta1ReplaceWithInfoTypeConfig"
    },
    "GooglePrivacyDlpV2beta1ImageRedactionConfig": {
      "properties": {
        "redactAllText": {
          "description": "If true, all text found in the image, regardless whether it matches an\ninfo_type, is redacted.",
          "type": "boolean"
        },
        "infoType": {
          "$ref": "GooglePrivacyDlpV2beta1InfoType",
          "description": "Only one per info_type should be provided per request. If not\nspecified, and redact_all_text is false, the DLP API will redact all\ntext that it matches against all info_types that are found, but not\nspecified in another ImageRedactionConfig."
        },
        "redactionColor": {
          "description": "The color to use when redacting content from an image. If not specified,\nthe default is black.",
          "$ref": "GooglePrivacyDlpV2beta1Color"
        }
      },
      "id": "GooglePrivacyDlpV2beta1ImageRedactionConfig",
      "description": "Configuration for determing how redaction of images should occur.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1Location": {
      "description": "Specifies the location of a finding within its source item.",
      "type": "object",
      "properties": {
        "tableLocation": {
          "$ref": "GooglePrivacyDlpV2beta1TableLocation",
          "description": "Location within a `ContentItem.Table`."
        },
        "codepointRange": {
          "description": "Character offsets within a content item, included when content type\nis a text. Default charset assumed to be UTF-8.",
          "$ref": "GooglePrivacyDlpV2beta1Range"
        },
        "fieldId": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId",
          "description": "Field id of the field containing the finding."
        },
        "imageBoxes": {
          "description": "Location within an image's pixels.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ImageLocation"
          }
        },
        "byteRange": {
          "description": "Zero-based byte offsets within a content item.",
          "$ref": "GooglePrivacyDlpV2beta1Range"
        },
        "recordKey": {
          "description": "Key of the finding.",
          "$ref": "GooglePrivacyDlpV2beta1RecordKey"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Location"
    },
    "GooglePrivacyDlpV2beta1RecordSuppression": {
      "properties": {
        "condition": {
          "$ref": "GooglePrivacyDlpV2beta1RecordCondition"
        }
      },
      "id": "GooglePrivacyDlpV2beta1RecordSuppression",
      "description": "Configuration to suppress records whose suppression conditions evaluate to\ntrue.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1UnwrappedCryptoKey": {
      "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The AES 128/192/256 bit key. [required]",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1UnwrappedCryptoKey"
    },
    "GooglePrivacyDlpV2beta1EntityId": {
      "properties": {
        "field": {
          "description": "Composite key indicating which field contains the entity identifier.",
          "$ref": "GooglePrivacyDlpV2beta1FieldId"
        }
      },
      "id": "GooglePrivacyDlpV2beta1EntityId",
      "description": "An entity in a dataset is a field or set of fields that correspond to a\nsingle person. For example, in medical records the `EntityId` might be\na patient identifier, or for financial records it might be an account\nidentifier. This message is used when generalizations or analysis must be\nconsistent across multiple rows pertaining to the same entity.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1InfoTypeDescription": {
      "description": "Description of the information type (infoType).",
      "type": "object",
      "properties": {
        "name": {
          "description": "Internal name of the infoType.",
          "type": "string"
        },
        "displayName": {
          "description": "Human readable form of the infoType name.",
          "type": "string"
        },
        "categories": {
          "description": "List of categories this infoType belongs to.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1CategoryDescription"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1InfoTypeDescription"
    },
    "GoogleRpcStatus": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object"
    },
    "GooglePrivacyDlpV2beta1PathElement": {
      "description": "A (kind, ID/name) pair used to construct a key path.\n\nIf either name or ID is set, the element is complete.\nIf neither is set, the element is incomplete.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the entity.\nA name matching regex `__.*__` is reserved/read-only.\nA name must not be more than 1500 bytes when UTF-8 encoded.\nCannot be `\"\"`.",
          "type": "string"
        },
        "kind": {
          "description": "The kind of the entity.\nA kind matching regex `__.*__` is reserved/read-only.\nA kind must not contain more than 1500 bytes when UTF-8 encoded.\nCannot be `\"\"`.",
          "type": "string"
        },
        "id": {
          "description": "The auto-allocated ID of the entity.\nNever equal to zero. Values less than zero are discouraged and may not\nbe supported in the future.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1PathElement"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "canonicalName": "DLP",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://dlp.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "dlp",
  "batchPath": "batch",
  "title": "DLP API",
  "ownerName": "Google",
  "resources": {
    "riskAnalysis": {
      "resources": {
        "operations": {
          "methods": {
            "cancel": {
              "id": "dlp.riskAnalysis.operations.cancel",
              "path": "v2beta1/{+name}:cancel",
              "description": "Cancels an operation. Use the `inspect.operations.get` to check whether the cancellation succeeded or the operation completed despite cancellation.",
              "request": {
                "$ref": "GoogleLongrunningCancelOperationRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^riskAnalysis/operations/[^/]+$",
                  "location": "path",
                  "description": "The name of the operation resource to be cancelled.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v2beta1/riskAnalysis/operations/{operationsId}:cancel"
            },
            "delete": {
              "description": "This method is not supported and the server returns `UNIMPLEMENTED`.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the operation resource to be deleted.",
                  "required": true,
                  "type": "string",
                  "pattern": "^riskAnalysis/operations/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2beta1/riskAnalysis/operations/{operationsId}",
              "path": "v2beta1/{+name}",
              "id": "dlp.riskAnalysis.operations.delete"
            },
            "list": {
              "description": "Fetches the list of long running operations.",
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "Filters by `done`. That is, `done=true` or `done=false`.",
                  "type": "string"
                },
                "name": {
                  "pattern": "^riskAnalysis/operations$",
                  "location": "path",
                  "description": "The name of the operation's parent resource.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The list page size. The maximum allowed value is 256 and the default is 100.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "flatPath": "v2beta1/riskAnalysis/operations",
              "path": "v2beta1/{+name}",
              "id": "dlp.riskAnalysis.operations.list"
            },
            "get": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^riskAnalysis/operations/[^/]+$",
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2beta1/riskAnalysis/operations/{operationsId}",
              "path": "v2beta1/{+name}",
              "id": "dlp.riskAnalysis.operations.get",
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
            }
          }
        }
      }
    },
    "dataSource": {
      "methods": {
        "analyze": {
          "description": "Schedules a job to compute risk analysis metrics over content in a Google\nCloud Platform repository.",
          "request": {
            "$ref": "GooglePrivacyDlpV2beta1AnalyzeDataSourceRiskRequest"
          },
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {},
          "flatPath": "v2beta1/dataSource:analyze",
          "path": "v2beta1/dataSource:analyze",
          "id": "dlp.dataSource.analyze"
        }
      }
    },
    "inspect": {
      "resources": {
        "results": {
          "resources": {
            "findings": {
              "methods": {
                "list": {
                  "path": "v2beta1/{+name}/findings",
                  "id": "dlp.inspect.results.findings.list",
                  "description": "Returns list of results for given inspect operation result set id.",
                  "response": {
                    "$ref": "GooglePrivacyDlpV2beta1ListInspectFindingsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "Restricts findings to items that match. Supports info_type and likelihood.\n\nExamples:\n\n- info_type=EMAIL_ADDRESS\n- info_type=PHONE_NUMBER,EMAIL_ADDRESS\n- likelihood=VERY_LIKELY\n- likelihood=VERY_LIKELY,LIKELY\n- info_type=EMAIL_ADDRESS,likelihood=VERY_LIKELY,LIKELY",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^inspect/results/[^/]+$",
                      "location": "path",
                      "description": "Identifier of the results set returned as metadata of\nthe longrunning operation created by a call to InspectDataSource.\nShould be in the format of `inspect/results/{id}`.",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListInspectFindingsResponse`; indicates\nthat this is a continuation of a prior `ListInspectFindings` call, and that\nthe system should return the next page of data.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of results to return.\nIf 0, the implementation selects a reasonable value.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v2beta1/inspect/results/{resultsId}/findings"
                }
              }
            }
          }
        },
        "operations": {
          "methods": {
            "cancel": {
              "request": {
                "$ref": "GoogleLongrunningCancelOperationRequest"
              },
              "description": "Cancels an operation. Use the `inspect.operations.get` to check whether the cancellation succeeded or the operation completed despite cancellation.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "pattern": "^inspect/operations/[^/]+$",
                  "location": "path",
                  "description": "The name of the operation resource to be cancelled.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2beta1/inspect/operations/{operationsId}:cancel",
              "path": "v2beta1/{+name}:cancel",
              "id": "dlp.inspect.operations.cancel"
            },
            "delete": {
              "path": "v2beta1/{+name}",
              "id": "dlp.inspect.operations.delete",
              "description": "This method is not supported and the server returns `UNIMPLEMENTED`.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The name of the operation resource to be deleted.",
                  "required": true,
                  "type": "string",
                  "pattern": "^inspect/operations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2beta1/inspect/operations/{operationsId}"
            },
            "list": {
              "id": "dlp.inspect.operations.list",
              "path": "v2beta1/{+name}",
              "description": "Fetches the list of long running operations.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "parameters": {
                "name": {
                  "description": "The name of the operation's parent resource.",
                  "required": true,
                  "type": "string",
                  "pattern": "^inspect/operations$",
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The list page size. The maximum allowed value is 256 and the default is 100.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "filter": {
                  "description": "Filters by `done`. That is, `done=true` or `done=false`.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2beta1/inspect/operations"
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^inspect/operations/[^/]+$",
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2beta1/inspect/operations/{operationsId}",
              "id": "dlp.inspect.operations.get",
              "path": "v2beta1/{+name}",
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
            },
            "create": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {},
              "flatPath": "v2beta1/inspect/operations",
              "path": "v2beta1/inspect/operations",
              "id": "dlp.inspect.operations.create",
              "description": "Schedules a job scanning content in a Google Cloud Platform data\nrepository.",
              "request": {
                "$ref": "GooglePrivacyDlpV2beta1CreateInspectOperationRequest"
              }
            }
          }
        }
      }
    },
    "content": {
      "methods": {
        "inspect": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "GooglePrivacyDlpV2beta1InspectContentResponse"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2beta1/content:inspect",
          "id": "dlp.content.inspect",
          "path": "v2beta1/content:inspect",
          "request": {
            "$ref": "GooglePrivacyDlpV2beta1InspectContentRequest"
          },
          "description": "Finds potentially sensitive info in a list of strings.\nThis method has limits on input size, processing time, and output size."
        },
        "redact": {
          "request": {
            "$ref": "GooglePrivacyDlpV2beta1RedactContentRequest"
          },
          "description": "Redacts potentially sensitive info from a list of strings.\nThis method has limits on input size, processing time, and output size.",
          "response": {
            "$ref": "GooglePrivacyDlpV2beta1RedactContentResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2beta1/content:redact",
          "path": "v2beta1/content:redact",
          "id": "dlp.content.redact"
        },
        "deidentify": {
          "path": "v2beta1/content:deidentify",
          "id": "dlp.content.deidentify",
          "request": {
            "$ref": "GooglePrivacyDlpV2beta1DeidentifyContentRequest"
          },
          "description": "De-identifies potentially sensitive info from a list of strings.\nThis method has limits on input size and output size.",
          "response": {
            "$ref": "GooglePrivacyDlpV2beta1DeidentifyContentResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2beta1/content:deidentify"
        }
      }
    },
    "rootCategories": {
      "methods": {
        "list": {
          "description": "Returns the list of root categories of sensitive information.",
          "response": {
            "$ref": "GooglePrivacyDlpV2beta1ListRootCategoriesResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "languageCode": {
              "location": "query",
              "description": "Optional language code for localized friendly category names.\nIf omitted or if localized strings are not available,\nen-US strings will be returned.",
              "type": "string"
            }
          },
          "flatPath": "v2beta1/rootCategories",
          "path": "v2beta1/rootCategories",
          "id": "dlp.rootCategories.list"
        }
      },
      "resources": {
        "infoTypes": {
          "methods": {
            "list": {
              "id": "dlp.rootCategories.infoTypes.list",
              "path": "v2beta1/rootCategories/{+category}/infoTypes",
              "description": "Returns sensitive information types for given category.",
              "httpMethod": "GET",
              "response": {
                "$ref": "GooglePrivacyDlpV2beta1ListInfoTypesResponse"
              },
              "parameterOrder": [
                "category"
              ],
              "parameters": {
                "category": {
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "Category name as returned by ListRootCategories.",
                  "required": true,
                  "type": "string"
                },
                "languageCode": {
                  "location": "query",
                  "description": "Optional BCP-47 language code for localized info type friendly\nnames. If omitted, or if localized strings are not available,\nen-US strings will be returned.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2beta1/rootCategories/{rootCategoriesId}/infoTypes"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "pp": {
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "bearer_token": {
      "location": "query",
      "description": "OAuth bearer token.",
      "type": "string"
    }
  },
  "version": "v2beta1",
  "baseUrl": "https://dlp.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "The Google Data Loss Prevention API provides methods for detection of privacy-sensitive fragments in text, images, and Google Cloud Platform storage repositories.",
  "servicePath": ""
}
