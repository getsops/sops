{
  "resources": {
    "subscriptions": {
      "methods": {
        "modifyAckDeadline": {
          "id": "pubsub.subscriptions.modifyAckDeadline",
          "path": "v1beta1a/subscriptions/modifyAckDeadline",
          "request": {
            "$ref": "ModifyAckDeadlineRequest"
          },
          "description": "Modifies the Ack deadline for a message received from a pull request.",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {},
          "flatPath": "v1beta1a/subscriptions/modifyAckDeadline"
        },
        "acknowledge": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {},
          "flatPath": "v1beta1a/subscriptions/acknowledge",
          "id": "pubsub.subscriptions.acknowledge",
          "path": "v1beta1a/subscriptions/acknowledge",
          "request": {
            "$ref": "AcknowledgeRequest"
          },
          "description": "Acknowledges a particular received message: the Pub/Sub system can remove\nthe given message from the subscription. Acknowledging a message whose\nAck deadline has expired may succeed, but the message could have been\nalready redelivered. Acknowledging a message more than once will not\nresult in an error. This is only used for messages received via pull."
        },
        "pullBatch": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "PullBatchResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {},
          "flatPath": "v1beta1a/subscriptions/pullBatch",
          "path": "v1beta1a/subscriptions/pullBatch",
          "id": "pubsub.subscriptions.pullBatch",
          "request": {
            "$ref": "PullBatchRequest"
          },
          "description": "Pulls messages from the server. Returns an empty list if there are no\nmessages available in the backlog. The system is free to return UNAVAILABLE\nif there are too many pull requests outstanding for the given subscription."
        },
        "get": {
          "response": {
            "$ref": "Subscription"
          },
          "parameterOrder": [
            "subscription"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {
            "subscription": {
              "description": "The name of the subscription to get.",
              "type": "string",
              "required": true,
              "pattern": "^.+$",
              "location": "path"
            }
          },
          "flatPath": "v1beta1a/subscriptions/{subscriptionsId}",
          "id": "pubsub.subscriptions.get",
          "path": "v1beta1a/subscriptions/{+subscription}",
          "description": "Gets the configuration details of a subscription."
        },
        "modifyPushConfig": {
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "flatPath": "v1beta1a/subscriptions/modifyPushConfig",
          "path": "v1beta1a/subscriptions/modifyPushConfig",
          "id": "pubsub.subscriptions.modifyPushConfig",
          "description": "Modifies the \u003ccode\u003ePushConfig\u003c/code\u003e for a specified subscription.\nThis method can be used to suspend the flow of messages to an endpoint\nby clearing the \u003ccode\u003ePushConfig\u003c/code\u003e field in the request. Messages\nwill be accumulated for delivery even if no push configuration is\ndefined or while the configuration is modified.",
          "request": {
            "$ref": "ModifyPushConfigRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          }
        },
        "delete": {
          "flatPath": "v1beta1a/subscriptions/{subscriptionsId}",
          "path": "v1beta1a/subscriptions/{+subscription}",
          "id": "pubsub.subscriptions.delete",
          "description": "Deletes an existing subscription. All pending messages in the subscription\nare immediately dropped. Calls to Pull after deletion will return\nNOT_FOUND.",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "subscription"
          ],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {
            "subscription": {
              "description": "The subscription to delete.",
              "type": "string",
              "required": true,
              "pattern": "^.+$",
              "location": "path"
            }
          }
        },
        "pull": {
          "request": {
            "$ref": "PullRequest"
          },
          "description": "Pulls a single message from the server.\nIf return_immediately is true, and no messages are available in the\nsubscription, this method returns FAILED_PRECONDITION. The system is free\nto return an UNAVAILABLE error if no messages are available in a\nreasonable amount of time (to reduce system load).",
          "response": {
            "$ref": "PullResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {},
          "flatPath": "v1beta1a/subscriptions/pull",
          "id": "pubsub.subscriptions.pull",
          "path": "v1beta1a/subscriptions/pull"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "The value obtained in the last \u003ccode\u003eListSubscriptionsResponse\u003c/code\u003e\nfor continuation.",
              "type": "string"
            },
            "maxResults": {
              "format": "int32",
              "description": "Maximum number of subscriptions to return.",
              "type": "integer",
              "location": "query"
            },
            "query": {
              "description": "A valid label query expression.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "v1beta1a/subscriptions",
          "id": "pubsub.subscriptions.list",
          "path": "v1beta1a/subscriptions",
          "description": "Lists matching subscriptions.",
          "response": {
            "$ref": "ListSubscriptionsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET"
        },
        "create": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "Subscription"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "flatPath": "v1beta1a/subscriptions",
          "path": "v1beta1a/subscriptions",
          "id": "pubsub.subscriptions.create",
          "description": "Creates a subscription on a given topic for a given subscriber.\nIf the subscription already exists, returns ALREADY_EXISTS.\nIf the corresponding topic doesn't exist, returns NOT_FOUND.\n\nIf the name is not provided in the request, the server will assign a random\nname for this subscription on the same project as the topic.",
          "request": {
            "$ref": "Subscription"
          }
        }
      }
    },
    "topics": {
      "methods": {
        "delete": {
          "httpMethod": "DELETE",
          "parameterOrder": [
            "topic"
          ],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {
            "topic": {
              "pattern": "^.+$",
              "location": "path",
              "description": "Name of the topic to delete.",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "v1beta1a/topics/{topicsId}",
          "path": "v1beta1a/topics/{+topic}",
          "id": "pubsub.topics.delete",
          "description": "Deletes the topic with the given name. Returns NOT_FOUND if the topic does\nnot exist. After a topic is deleted, a new topic may be created with the\nsame name."
        },
        "publishBatch": {
          "response": {
            "$ref": "PublishBatchResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {},
          "flatPath": "v1beta1a/topics/publishBatch",
          "id": "pubsub.topics.publishBatch",
          "path": "v1beta1a/topics/publishBatch",
          "request": {
            "$ref": "PublishBatchRequest"
          },
          "description": "Adds one or more messages to the topic. Returns NOT_FOUND if the topic does\nnot exist."
        },
        "list": {
          "response": {
            "$ref": "ListTopicsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "maxResults": {
              "location": "query",
              "format": "int32",
              "description": "Maximum number of topics to return.",
              "type": "integer"
            },
            "query": {
              "location": "query",
              "description": "A valid label query expression.",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "The value obtained in the last \u003ccode\u003eListTopicsResponse\u003c/code\u003e\nfor continuation.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "flatPath": "v1beta1a/topics",
          "id": "pubsub.topics.list",
          "path": "v1beta1a/topics",
          "description": "Lists matching topics."
        },
        "create": {
          "response": {
            "$ref": "Topic"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {},
          "flatPath": "v1beta1a/topics",
          "id": "pubsub.topics.create",
          "path": "v1beta1a/topics",
          "request": {
            "$ref": "Topic"
          },
          "description": "Creates the given topic with the given name."
        },
        "get": {
          "parameters": {
            "topic": {
              "description": "The name of the topic to get.",
              "type": "string",
              "required": true,
              "pattern": "^.+$",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "flatPath": "v1beta1a/topics/{topicsId}",
          "id": "pubsub.topics.get",
          "path": "v1beta1a/topics/{+topic}",
          "description": "Gets the configuration of a topic. Since the topic only has the name\nattribute, this method is only useful to check the existence of a topic.\nIf other attributes are added in the future, they will be returned here.",
          "response": {
            "$ref": "Topic"
          },
          "parameterOrder": [
            "topic"
          ],
          "httpMethod": "GET"
        },
        "publish": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/pubsub"
          ],
          "parameters": {},
          "flatPath": "v1beta1a/topics/publish",
          "id": "pubsub.topics.publish",
          "path": "v1beta1a/topics/publish",
          "request": {
            "$ref": "PublishRequest"
          },
          "description": "Adds a message to the topic.  Returns NOT_FOUND if the topic does not\nexist."
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "pp": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Pretty-print response."
    },
    "bearer_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth bearer token."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    }
  },
  "schemas": {
    "ModifyAckDeadlineRequest": {
      "description": "Request for the ModifyAckDeadline method.",
      "type": "object",
      "properties": {
        "ackDeadlineSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The new ack deadline with respect to the time this request was sent to the\nPub/Sub system. Must be \u003e= 0. For example, if the value is 10, the new ack\ndeadline will expire 10 seconds after the ModifyAckDeadline call was made.\nSpecifying zero may immediately make the message available for another pull\nrequest."
        },
        "ackIds": {
          "description": "List of acknowledgment IDs. Either this field or ack_id\nshould be populated, not both.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subscription": {
          "description": "Next Index: 5\nThe name of the subscription from which messages are being pulled.",
          "type": "string"
        },
        "ackId": {
          "description": "The acknowledgment ID. Either this or ack_ids must be populated,\nnot both.",
          "type": "string"
        }
      },
      "id": "ModifyAckDeadlineRequest"
    },
    "PullBatchRequest": {
      "type": "object",
      "properties": {
        "maxEvents": {
          "format": "int32",
          "description": "The maximum number of PubsubEvents returned for this request. The Pub/Sub\nsystem may return fewer than the number of events specified.",
          "type": "integer"
        },
        "subscription": {
          "description": "The subscription from which messages should be pulled.",
          "type": "string"
        },
        "returnImmediately": {
          "description": "If this is specified as true the system will respond immediately even if\nit is not able to return a message in the Pull response. Otherwise the\nsystem is allowed to wait until at least one message is available rather\nthan returning no messages. The client may cancel the request if it does\nnot wish to wait any longer for the response.",
          "type": "boolean"
        }
      },
      "id": "PullBatchRequest",
      "description": "Request for the PullBatch method."
    },
    "ModifyPushConfigRequest": {
      "description": "Request for the ModifyPushConfig method.",
      "type": "object",
      "properties": {
        "pushConfig": {
          "$ref": "PushConfig",
          "description": "An empty \u003ccode\u003epush_config\u003c/code\u003e indicates that the Pub/Sub system should\npause pushing messages from the given subscription."
        },
        "subscription": {
          "type": "string",
          "description": "The name of the subscription."
        }
      },
      "id": "ModifyPushConfigRequest"
    },
    "PubsubMessage": {
      "description": "A message data and its labels.",
      "type": "object",
      "properties": {
        "messageId": {
          "description": "ID of this message assigned by the server at publication time. Guaranteed\nto be unique within the topic. This value may be read by a subscriber\nthat receives a PubsubMessage via a Pull call or a push delivery. It must\nnot be populated by a publisher in a Publish call.",
          "type": "string"
        },
        "publishTime": {
          "format": "int64",
          "description": "The time at which the message was published.\nThe time is milliseconds since the UNIX epoch.",
          "type": "string"
        },
        "label": {
          "description": "Optional list of labels for this message. Keys in this collection must\nbe unique.",
          "items": {
            "$ref": "Label"
          },
          "type": "array"
        },
        "data": {
          "format": "byte",
          "description": "The message payload.",
          "type": "string"
        }
      },
      "id": "PubsubMessage"
    },
    "PublishBatchRequest": {
      "description": "Request for the PublishBatch method.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "The messages in the request will be published on this topic.",
          "type": "string"
        },
        "messages": {
          "description": "The messages to publish.",
          "items": {
            "$ref": "PubsubMessage"
          },
          "type": "array"
        }
      },
      "id": "PublishBatchRequest"
    },
    "ListTopicsResponse": {
      "id": "ListTopicsResponse",
      "description": "Response for the ListTopics method.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "The resulting topics.",
          "items": {
            "$ref": "Topic"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "If not empty, indicates that there are more topics that match the request,\nand this value should be passed to the next \u003ccode\u003eListTopicsRequest\u003c/code\u003e\nto continue.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "description": "An empty message that you can re-use to avoid defining duplicated empty\nmessages in your project. A typical example is to use it as argument or the\nreturn value of a service API. For instance:\n\n  service Foo {\n    rpc Bar (proto2.Empty) returns (proto2.Empty) { };\n  };\n\nBEGIN GOOGLE-INTERNAL\nThe difference between this one and net/rpc/empty-message.proto is that\n1) The generated message here is in proto2 C++ API.\n2) The proto2.Empty has minimum dependencies\n   (no message_set or net/rpc dependencies)\nEND GOOGLE-INTERNAL",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "PullBatchResponse": {
      "description": "Response for the PullBatch method.",
      "type": "object",
      "properties": {
        "pullResponses": {
          "description": "Received Pub/Sub messages or status events. The Pub/Sub system will return\nzero messages if there are no more messages available in the backlog. The\nPub/Sub system may return fewer than the max_events requested even if\nthere are more messages available in the backlog.",
          "items": {
            "$ref": "PullResponse"
          },
          "type": "array"
        }
      },
      "id": "PullBatchResponse"
    },
    "AcknowledgeRequest": {
      "description": "Request for the Acknowledge method.",
      "type": "object",
      "properties": {
        "ackId": {
          "description": "The acknowledgment ID for the message being acknowledged. This was\nreturned by the Pub/Sub system in the Pull response.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subscription": {
          "description": "The subscription whose message is being acknowledged.",
          "type": "string"
        }
      },
      "id": "AcknowledgeRequest"
    },
    "PullResponse": {
      "description": "Either a \u003ccode\u003ePubsubMessage\u003c/code\u003e or a truncation event. One of these two\nmust be populated.",
      "type": "object",
      "properties": {
        "ackId": {
          "description": "This ID must be used to acknowledge the received event or message.",
          "type": "string"
        },
        "pubsubEvent": {
          "$ref": "PubsubEvent",
          "description": "A pubsub message or truncation event."
        }
      },
      "id": "PullResponse"
    },
    "PushConfig": {
      "description": "Configuration for a push delivery endpoint.",
      "type": "object",
      "properties": {
        "pushEndpoint": {
          "description": "A URL locating the endpoint to which messages should be pushed.\nFor example, a Webhook endpoint might use \"https://example.com/push\".",
          "type": "string"
        }
      },
      "id": "PushConfig"
    },
    "PullRequest": {
      "description": "Request for the Pull method.",
      "type": "object",
      "properties": {
        "subscription": {
          "description": "The subscription from which a message should be pulled.",
          "type": "string"
        },
        "returnImmediately": {
          "description": "If this is specified as true the system will respond immediately even if\nit is not able to return a message in the Pull response. Otherwise the\nsystem is allowed to wait until at least one message is available rather\nthan returning FAILED_PRECONDITION. The client may cancel the request if\nit does not wish to wait any longer for the response.",
          "type": "boolean"
        }
      },
      "id": "PullRequest"
    },
    "PubsubEvent": {
      "description": "An event indicating a received message or truncation event.",
      "type": "object",
      "properties": {
        "deleted": {
          "description": "Indicates that this subscription has been deleted. (Note that pull\nsubscribers will always receive NOT_FOUND in response in their pull\nrequest on the subscription, rather than seeing this boolean.)",
          "type": "boolean"
        },
        "truncated": {
          "description": "Indicates that this subscription has been truncated.",
          "type": "boolean"
        },
        "message": {
          "$ref": "PubsubMessage",
          "description": "A received message."
        },
        "subscription": {
          "description": "The subscription that received the event.",
          "type": "string"
        }
      },
      "id": "PubsubEvent"
    },
    "ListSubscriptionsResponse": {
      "description": "Response for the ListSubscriptions method.",
      "type": "object",
      "properties": {
        "subscription": {
          "description": "The subscriptions that match the request.",
          "items": {
            "$ref": "Subscription"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "If not empty, indicates that there are more subscriptions that match the\nrequest and this value should be passed to the next\n\u003ccode\u003eListSubscriptionsRequest\u003c/code\u003e to continue.",
          "type": "string"
        }
      },
      "id": "ListSubscriptionsResponse"
    },
    "PublishRequest": {
      "description": "Request for the Publish method.",
      "type": "object",
      "properties": {
        "message": {
          "$ref": "PubsubMessage",
          "description": "The message to publish."
        },
        "topic": {
          "description": "The message in the request will be published on this topic.",
          "type": "string"
        }
      },
      "id": "PublishRequest"
    },
    "Subscription": {
      "description": "A subscription resource.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "The name of the topic from which this subscription is receiving messages.",
          "type": "string"
        },
        "pushConfig": {
          "description": "If push delivery is used with this subscription, this field is\nused to configure it.",
          "$ref": "PushConfig"
        },
        "ackDeadlineSeconds": {
          "format": "int32",
          "description": "For either push or pull delivery, the value is the maximum time after a\nsubscriber receives a message before the subscriber should acknowledge or\nNack the message. If the Ack deadline for a message passes without an\nAck or a Nack, the Pub/Sub system will eventually redeliver the message.\nIf a subscriber acknowledges after the deadline, the Pub/Sub system may\naccept the Ack, but it is possible that the message has been already\ndelivered again. Multiple Acks to the message are allowed and will\nsucceed.\n\nFor push delivery, this value is used to set the request timeout for\nthe call to the push endpoint.\n\nFor pull delivery, this value is used as the initial value for the Ack\ndeadline. It may be overridden for each message using its corresponding\nack_id with \u003ccode\u003eModifyAckDeadline\u003c/code\u003e.\nWhile a message is outstanding (i.e. it has been delivered to a pull\nsubscriber and the subscriber has not yet Acked or Nacked), the Pub/Sub\nsystem will not deliver that message to another pull subscriber\n(on a best-effort basis).",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "Name of the subscription."
        }
      },
      "id": "Subscription"
    },
    "PublishBatchResponse": {
      "description": "Response for the PublishBatch method.",
      "type": "object",
      "properties": {
        "messageIds": {
          "description": "The server-assigned ID of each published message, in the same order as\nthe messages in the request. IDs are guaranteed to be unique within\nthe topic.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "PublishBatchResponse"
    },
    "Topic": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the topic.",
          "type": "string"
        }
      },
      "id": "Topic",
      "description": "A topic resource."
    },
    "Label": {
      "description": "A key-value pair applied to a given object.",
      "type": "object",
      "properties": {
        "strValue": {
          "description": "A string value.",
          "type": "string"
        },
        "numValue": {
          "format": "int64",
          "description": "An integer value.",
          "type": "string"
        },
        "key": {
          "description": "The key of a label is a syntactically valid URL (as per RFC 1738) with\nthe \"scheme\" and initial slashes omitted and with the additional\nrestrictions noted below.  Each key should be globally unique.  The\n\"host\" portion is called the \"namespace\" and is not necessarily\nresolvable to a network endpoint.  Instead, the namespace indicates what\nsystem or entity defines the semantics of the label.  Namespaces do not\nrestrict the set of objects to which a label may be associated.\n\nKeys are defined by the following grammar:\n\n  key          = hostname \"/\" kpath\n  kpath        = ksegment *[ \"/\" ksegment ]\n  ksegment     = alphadigit | *[ alphadigit | \"-\" | \"_\" | \".\" ]\n\nwhere \"hostname\" and \"alphadigit\" are defined as in RFC 1738.\n\nExample key:\n  spanner.google.com/universe",
          "type": "string"
        }
      },
      "id": "Label"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "version": "v1beta1a",
  "baseUrl": "https://pubsub.googleapis.com/",
  "canonicalName": "Pubsub",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/pubsub": {
          "description": "View and manage Pub/Sub topics and subscriptions"
        }
      }
    }
  },
  "servicePath": "",
  "description": "Provides reliable, many-to-many, asynchronous messaging between applications.\n",
  "kind": "discovery#restDescription",
  "rootUrl": "https://pubsub.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "pubsub",
  "batchPath": "batch",
  "revision": "20170918",
  "id": "pubsub:v1beta1a",
  "documentationLink": "https://cloud.google.com/pubsub/docs",
  "title": "Google Cloud Pub/Sub API",
  "discoveryVersion": "v1",
  "ownerName": "Google"
}
