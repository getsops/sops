{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/bigquery": {
          "description": "View and manage your data in Google BigQuery"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        }
      }
    }
  },
  "basePath": "",
  "baseUrl": "https://bigquerydatatransfer.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "BigQuery Data Transfer",
  "description": "Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/bigquery/",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "bigquerydatatransfer:v1",
  "kind": "discovery#restDescription",
  "name": "bigquerydatatransfer",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "dataSources": {
          "methods": {
            "checkValidCreds": {
              "description": "Returns true if valid credentials exist for the given data source and\nrequesting user.\nSome data sources doesn't support service account, so we need to talk to\nthem on behalf of the end user. This API just checks whether we have OAuth\ntoken for the particular user, which is a pre-requisite before user can\ncreate a transfer config.",
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}:checkValidCreds",
              "httpMethod": "POST",
              "id": "bigquerydatatransfer.projects.dataSources.checkValidCreds",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The data source in the form:\n`projects/{project_id}/dataSources/{data_source_id}`",
                  "location": "path",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+name}:checkValidCreds",
              "request": {
                "$ref": "CheckValidCredsRequest"
              },
              "response": {
                "$ref": "CheckValidCredsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            },
            "get": {
              "description": "Retrieves a supported data source and returns its settings,\nwhich can be used for UI rendering.",
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}",
              "httpMethod": "GET",
              "id": "bigquerydatatransfer.projects.dataSources.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/dataSources/{data_source_id}`",
                  "location": "path",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "response": {
                "$ref": "DataSource"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            },
            "list": {
              "description": "Lists supported data sources and returns their settings,\nwhich can be used for UI rendering.",
              "flatPath": "v1/projects/{projectsId}/dataSources",
              "httpMethod": "GET",
              "id": "bigquerydatatransfer.projects.dataSources.list",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageSize": {
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "Pagination token, which can be used to request a specific page\nof `ListDataSourcesRequest` list results. For multiple-page\nresults, `ListDataSourcesResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "description": "The BigQuery project id for which data sources should be returned.\nMust be in the form: `projects/{project_id}`",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+parent}/dataSources",
              "response": {
                "$ref": "ListDataSourcesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          }
        },
        "locations": {
          "methods": {
            "get": {
              "description": "Gets information about a location.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "id": "bigquerydatatransfer.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "id": "bigquerydatatransfer.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          },
          "resources": {
            "dataSources": {
              "methods": {
                "checkValidCreds": {
                  "description": "Returns true if valid credentials exist for the given data source and\nrequesting user.\nSome data sources doesn't support service account, so we need to talk to\nthem on behalf of the end user. This API just checks whether we have OAuth\ntoken for the particular user, which is a pre-requisite before user can\ncreate a transfer config.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}:checkValidCreds",
                  "httpMethod": "POST",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.checkValidCreds",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The data source in the form:\n`projects/{project_id}/dataSources/{data_source_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:checkValidCreds",
                  "request": {
                    "$ref": "CheckValidCredsRequest"
                  },
                  "response": {
                    "$ref": "CheckValidCredsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "get": {
                  "description": "Retrieves a supported data source and returns its settings,\nwhich can be used for UI rendering.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}",
                  "httpMethod": "GET",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/dataSources/{data_source_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "DataSource"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "list": {
                  "description": "Lists supported data sources and returns their settings,\nwhich can be used for UI rendering.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources",
                  "httpMethod": "GET",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Pagination token, which can be used to request a specific page\nof `ListDataSourcesRequest` list results. For multiple-page\nresults, `ListDataSourcesResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "The BigQuery project id for which data sources should be returned.\nMust be in the form: `projects/{project_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/dataSources",
                  "response": {
                    "$ref": "ListDataSourcesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                }
              }
            },
            "transferConfigs": {
              "methods": {
                "create": {
                  "description": "Creates a new data transfer configuration.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "httpMethod": "POST",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "authorizationCode": {
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nThis is required if new credentials are needed, as indicated by\n`CheckValidCreds`.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e\u0026scope=\u003cdata_source_scopes\u003e\u0026redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "The BigQuery project id where the transfer configuration should be created.\nMust be in the format projects/{project_id}/locations/{location_id}\nIf specified location and location of the destination bigquery dataset\ndo not match - the request will fail.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "versionInfo": {
                      "description": "Optional version info. If users want to find a very recent access token,\nthat is, immediately after approving access, users have to set the\nversion_info claim in the token request. To obtain the version_info, users\nmust use the “none+gsession” response type. which be return a\nversion_info back in the authorization response which be be put in a JWT\nclaim in the token request.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/transferConfigs",
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes a data transfer configuration,\nincluding any associated transfer runs and logs.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "httpMethod": "DELETE",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "description": "Returns information about a data transfer config.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "httpMethod": "GET",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "list": {
                  "description": "Returns information about all data transfers in the project.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "httpMethod": "GET",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "dataSourceIds": {
                      "description": "When specified, only configurations of requested data sources are returned.",
                      "location": "query",
                      "repeated": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Pagination token, which can be used to request a specific page\nof `ListTransfersRequest` list results. For multiple-page\nresults, `ListTransfersResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "The BigQuery project id for which data sources\nshould be returned: `projects/{project_id}`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/transferConfigs",
                  "response": {
                    "$ref": "ListTransferConfigsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "patch": {
                  "description": "Updates a data transfer configuration.\nAll fields must be set, even if they are not updated.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "httpMethod": "PATCH",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "authorizationCode": {
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nIf it is provided, the transfer configuration will be associated with the\nauthorizing user.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e\u0026scope=\u003cdata_source_scopes\u003e\u0026redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "The resource name of the transfer config.\nTransfer config names have the form of\n`projects/{project_id}/locations/{region}/transferConfigs/{config_id}`.\nThe name is automatically generated based on the config_id specified in\nCreateTransferConfigRequest along with project_id and region. If config_id\nis not provided, usually a uuid, even though it is not guaranteed or\nrequired, will be generated for config_id.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required list of fields to be updated in this request.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "versionInfo": {
                      "description": "Optional version info. If users want to find a very recent access token,\nthat is, immediately after approving access, users have to set the\nversion_info claim in the token request. To obtain the version_info, users\nmust use the “none+gsession” response type. which be return a\nversion_info back in the authorization response which be be put in a JWT\nclaim in the token request.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "scheduleRuns": {
                  "description": "Creates transfer runs for a time range [start_time, end_time].\nFor each date - or whatever granularity the data source supports - in the\nrange, one transfer run is created.\nNote that runs are created per UTC time in the time range.\nDEPRECATED: use StartManualTransferRuns instead.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
                  "httpMethod": "POST",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.scheduleRuns",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Transfer configuration name in the form:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}:scheduleRuns",
                  "request": {
                    "$ref": "ScheduleTransferRunsRequest"
                  },
                  "response": {
                    "$ref": "ScheduleTransferRunsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "startManualRuns": {
                  "description": "Start manual transfer runs to be executed now with schedule_time equal to\ncurrent time. The transfer runs can be created for a time range where the\nrun_time is between start_time (inclusive) and end_time (exclusive), or for\na specific run_time.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:startManualRuns",
                  "httpMethod": "POST",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.startManualRuns",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Transfer configuration name in the form:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}:startManualRuns",
                  "request": {
                    "$ref": "StartManualTransferRunsRequest"
                  },
                  "response": {
                    "$ref": "StartManualTransferRunsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "runs": {
                  "methods": {
                    "delete": {
                      "description": "Deletes the specified transfer run.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                      "httpMethod": "DELETE",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "description": "Returns information about the particular transfer run.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                      "httpMethod": "GET",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "TransferRun"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ]
                    },
                    "list": {
                      "description": "Returns information about running and completed jobs.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs",
                      "httpMethod": "GET",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageSize": {
                          "description": "Page size. The default page size is the maximum value of 1000 results.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "Pagination token, which can be used to request a specific page\nof `ListTransferRunsRequest` list results. For multiple-page\nresults, `ListTransferRunsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Name of transfer configuration for which transfer runs should be retrieved.\nFormat of transfer configuration resource name is:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "runAttempt": {
                          "description": "Indicates how run attempts are to be pulled.",
                          "enum": [
                            "RUN_ATTEMPT_UNSPECIFIED",
                            "LATEST"
                          ],
                          "location": "query",
                          "type": "string"
                        },
                        "states": {
                          "description": "When specified, only transfer runs with requested states are returned.",
                          "enum": [
                            "TRANSFER_STATE_UNSPECIFIED",
                            "PENDING",
                            "RUNNING",
                            "SUCCEEDED",
                            "FAILED",
                            "CANCELLED"
                          ],
                          "location": "query",
                          "repeated": true,
                          "type": "string"
                        }
                      },
                      "path": "v1/{+parent}/runs",
                      "response": {
                        "$ref": "ListTransferRunsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ]
                    }
                  },
                  "resources": {
                    "transferLogs": {
                      "methods": {
                        "list": {
                          "description": "Returns user facing log messages for the data transfer run.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs",
                          "httpMethod": "GET",
                          "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.transferLogs.list",
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "messageTypes": {
                              "description": "Message types to return. If not populated - INFO, WARNING and ERROR\nmessages are returned.",
                              "enum": [
                                "MESSAGE_SEVERITY_UNSPECIFIED",
                                "INFO",
                                "WARNING",
                                "ERROR"
                              ],
                              "location": "query",
                              "repeated": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Page size. The default page size is the maximum value of 1000 results.",
                              "format": "int32",
                              "location": "query",
                              "type": "integer"
                            },
                            "pageToken": {
                              "description": "Pagination token, which can be used to request a specific page\nof `ListTransferLogsRequest` list results. For multiple-page\nresults, `ListTransferLogsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                              "location": "query",
                              "type": "string"
                            },
                            "parent": {
                              "description": "Transfer run name in the form:\n`projects/{project_id}/transferConfigs/{config_Id}/runs/{run_id}`.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "path": "v1/{+parent}/transferLogs",
                          "response": {
                            "$ref": "ListTransferLogsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/bigquery",
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "transferConfigs": {
          "methods": {
            "create": {
              "description": "Creates a new data transfer configuration.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "httpMethod": "POST",
              "id": "bigquerydatatransfer.projects.transferConfigs.create",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "authorizationCode": {
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nThis is required if new credentials are needed, as indicated by\n`CheckValidCreds`.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e\u0026scope=\u003cdata_source_scopes\u003e\u0026redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "description": "The BigQuery project id where the transfer configuration should be created.\nMust be in the format projects/{project_id}/locations/{location_id}\nIf specified location and location of the destination bigquery dataset\ndo not match - the request will fail.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "versionInfo": {
                  "description": "Optional version info. If users want to find a very recent access token,\nthat is, immediately after approving access, users have to set the\nversion_info claim in the token request. To obtain the version_info, users\nmust use the “none+gsession” response type. which be return a\nversion_info back in the authorization response which be be put in a JWT\nclaim in the token request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+parent}/transferConfigs",
              "request": {
                "$ref": "TransferConfig"
              },
              "response": {
                "$ref": "TransferConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "delete": {
              "description": "Deletes a data transfer configuration,\nincluding any associated transfer runs and logs.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "httpMethod": "DELETE",
              "id": "bigquerydatatransfer.projects.transferConfigs.delete",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                  "location": "path",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "description": "Returns information about a data transfer config.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "httpMethod": "GET",
              "id": "bigquerydatatransfer.projects.transferConfigs.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}`",
                  "location": "path",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "response": {
                "$ref": "TransferConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            },
            "list": {
              "description": "Returns information about all data transfers in the project.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "httpMethod": "GET",
              "id": "bigquerydatatransfer.projects.transferConfigs.list",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "dataSourceIds": {
                  "description": "When specified, only configurations of requested data sources are returned.",
                  "location": "query",
                  "repeated": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "Pagination token, which can be used to request a specific page\nof `ListTransfersRequest` list results. For multiple-page\nresults, `ListTransfersResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "description": "The BigQuery project id for which data sources\nshould be returned: `projects/{project_id}`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+parent}/transferConfigs",
              "response": {
                "$ref": "ListTransferConfigsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            },
            "patch": {
              "description": "Updates a data transfer configuration.\nAll fields must be set, even if they are not updated.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "httpMethod": "PATCH",
              "id": "bigquerydatatransfer.projects.transferConfigs.patch",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "authorizationCode": {
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration.\nIf it is provided, the transfer configuration will be associated with the\nauthorizing user.\nIn order to obtain authorization_code, please make a\nrequest to\nhttps://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=\u003cdatatransferapiclientid\u003e\u0026scope=\u003cdata_source_scopes\u003e\u0026redirect_uri=\u003credirect_uri\u003e\n\n* client_id should be OAuth client_id of BigQuery DTS API for the given\n  data source returned by ListDataSources method.\n* data_source_scopes are the scopes returned by ListDataSources method.\n* redirect_uri is an optional parameter. If not specified, then\n  authorization code is posted to the opener of authorization flow window.\n  Otherwise it will be sent to the redirect uri. A special value of\n  urn:ietf:wg:oauth:2.0:oob means that authorization code should be\n  returned in the title bar of the browser, with the page text prompting\n  the user to copy the code and paste it in the application.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "description": "The resource name of the transfer config.\nTransfer config names have the form of\n`projects/{project_id}/locations/{region}/transferConfigs/{config_id}`.\nThe name is automatically generated based on the config_id specified in\nCreateTransferConfigRequest along with project_id and region. If config_id\nis not provided, usually a uuid, even though it is not guaranteed or\nrequired, will be generated for config_id.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "description": "Required list of fields to be updated in this request.",
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string"
                },
                "versionInfo": {
                  "description": "Optional version info. If users want to find a very recent access token,\nthat is, immediately after approving access, users have to set the\nversion_info claim in the token request. To obtain the version_info, users\nmust use the “none+gsession” response type. which be return a\nversion_info back in the authorization response which be be put in a JWT\nclaim in the token request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "request": {
                "$ref": "TransferConfig"
              },
              "response": {
                "$ref": "TransferConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "scheduleRuns": {
              "description": "Creates transfer runs for a time range [start_time, end_time].\nFor each date - or whatever granularity the data source supports - in the\nrange, one transfer run is created.\nNote that runs are created per UTC time in the time range.\nDEPRECATED: use StartManualTransferRuns instead.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
              "httpMethod": "POST",
              "id": "bigquerydatatransfer.projects.transferConfigs.scheduleRuns",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Transfer configuration name in the form:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+parent}:scheduleRuns",
              "request": {
                "$ref": "ScheduleTransferRunsRequest"
              },
              "response": {
                "$ref": "ScheduleTransferRunsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "startManualRuns": {
              "description": "Start manual transfer runs to be executed now with schedule_time equal to\ncurrent time. The transfer runs can be created for a time range where the\nrun_time is between start_time (inclusive) and end_time (exclusive), or for\na specific run_time.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:startManualRuns",
              "httpMethod": "POST",
              "id": "bigquerydatatransfer.projects.transferConfigs.startManualRuns",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Transfer configuration name in the form:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+parent}:startManualRuns",
              "request": {
                "$ref": "StartManualTransferRunsRequest"
              },
              "response": {
                "$ref": "StartManualTransferRunsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          },
          "resources": {
            "runs": {
              "methods": {
                "delete": {
                  "description": "Deletes the specified transfer run.",
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "httpMethod": "DELETE",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "description": "Returns information about the particular transfer run.",
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "httpMethod": "GET",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The field will contain name of the resource requested, for example:\n`projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "TransferRun"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "list": {
                  "description": "Returns information about running and completed jobs.",
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs",
                  "httpMethod": "GET",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Pagination token, which can be used to request a specific page\nof `ListTransferRunsRequest` list results. For multiple-page\nresults, `ListTransferRunsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Name of transfer configuration for which transfer runs should be retrieved.\nFormat of transfer configuration resource name is:\n`projects/{project_id}/transferConfigs/{config_id}`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "runAttempt": {
                      "description": "Indicates how run attempts are to be pulled.",
                      "enum": [
                        "RUN_ATTEMPT_UNSPECIFIED",
                        "LATEST"
                      ],
                      "location": "query",
                      "type": "string"
                    },
                    "states": {
                      "description": "When specified, only transfer runs with requested states are returned.",
                      "enum": [
                        "TRANSFER_STATE_UNSPECIFIED",
                        "PENDING",
                        "RUNNING",
                        "SUCCEEDED",
                        "FAILED",
                        "CANCELLED"
                      ],
                      "location": "query",
                      "repeated": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/runs",
                  "response": {
                    "$ref": "ListTransferRunsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                }
              },
              "resources": {
                "transferLogs": {
                  "methods": {
                    "list": {
                      "description": "Returns user facing log messages for the data transfer run.",
                      "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs",
                      "httpMethod": "GET",
                      "id": "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "messageTypes": {
                          "description": "Message types to return. If not populated - INFO, WARNING and ERROR\nmessages are returned.",
                          "enum": [
                            "MESSAGE_SEVERITY_UNSPECIFIED",
                            "INFO",
                            "WARNING",
                            "ERROR"
                          ],
                          "location": "query",
                          "repeated": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Page size. The default page size is the maximum value of 1000 results.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "Pagination token, which can be used to request a specific page\nof `ListTransferLogsRequest` list results. For multiple-page\nresults, `ListTransferLogsResponse` outputs\na `next_page` token, which can be used as the\n`page_token` value to request the next page of list results.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Transfer run name in the form:\n`projects/{project_id}/transferConfigs/{config_Id}/runs/{run_id}`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "path": "v1/{+parent}/transferLogs",
                      "response": {
                        "$ref": "ListTransferLogsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "revision": "20190323",
  "rootUrl": "https://bigquerydatatransfer.googleapis.com/",
  "schemas": {
    "CheckValidCredsRequest": {
      "description": "A request to determine whether the user has valid credentials. This method\nis used to limit the number of OAuth popups in the user interface. The\nuser id is inferred from the API call context.\nIf the data source has the Google+ authorization type, this method\nreturns false, as it cannot be determined whether the credentials are\nalready valid merely based on the user id.",
      "id": "CheckValidCredsRequest",
      "properties": {},
      "type": "object"
    },
    "CheckValidCredsResponse": {
      "description": "A response indicating whether the credentials exist and are valid.",
      "id": "CheckValidCredsResponse",
      "properties": {
        "hasValidCreds": {
          "description": "If set to `true`, the credentials exist and are valid.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DataSource": {
      "description": "Represents data source metadata. Metadata is sufficient to\nrender UI and request proper OAuth tokens.",
      "id": "DataSource",
      "properties": {
        "authorizationType": {
          "description": "Indicates the type of authorization.",
          "enum": [
            "AUTHORIZATION_TYPE_UNSPECIFIED",
            "AUTHORIZATION_CODE",
            "GOOGLE_PLUS_AUTHORIZATION_CODE"
          ],
          "enumDescriptions": [
            "Type unspecified.",
            "Use OAuth 2 authorization codes that can be exchanged\nfor a refresh token on the backend.",
            "Return an authorization code for a given Google+ page that can then be\nexchanged for a refresh token on the backend."
          ],
          "type": "string"
        },
        "clientId": {
          "description": "Data source client id which should be used to receive refresh token.",
          "type": "string"
        },
        "dataRefreshType": {
          "description": "Specifies whether the data source supports automatic data refresh for the\npast few days, and how it's supported.\nFor some data sources, data might not be complete until a few days later,\nso it's useful to refresh data automatically.",
          "enum": [
            "DATA_REFRESH_TYPE_UNSPECIFIED",
            "SLIDING_WINDOW",
            "CUSTOM_SLIDING_WINDOW"
          ],
          "enumDescriptions": [
            "The data source won't support data auto refresh, which is default value.",
            "The data source supports data auto refresh, and runs will be scheduled\nfor the past few days. Does not allow custom values to be set for each\ntransfer config.",
            "The data source supports data auto refresh, and runs will be scheduled\nfor the past few days. Allows custom values to be set for each transfer\nconfig."
          ],
          "type": "string"
        },
        "dataSourceId": {
          "description": "Data source id.",
          "type": "string"
        },
        "defaultDataRefreshWindowDays": {
          "description": "Default data refresh window on days.\nOnly meaningful when `data_refresh_type` = `SLIDING_WINDOW`.",
          "format": "int32",
          "type": "integer"
        },
        "defaultSchedule": {
          "description": "Default data transfer schedule.\nExamples of valid schedules include:\n`1st,3rd monday of month 15:30`,\n`every wed,fri of jan,jun 13:15`, and\n`first sunday of quarter 00:00`.",
          "type": "string"
        },
        "description": {
          "description": "User friendly data source description string.",
          "type": "string"
        },
        "displayName": {
          "description": "User friendly data source name.",
          "type": "string"
        },
        "helpUrl": {
          "description": "Url for the help document for this data source.",
          "type": "string"
        },
        "manualRunsDisabled": {
          "description": "Disables backfilling and manual run scheduling\nfor the data source.",
          "type": "boolean"
        },
        "minimumScheduleInterval": {
          "description": "The minimum interval for scheduler to schedule runs.",
          "format": "google-duration",
          "type": "string"
        },
        "name": {
          "description": "Output only. Data source resource name.",
          "type": "string"
        },
        "parameters": {
          "description": "Data source parameters.",
          "items": {
            "$ref": "DataSourceParameter"
          },
          "type": "array"
        },
        "scopes": {
          "description": "Api auth scopes for which refresh token needs to be obtained. These are\nscopes needed by a data source to prepare data and ingest them into\nBigQuery, e.g., https://www.googleapis.com/auth/bigquery",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "supportsCustomSchedule": {
          "description": "Specifies whether the data source supports a user defined schedule, or\noperates on the default schedule.\nWhen set to `true`, user can override default schedule.",
          "type": "boolean"
        },
        "supportsMultipleTransfers": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "transferType": {
          "description": "Deprecated. This field has no effect.",
          "enum": [
            "TRANSFER_TYPE_UNSPECIFIED",
            "BATCH",
            "STREAMING"
          ],
          "enumDescriptions": [
            "Invalid or Unknown transfer type placeholder.",
            "Batch data transfer.",
            "Streaming data transfer. Streaming data source currently doesn't\nsupport multiple transfer configs per project."
          ],
          "type": "string"
        },
        "updateDeadlineSeconds": {
          "description": "The number of seconds to wait for an update from the data source\nbefore the Data Transfer Service marks the transfer as FAILED.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DataSourceParameter": {
      "description": "Represents a data source parameter with validation rules, so that\nparameters can be rendered in the UI. These parameters are given to us by\nsupported data sources, and include all needed information for rendering\nand validation.\nThus, whoever uses this api can decide to generate either generic ui,\nor custom data source specific forms.",
      "id": "DataSourceParameter",
      "properties": {
        "allowedValues": {
          "description": "All possible values for the parameter.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "description": "Parameter description.",
          "type": "string"
        },
        "displayName": {
          "description": "Parameter display name in the user interface.",
          "type": "string"
        },
        "fields": {
          "description": "Deprecated. This field has no effect.",
          "items": {
            "$ref": "DataSourceParameter"
          },
          "type": "array"
        },
        "immutable": {
          "description": "Cannot be changed after initial creation.",
          "type": "boolean"
        },
        "maxValue": {
          "description": "For integer and double values specifies maxminum allowed value.",
          "format": "double",
          "type": "number"
        },
        "minValue": {
          "description": "For integer and double values specifies minimum allowed value.",
          "format": "double",
          "type": "number"
        },
        "paramId": {
          "description": "Parameter identifier.",
          "type": "string"
        },
        "recurse": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "repeated": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "required": {
          "description": "Is parameter required.",
          "type": "boolean"
        },
        "type": {
          "description": "Parameter type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "STRING",
            "INTEGER",
            "DOUBLE",
            "BOOLEAN",
            "RECORD",
            "PLUS_PAGE"
          ],
          "enumDescriptions": [
            "Type unspecified.",
            "String parameter.",
            "Integer parameter (64-bits).\nWill be serialized to json as string.",
            "Double precision floating point parameter.",
            "Boolean parameter.",
            "Deprecated. This field has no effect.",
            "Page ID for a Google+ Page."
          ],
          "type": "string"
        },
        "validationDescription": {
          "description": "Description of the requirements for this field, in case the user input does\nnot fulfill the regex pattern or min/max values.",
          "type": "string"
        },
        "validationHelpUrl": {
          "description": "URL to a help document to further explain the naming requirements.",
          "type": "string"
        },
        "validationRegex": {
          "description": "Regular expression which can be used for parameter validation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "properties": {},
      "type": "object"
    },
    "ListDataSourcesResponse": {
      "description": "Returns list of supported data sources and their metadata.",
      "id": "ListDataSourcesResponse",
      "properties": {
        "dataSources": {
          "description": "List of supported data sources and their transfer settings.",
          "items": {
            "$ref": "DataSource"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListDataSourcesRequest.page_token`\nto request the next page of list results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListTransferConfigsResponse": {
      "description": "The returned list of pipelines in the project.",
      "id": "ListTransferConfigsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListTransferConfigsRequest.page_token`\nto request the next page of list results.",
          "type": "string"
        },
        "transferConfigs": {
          "description": "Output only. The stored pipeline transfer configurations.",
          "items": {
            "$ref": "TransferConfig"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListTransferLogsResponse": {
      "description": "The returned list transfer run messages.",
      "id": "ListTransferLogsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`GetTransferRunLogRequest.page_token`\nto request the next page of list results.",
          "type": "string"
        },
        "transferMessages": {
          "description": "Output only. The stored pipeline transfer messages.",
          "items": {
            "$ref": "TransferMessage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListTransferRunsResponse": {
      "description": "The returned list of pipelines in the project.",
      "id": "ListTransferRunsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results,\nthis token can be used as the\n`ListTransferRunsRequest.page_token`\nto request the next page of list results.",
          "type": "string"
        },
        "transferRuns": {
          "description": "Output only. The stored pipeline transfer runs.",
          "items": {
            "$ref": "TransferRun"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleOptions": {
      "description": "Options customizing the data transfer schedule.",
      "id": "ScheduleOptions",
      "properties": {
        "disableAutoScheduling": {
          "description": "If true, automatic scheduling of data transfer runs for this configuration\nwill be disabled. The runs can be started on ad-hoc basis using\nStartManualTransferRuns API. When automatic scheduling is disabled, the\nTransferConfig.schedule field will be ignored.",
          "type": "boolean"
        },
        "endTime": {
          "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be\nscheduled at or after the end time. The end time can be changed at any\nmoment. The time when a data transfer can be trigerred manually is not\nlimited by this option.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Specifies time to start scheduling transfer runs. The first run will be\nscheduled at or after the start time according to a recurrence pattern\ndefined in the schedule string. The start time can be changed at any\nmoment. The time when a data transfer can be trigerred manually is not\nlimited by this option.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleTransferRunsRequest": {
      "description": "A request to schedule transfer runs for a time range.",
      "id": "ScheduleTransferRunsRequest",
      "properties": {
        "endTime": {
          "description": "End time of the range of transfer runs. For example,\n`\"2017-05-30T00:00:00+00:00\"`.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of the range of transfer runs. For example,\n`\"2017-05-25T00:00:00+00:00\"`.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleTransferRunsResponse": {
      "description": "A response to schedule transfer runs for a time range.",
      "id": "ScheduleTransferRunsResponse",
      "properties": {
        "runs": {
          "description": "The transfer runs that were scheduled.",
          "items": {
            "$ref": "TransferRun"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "StartManualTransferRunsRequest": {
      "description": "A request to start manual transfer runs.",
      "id": "StartManualTransferRunsRequest",
      "properties": {
        "requestedRunTime": {
          "description": "Specific run_time for a transfer run to be started. The\nrequested_run_time must not be in the future.",
          "format": "google-datetime",
          "type": "string"
        },
        "requestedTimeRange": {
          "$ref": "TimeRange",
          "description": "Time range for the transfer runs that should be started."
        }
      },
      "type": "object"
    },
    "StartManualTransferRunsResponse": {
      "description": "A response to start manual transfer runs.",
      "id": "StartManualTransferRunsResponse",
      "properties": {
        "runs": {
          "description": "The transfer runs that were created.",
          "items": {
            "$ref": "TransferRun"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error\nmessage, and error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "id": "Status",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeRange": {
      "description": "A specification for a time range, this will request transfer runs with\nrun_time between start_time (inclusive) and end_time (exclusive).",
      "id": "TimeRange",
      "properties": {
        "endTime": {
          "description": "End time of the range of transfer runs. For example,\n`\"2017-05-30T00:00:00+00:00\"`. The end_time must not be in the future.\nCreates transfer runs where run_time is in the range betwen start_time\n(inclusive) and end_time (exlusive).",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of the range of transfer runs. For example,\n`\"2017-05-25T00:00:00+00:00\"`. The start_time must be strictly less than\nthe end_time. Creates transfer runs where run_time is in the range betwen\nstart_time (inclusive) and end_time (exlusive).",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferConfig": {
      "description": "Represents a data transfer configuration. A transfer configuration\ncontains all metadata needed to perform a data transfer. For example,\n`destination_dataset_id` specifies where data should be stored.\nWhen a new transfer configuration is created, the specified\n`destination_dataset_id` is created when needed and shared with the\nappropriate data source service account.",
      "id": "TransferConfig",
      "properties": {
        "dataRefreshWindowDays": {
          "description": "The number of days to look back to automatically refresh the data.\nFor example, if `data_refresh_window_days = 10`, then every day\nBigQuery reingests data for [today-10, today-1], rather than ingesting data\nfor just [today-1].\nOnly valid if the data source supports the feature. Set the value to  0\nto use the default value.",
          "format": "int32",
          "type": "integer"
        },
        "dataSourceId": {
          "description": "Data source id. Cannot be changed once data transfer is created.",
          "type": "string"
        },
        "datasetRegion": {
          "description": "Output only. Region in which BigQuery dataset is located.",
          "type": "string"
        },
        "destinationDatasetId": {
          "description": "The BigQuery target dataset id.",
          "type": "string"
        },
        "disabled": {
          "description": "Is this config disabled. When set to true, no runs are scheduled\nfor a given transfer.",
          "type": "boolean"
        },
        "displayName": {
          "description": "User specified display name for the data transfer.",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the transfer config.\nTransfer config names have the form of\n`projects/{project_id}/locations/{region}/transferConfigs/{config_id}`.\nThe name is automatically generated based on the config_id specified in\nCreateTransferConfigRequest along with project_id and region. If config_id\nis not provided, usually a uuid, even though it is not guaranteed or\nrequired, will be generated for config_id.",
          "type": "string"
        },
        "nextRunTime": {
          "description": "Output only. Next time when data transfer will run.",
          "format": "google-datetime",
          "type": "string"
        },
        "params": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Data transfer specific parameters.",
          "type": "object"
        },
        "schedule": {
          "description": "Data transfer schedule.\nIf the data source does not support a custom schedule, this should be\nempty. If it is empty, the default value for the data source will be\nused.\nThe specified times are in UTC.\nExamples of valid format:\n`1st,3rd monday of month 15:30`,\n`every wed,fri of jan,jun 13:15`, and\n`first sunday of quarter 00:00`.\nSee more explanation about the format here:\nhttps://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format\nNOTE: the granularity should be at least 8 hours, or less frequent.",
          "type": "string"
        },
        "scheduleOptions": {
          "$ref": "ScheduleOptions",
          "description": "Options customizing the data transfer schedule."
        },
        "state": {
          "description": "Output only. State of the most recently updated transfer run.",
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "State placeholder.",
            "Data transfer is scheduled and is waiting to be picked up by\ndata transfer backend.",
            "Data transfer is in progress.",
            "Data transfer completed successfully.",
            "Data transfer failed.",
            "Data transfer is cancelled."
          ],
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Data transfer modification time. Ignored by server on input.",
          "format": "google-datetime",
          "type": "string"
        },
        "userId": {
          "description": "Deprecated. Unique ID of the user on whose behalf transfer is done.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferMessage": {
      "description": "Represents a user facing message for a particular data transfer run.",
      "id": "TransferMessage",
      "properties": {
        "messageText": {
          "description": "Message text.",
          "type": "string"
        },
        "messageTime": {
          "description": "Time when message was logged.",
          "format": "google-datetime",
          "type": "string"
        },
        "severity": {
          "description": "Message severity.",
          "enum": [
            "MESSAGE_SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR"
          ],
          "enumDescriptions": [
            "No severity specified.",
            "Informational message.",
            "Warning message.",
            "Error message."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferRun": {
      "description": "Represents a data transfer run.",
      "id": "TransferRun",
      "properties": {
        "dataSourceId": {
          "description": "Output only. Data source id.",
          "type": "string"
        },
        "destinationDatasetId": {
          "description": "Output only. The BigQuery target dataset id.",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. Time when transfer run ended.\nParameter ignored by server for input requests.",
          "format": "google-datetime",
          "type": "string"
        },
        "errorStatus": {
          "$ref": "Status",
          "description": "Status of the transfer run."
        },
        "name": {
          "description": "The resource name of the transfer run.\nTransfer run names have the form\n`projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`.\nThe name is ignored when creating a transfer run.",
          "type": "string"
        },
        "params": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Output only. Data transfer specific parameters.",
          "type": "object"
        },
        "runTime": {
          "description": "For batch transfer runs, specifies the date and time that\ndata should be ingested.",
          "format": "google-datetime",
          "type": "string"
        },
        "schedule": {
          "description": "Output only. Describes the schedule of this transfer run if it was\ncreated as part of a regular schedule. For batch transfer runs that are\nscheduled manually, this is empty.\nNOTE: the system might choose to delay the schedule depending on the\ncurrent load, so `schedule_time` doesn't always match this.",
          "type": "string"
        },
        "scheduleTime": {
          "description": "Minimum time after which a transfer run can be started.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Output only. Time when transfer run was started.\nParameter ignored by server for input requests.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "description": "Data transfer run state. Ignored for input requests.",
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "State placeholder.",
            "Data transfer is scheduled and is waiting to be picked up by\ndata transfer backend.",
            "Data transfer is in progress.",
            "Data transfer completed successfully.",
            "Data transfer failed.",
            "Data transfer is cancelled."
          ],
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Last time the data transfer run state was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "userId": {
          "description": "Deprecated. Unique ID of the user on whose behalf transfer is done.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "servicePath": "",
  "title": "BigQuery Data Transfer API",
  "version": "v1",
  "version_module": true
}