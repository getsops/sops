// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/bigquery/storage/v1beta1/read_options.proto

package storage

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Options dictating how we read a table.
type TableReadOptions struct {
	// Optional. Names of the fields in the table that should be read. If empty,
	// all fields will be read. If the specified field is a nested field, all the
	// sub-fields in the field will be selected. The output field order is
	// unrelated to the order of fields in selected_fields.
	SelectedFields []string `protobuf:"bytes,1,rep,name=selected_fields,json=selectedFields,proto3" json:"selected_fields,omitempty"`
	// Optional. SQL text filtering statement, similar to a WHERE clause in
	// a query. Currently, only a single predicate that is a comparison between
	// a column and a constant value is supported. Aggregates are not supported.
	//
	// Examples: "int_field > 5"
	//           "date_field = CAST('2014-9-27' as DATE)"
	//           "nullable_field is not NULL"
	//           "st_equals(geo_field, st_geofromtext("POINT(2, 2)"))"
	//           "numeric_field BETWEEN 1.0 AND 5.0"
	RowRestriction       string   `protobuf:"bytes,2,opt,name=row_restriction,json=rowRestriction,proto3" json:"row_restriction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableReadOptions) Reset()         { *m = TableReadOptions{} }
func (m *TableReadOptions) String() string { return proto.CompactTextString(m) }
func (*TableReadOptions) ProtoMessage()    {}
func (*TableReadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5cb6d339ef0ad09, []int{0}
}

func (m *TableReadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableReadOptions.Unmarshal(m, b)
}
func (m *TableReadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableReadOptions.Marshal(b, m, deterministic)
}
func (m *TableReadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableReadOptions.Merge(m, src)
}
func (m *TableReadOptions) XXX_Size() int {
	return xxx_messageInfo_TableReadOptions.Size(m)
}
func (m *TableReadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_TableReadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_TableReadOptions proto.InternalMessageInfo

func (m *TableReadOptions) GetSelectedFields() []string {
	if m != nil {
		return m.SelectedFields
	}
	return nil
}

func (m *TableReadOptions) GetRowRestriction() string {
	if m != nil {
		return m.RowRestriction
	}
	return ""
}

func init() {
	proto.RegisterType((*TableReadOptions)(nil), "google.cloud.bigquery.storage.v1beta1.TableReadOptions")
}

func init() {
	proto.RegisterFile("google/cloud/bigquery/storage/v1beta1/read_options.proto", fileDescriptor_b5cb6d339ef0ad09)
}

var fileDescriptor_b5cb6d339ef0ad09 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0xd0, 0x3f, 0x4b, 0xc6, 0x30,
	0x10, 0x06, 0x70, 0x5e, 0x05, 0xc1, 0x0c, 0x2a, 0x9d, 0x3a, 0x16, 0x41, 0xd4, 0x25, 0xa1, 0xb8,
	0x08, 0x6e, 0x0e, 0x4e, 0x82, 0x50, 0x9c, 0x5c, 0x4a, 0xfe, 0x9c, 0x47, 0x20, 0xf6, 0xea, 0x25,
	0xb5, 0xf4, 0xdb, 0x4b, 0xd3, 0x14, 0x47, 0xdf, 0x31, 0x4f, 0x9e, 0x5f, 0xc8, 0x9d, 0x78, 0x44,
	0x22, 0x0c, 0xa0, 0x6c, 0xa0, 0xc9, 0x29, 0xe3, 0xf1, 0x7b, 0x02, 0x5e, 0x54, 0x4c, 0xc4, 0x1a,
	0x41, 0xfd, 0xb4, 0x06, 0x92, 0x6e, 0x15, 0x83, 0x76, 0x3d, 0x8d, 0xc9, 0xd3, 0x10, 0xe5, 0xc8,
	0x94, 0xa8, 0xba, 0xd9, 0xa4, 0xcc, 0x52, 0xee, 0x52, 0x16, 0x29, 0x8b, 0xbc, 0x76, 0xe2, 0xea,
	0x5d, 0x9b, 0x00, 0x1d, 0x68, 0xf7, 0xb6, 0x3d, 0x50, 0xdd, 0x8a, 0xcb, 0x08, 0x01, 0x6c, 0x02,
	0xd7, 0x7f, 0x7a, 0x08, 0x2e, 0xd6, 0x87, 0xe6, 0xf4, 0xee, 0xbc, 0xbb, 0xd8, 0xe3, 0x97, 0x9c,
	0xae, 0x45, 0xa6, 0xb9, 0x67, 0x88, 0x89, 0xbd, 0x5d, 0x71, 0x7d, 0xd2, 0x1c, 0xd6, 0x22, 0xd3,
	0xdc, 0xfd, 0xa5, 0xcf, 0x8b, 0xb8, 0xb7, 0xf4, 0x25, 0x8f, 0xfa, 0xd2, 0xc7, 0x6b, 0xa9, 0x21,
	0x05, 0x3d, 0xa0, 0x24, 0x46, 0x85, 0x30, 0xe4, 0xa9, 0xd4, 0x76, 0xa5, 0x47, 0x1f, 0xff, 0x59,
	0xc9, 0x53, 0x39, 0x9b, 0xb3, 0x0c, 0x1f, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xba, 0xd5, 0x14,
	0x41, 0x4a, 0x01, 0x00, 0x00,
}
