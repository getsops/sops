// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/dataproc/v1beta2/workflow_templates.proto

package dataproc

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	longrunning "google.golang.org/genproto/googleapis/longrunning"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The operation state.
type WorkflowMetadata_State int32

const (
	// Unused.
	WorkflowMetadata_UNKNOWN WorkflowMetadata_State = 0
	// The operation has been created.
	WorkflowMetadata_PENDING WorkflowMetadata_State = 1
	// The operation is running.
	WorkflowMetadata_RUNNING WorkflowMetadata_State = 2
	// The operation is done; either cancelled or completed.
	WorkflowMetadata_DONE WorkflowMetadata_State = 3
)

var WorkflowMetadata_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "PENDING",
	2: "RUNNING",
	3: "DONE",
}

var WorkflowMetadata_State_value = map[string]int32{
	"UNKNOWN": 0,
	"PENDING": 1,
	"RUNNING": 2,
	"DONE":    3,
}

func (x WorkflowMetadata_State) String() string {
	return proto.EnumName(WorkflowMetadata_State_name, int32(x))
}

func (WorkflowMetadata_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{9, 0}
}

// The workflow node state.
type WorkflowNode_NodeState int32

const (
	// State is unspecified.
	WorkflowNode_NODE_STATUS_UNSPECIFIED WorkflowNode_NodeState = 0
	// The node is awaiting prerequisite node to finish.
	WorkflowNode_BLOCKED WorkflowNode_NodeState = 1
	// The node is runnable but not running.
	WorkflowNode_RUNNABLE WorkflowNode_NodeState = 2
	// The node is running.
	WorkflowNode_RUNNING WorkflowNode_NodeState = 3
	// The node completed successfully.
	WorkflowNode_COMPLETED WorkflowNode_NodeState = 4
	// The node failed. A node can be marked FAILED because
	// its ancestor or peer failed.
	WorkflowNode_FAILED WorkflowNode_NodeState = 5
)

var WorkflowNode_NodeState_name = map[int32]string{
	0: "NODE_STATUS_UNSPECIFIED",
	1: "BLOCKED",
	2: "RUNNABLE",
	3: "RUNNING",
	4: "COMPLETED",
	5: "FAILED",
}

var WorkflowNode_NodeState_value = map[string]int32{
	"NODE_STATUS_UNSPECIFIED": 0,
	"BLOCKED":                 1,
	"RUNNABLE":                2,
	"RUNNING":                 3,
	"COMPLETED":               4,
	"FAILED":                  5,
}

func (x WorkflowNode_NodeState) String() string {
	return proto.EnumName(WorkflowNode_NodeState_name, int32(x))
}

func (WorkflowNode_NodeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{12, 0}
}

// A Cloud Dataproc workflow template resource.
type WorkflowTemplate struct {
	// Required. The template id.
	//
	// The id must contain only letters (a-z, A-Z), numbers (0-9),
	// underscores (_), and hyphens (-). Cannot begin or end with underscore
	// or hyphen. Must consist of between 3 and 50 characters.
	//
	// .
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Output only. The "resource name" of the template, as described
	// in https://cloud.google.com/apis/design/resource_names of the form
	// `projects/{project_id}/regions/{region}/workflowTemplates/{template_id}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. Used to perform a consistent read-modify-write.
	//
	// This field should be left blank for a `CreateWorkflowTemplate` request. It
	// is required for an `UpdateWorkflowTemplate` request, and must match the
	// current server version. A typical update template flow would fetch the
	// current template with a `GetWorkflowTemplate` request, which will return
	// the current template with the `version` field filled in with the
	// current server version. The user updates other fields in the template,
	// then returns it as part of the `UpdateWorkflowTemplate` request.
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// Output only. The time template was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time template was last updated.
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional. The labels to associate with this template. These labels
	// will be propagated to all jobs and clusters created by the workflow
	// instance.
	//
	// Label **keys** must contain 1 to 63 characters, and must conform to
	// [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
	//
	// Label **values** may be empty, but, if present, must contain 1 to 63
	// characters, and must conform to
	// [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
	//
	// No more than 32 labels can be associated with a template.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Required. WorkflowTemplate scheduling information.
	Placement *WorkflowTemplatePlacement `protobuf:"bytes,7,opt,name=placement,proto3" json:"placement,omitempty"`
	// Required. The Directed Acyclic Graph of Jobs to submit.
	Jobs []*OrderedJob `protobuf:"bytes,8,rep,name=jobs,proto3" json:"jobs,omitempty"`
	// Optional. Template parameters whose values are substituted into the
	// template. Values for parameters must be provided when the template is
	// instantiated.
	Parameters           []*TemplateParameter `protobuf:"bytes,9,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WorkflowTemplate) Reset()         { *m = WorkflowTemplate{} }
func (m *WorkflowTemplate) String() string { return proto.CompactTextString(m) }
func (*WorkflowTemplate) ProtoMessage()    {}
func (*WorkflowTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{0}
}

func (m *WorkflowTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowTemplate.Unmarshal(m, b)
}
func (m *WorkflowTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowTemplate.Marshal(b, m, deterministic)
}
func (m *WorkflowTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowTemplate.Merge(m, src)
}
func (m *WorkflowTemplate) XXX_Size() int {
	return xxx_messageInfo_WorkflowTemplate.Size(m)
}
func (m *WorkflowTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowTemplate proto.InternalMessageInfo

func (m *WorkflowTemplate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WorkflowTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowTemplate) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *WorkflowTemplate) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *WorkflowTemplate) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *WorkflowTemplate) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *WorkflowTemplate) GetPlacement() *WorkflowTemplatePlacement {
	if m != nil {
		return m.Placement
	}
	return nil
}

func (m *WorkflowTemplate) GetJobs() []*OrderedJob {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *WorkflowTemplate) GetParameters() []*TemplateParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

// Specifies workflow execution target.
//
// Either `managed_cluster` or `cluster_selector` is required.
type WorkflowTemplatePlacement struct {
	// Required. Specifies where workflow executes; either on a managed
	// cluster or an existing cluster chosen by labels.
	//
	// Types that are valid to be assigned to Placement:
	//	*WorkflowTemplatePlacement_ManagedCluster
	//	*WorkflowTemplatePlacement_ClusterSelector
	Placement            isWorkflowTemplatePlacement_Placement `protobuf_oneof:"placement"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *WorkflowTemplatePlacement) Reset()         { *m = WorkflowTemplatePlacement{} }
func (m *WorkflowTemplatePlacement) String() string { return proto.CompactTextString(m) }
func (*WorkflowTemplatePlacement) ProtoMessage()    {}
func (*WorkflowTemplatePlacement) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{1}
}

func (m *WorkflowTemplatePlacement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowTemplatePlacement.Unmarshal(m, b)
}
func (m *WorkflowTemplatePlacement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowTemplatePlacement.Marshal(b, m, deterministic)
}
func (m *WorkflowTemplatePlacement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowTemplatePlacement.Merge(m, src)
}
func (m *WorkflowTemplatePlacement) XXX_Size() int {
	return xxx_messageInfo_WorkflowTemplatePlacement.Size(m)
}
func (m *WorkflowTemplatePlacement) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowTemplatePlacement.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowTemplatePlacement proto.InternalMessageInfo

type isWorkflowTemplatePlacement_Placement interface {
	isWorkflowTemplatePlacement_Placement()
}

type WorkflowTemplatePlacement_ManagedCluster struct {
	ManagedCluster *ManagedCluster `protobuf:"bytes,1,opt,name=managed_cluster,json=managedCluster,proto3,oneof"`
}

type WorkflowTemplatePlacement_ClusterSelector struct {
	ClusterSelector *ClusterSelector `protobuf:"bytes,2,opt,name=cluster_selector,json=clusterSelector,proto3,oneof"`
}

func (*WorkflowTemplatePlacement_ManagedCluster) isWorkflowTemplatePlacement_Placement() {}

func (*WorkflowTemplatePlacement_ClusterSelector) isWorkflowTemplatePlacement_Placement() {}

func (m *WorkflowTemplatePlacement) GetPlacement() isWorkflowTemplatePlacement_Placement {
	if m != nil {
		return m.Placement
	}
	return nil
}

func (m *WorkflowTemplatePlacement) GetManagedCluster() *ManagedCluster {
	if x, ok := m.GetPlacement().(*WorkflowTemplatePlacement_ManagedCluster); ok {
		return x.ManagedCluster
	}
	return nil
}

func (m *WorkflowTemplatePlacement) GetClusterSelector() *ClusterSelector {
	if x, ok := m.GetPlacement().(*WorkflowTemplatePlacement_ClusterSelector); ok {
		return x.ClusterSelector
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WorkflowTemplatePlacement) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WorkflowTemplatePlacement_ManagedCluster)(nil),
		(*WorkflowTemplatePlacement_ClusterSelector)(nil),
	}
}

// Cluster that is managed by the workflow.
type ManagedCluster struct {
	// Required. The cluster name prefix. A unique cluster name will be formed by
	// appending a random suffix.
	//
	// The name must contain only lower-case letters (a-z), numbers (0-9),
	// and hyphens (-). Must begin with a letter. Cannot begin or end with
	// hyphen. Must consist of between 2 and 35 characters.
	ClusterName string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// Required. The cluster configuration.
	Config *ClusterConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// Optional. The labels to associate with this cluster.
	//
	// Label keys must be between 1 and 63 characters long, and must conform to
	// the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	//
	// Label values must be between 1 and 63 characters long, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
	//
	// No more than 32 labels can be associated with a given cluster.
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ManagedCluster) Reset()         { *m = ManagedCluster{} }
func (m *ManagedCluster) String() string { return proto.CompactTextString(m) }
func (*ManagedCluster) ProtoMessage()    {}
func (*ManagedCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{2}
}

func (m *ManagedCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedCluster.Unmarshal(m, b)
}
func (m *ManagedCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedCluster.Marshal(b, m, deterministic)
}
func (m *ManagedCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedCluster.Merge(m, src)
}
func (m *ManagedCluster) XXX_Size() int {
	return xxx_messageInfo_ManagedCluster.Size(m)
}
func (m *ManagedCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedCluster.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedCluster proto.InternalMessageInfo

func (m *ManagedCluster) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ManagedCluster) GetConfig() *ClusterConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ManagedCluster) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// A selector that chooses target cluster for jobs based on metadata.
type ClusterSelector struct {
	// Optional. The zone where workflow process executes. This parameter does not
	// affect the selection of the cluster.
	//
	// If unspecified, the zone of the first cluster matching the selector
	// is used.
	Zone string `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	// Required. The cluster labels. Cluster must have all labels
	// to match.
	ClusterLabels        map[string]string `protobuf:"bytes,2,rep,name=cluster_labels,json=clusterLabels,proto3" json:"cluster_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ClusterSelector) Reset()         { *m = ClusterSelector{} }
func (m *ClusterSelector) String() string { return proto.CompactTextString(m) }
func (*ClusterSelector) ProtoMessage()    {}
func (*ClusterSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{3}
}

func (m *ClusterSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterSelector.Unmarshal(m, b)
}
func (m *ClusterSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterSelector.Marshal(b, m, deterministic)
}
func (m *ClusterSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterSelector.Merge(m, src)
}
func (m *ClusterSelector) XXX_Size() int {
	return xxx_messageInfo_ClusterSelector.Size(m)
}
func (m *ClusterSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterSelector.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterSelector proto.InternalMessageInfo

func (m *ClusterSelector) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *ClusterSelector) GetClusterLabels() map[string]string {
	if m != nil {
		return m.ClusterLabels
	}
	return nil
}

// A job executed by the workflow.
type OrderedJob struct {
	// Required. The step id. The id must be unique among all jobs
	// within the template.
	//
	// The step id is used as prefix for job id, as job
	// `goog-dataproc-workflow-step-id` label, and in
	// [prerequisiteStepIds][google.cloud.dataproc.v1beta2.OrderedJob.prerequisite_step_ids] field from other
	// steps.
	//
	// The id must contain only letters (a-z, A-Z), numbers (0-9),
	// underscores (_), and hyphens (-). Cannot begin or end with underscore
	// or hyphen. Must consist of between 3 and 50 characters.
	StepId string `protobuf:"bytes,1,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	// Required. The job definition.
	//
	// Types that are valid to be assigned to JobType:
	//	*OrderedJob_HadoopJob
	//	*OrderedJob_SparkJob
	//	*OrderedJob_PysparkJob
	//	*OrderedJob_HiveJob
	//	*OrderedJob_PigJob
	//	*OrderedJob_SparkSqlJob
	JobType isOrderedJob_JobType `protobuf_oneof:"job_type"`
	// Optional. The labels to associate with this job.
	//
	// Label keys must be between 1 and 63 characters long, and must conform to
	// the following regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	//
	// Label values must be between 1 and 63 characters long, and must conform to
	// the following regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
	//
	// No more than 32 labels can be associated with a given job.
	Labels map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional. Job scheduling configuration.
	Scheduling *JobScheduling `protobuf:"bytes,9,opt,name=scheduling,proto3" json:"scheduling,omitempty"`
	// Optional. The optional list of prerequisite job step_ids.
	// If not specified, the job will start at the beginning of workflow.
	PrerequisiteStepIds  []string `protobuf:"bytes,10,rep,name=prerequisite_step_ids,json=prerequisiteStepIds,proto3" json:"prerequisite_step_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderedJob) Reset()         { *m = OrderedJob{} }
func (m *OrderedJob) String() string { return proto.CompactTextString(m) }
func (*OrderedJob) ProtoMessage()    {}
func (*OrderedJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{4}
}

func (m *OrderedJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderedJob.Unmarshal(m, b)
}
func (m *OrderedJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderedJob.Marshal(b, m, deterministic)
}
func (m *OrderedJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderedJob.Merge(m, src)
}
func (m *OrderedJob) XXX_Size() int {
	return xxx_messageInfo_OrderedJob.Size(m)
}
func (m *OrderedJob) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderedJob.DiscardUnknown(m)
}

var xxx_messageInfo_OrderedJob proto.InternalMessageInfo

func (m *OrderedJob) GetStepId() string {
	if m != nil {
		return m.StepId
	}
	return ""
}

type isOrderedJob_JobType interface {
	isOrderedJob_JobType()
}

type OrderedJob_HadoopJob struct {
	HadoopJob *HadoopJob `protobuf:"bytes,2,opt,name=hadoop_job,json=hadoopJob,proto3,oneof"`
}

type OrderedJob_SparkJob struct {
	SparkJob *SparkJob `protobuf:"bytes,3,opt,name=spark_job,json=sparkJob,proto3,oneof"`
}

type OrderedJob_PysparkJob struct {
	PysparkJob *PySparkJob `protobuf:"bytes,4,opt,name=pyspark_job,json=pysparkJob,proto3,oneof"`
}

type OrderedJob_HiveJob struct {
	HiveJob *HiveJob `protobuf:"bytes,5,opt,name=hive_job,json=hiveJob,proto3,oneof"`
}

type OrderedJob_PigJob struct {
	PigJob *PigJob `protobuf:"bytes,6,opt,name=pig_job,json=pigJob,proto3,oneof"`
}

type OrderedJob_SparkSqlJob struct {
	SparkSqlJob *SparkSqlJob `protobuf:"bytes,7,opt,name=spark_sql_job,json=sparkSqlJob,proto3,oneof"`
}

func (*OrderedJob_HadoopJob) isOrderedJob_JobType() {}

func (*OrderedJob_SparkJob) isOrderedJob_JobType() {}

func (*OrderedJob_PysparkJob) isOrderedJob_JobType() {}

func (*OrderedJob_HiveJob) isOrderedJob_JobType() {}

func (*OrderedJob_PigJob) isOrderedJob_JobType() {}

func (*OrderedJob_SparkSqlJob) isOrderedJob_JobType() {}

func (m *OrderedJob) GetJobType() isOrderedJob_JobType {
	if m != nil {
		return m.JobType
	}
	return nil
}

func (m *OrderedJob) GetHadoopJob() *HadoopJob {
	if x, ok := m.GetJobType().(*OrderedJob_HadoopJob); ok {
		return x.HadoopJob
	}
	return nil
}

func (m *OrderedJob) GetSparkJob() *SparkJob {
	if x, ok := m.GetJobType().(*OrderedJob_SparkJob); ok {
		return x.SparkJob
	}
	return nil
}

func (m *OrderedJob) GetPysparkJob() *PySparkJob {
	if x, ok := m.GetJobType().(*OrderedJob_PysparkJob); ok {
		return x.PysparkJob
	}
	return nil
}

func (m *OrderedJob) GetHiveJob() *HiveJob {
	if x, ok := m.GetJobType().(*OrderedJob_HiveJob); ok {
		return x.HiveJob
	}
	return nil
}

func (m *OrderedJob) GetPigJob() *PigJob {
	if x, ok := m.GetJobType().(*OrderedJob_PigJob); ok {
		return x.PigJob
	}
	return nil
}

func (m *OrderedJob) GetSparkSqlJob() *SparkSqlJob {
	if x, ok := m.GetJobType().(*OrderedJob_SparkSqlJob); ok {
		return x.SparkSqlJob
	}
	return nil
}

func (m *OrderedJob) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *OrderedJob) GetScheduling() *JobScheduling {
	if m != nil {
		return m.Scheduling
	}
	return nil
}

func (m *OrderedJob) GetPrerequisiteStepIds() []string {
	if m != nil {
		return m.PrerequisiteStepIds
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OrderedJob) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OrderedJob_HadoopJob)(nil),
		(*OrderedJob_SparkJob)(nil),
		(*OrderedJob_PysparkJob)(nil),
		(*OrderedJob_HiveJob)(nil),
		(*OrderedJob_PigJob)(nil),
		(*OrderedJob_SparkSqlJob)(nil),
	}
}

// A configurable parameter that replaces one or more fields in the template.
// Parameterizable fields:
// - Labels
// - File uris
// - Job properties
// - Job arguments
// - Script variables
// - Main class (in HadoopJob and SparkJob)
// - Zone (in ClusterSelector)
type TemplateParameter struct {
	// Required.  Parameter name.
	// The parameter name is used as the key, and paired with the
	// parameter value, which are passed to the template when the template
	// is instantiated.
	// The name must contain only capital letters (A-Z), numbers (0-9), and
	// underscores (_), and must not start with a number. The maximum length is
	// 40 characters.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Paths to all fields that the parameter replaces.
	// A field is allowed to appear in at most one parameter's list of field
	// paths.
	//
	// A field path is similar in syntax to a [google.protobuf.FieldMask][google.protobuf.FieldMask].
	// For example, a field path that references the zone field of a workflow
	// template's cluster selector would be specified as
	// `placement.clusterSelector.zone`.
	//
	// Also, field paths can reference fields using the following syntax:
	//
	// * Values in maps can be referenced by key:
	//     * labels['key']
	//     * placement.clusterSelector.clusterLabels['key']
	//     * placement.managedCluster.labels['key']
	//     * placement.clusterSelector.clusterLabels['key']
	//     * jobs['step-id'].labels['key']
	//
	// * Jobs in the jobs list can be referenced by step-id:
	//     * jobs['step-id'].hadoopJob.mainJarFileUri
	//     * jobs['step-id'].hiveJob.queryFileUri
	//     * jobs['step-id'].pySparkJob.mainPythonFileUri
	//     * jobs['step-id'].hadoopJob.jarFileUris[0]
	//     * jobs['step-id'].hadoopJob.archiveUris[0]
	//     * jobs['step-id'].hadoopJob.fileUris[0]
	//     * jobs['step-id'].pySparkJob.pythonFileUris[0]
	//
	// * Items in repeated fields can be referenced by a zero-based index:
	//     * jobs['step-id'].sparkJob.args[0]
	//
	// * Other examples:
	//     * jobs['step-id'].hadoopJob.properties['key']
	//     * jobs['step-id'].hadoopJob.args[0]
	//     * jobs['step-id'].hiveJob.scriptVariables['key']
	//     * jobs['step-id'].hadoopJob.mainJarFileUri
	//     * placement.clusterSelector.zone
	//
	// It may not be possible to parameterize maps and repeated fields in their
	// entirety since only individual map values and individual items in repeated
	// fields can be referenced. For example, the following field paths are
	// invalid:
	//
	// - placement.clusterSelector.clusterLabels
	// - jobs['step-id'].sparkJob.args
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	// Optional. Brief description of the parameter.
	// Must not exceed 1024 characters.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. Validation rules to be applied to this parameter's value.
	Validation           *ParameterValidation `protobuf:"bytes,4,opt,name=validation,proto3" json:"validation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TemplateParameter) Reset()         { *m = TemplateParameter{} }
func (m *TemplateParameter) String() string { return proto.CompactTextString(m) }
func (*TemplateParameter) ProtoMessage()    {}
func (*TemplateParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{5}
}

func (m *TemplateParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TemplateParameter.Unmarshal(m, b)
}
func (m *TemplateParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TemplateParameter.Marshal(b, m, deterministic)
}
func (m *TemplateParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateParameter.Merge(m, src)
}
func (m *TemplateParameter) XXX_Size() int {
	return xxx_messageInfo_TemplateParameter.Size(m)
}
func (m *TemplateParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateParameter.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateParameter proto.InternalMessageInfo

func (m *TemplateParameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TemplateParameter) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *TemplateParameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TemplateParameter) GetValidation() *ParameterValidation {
	if m != nil {
		return m.Validation
	}
	return nil
}

// Configuration for parameter validation.
type ParameterValidation struct {
	// Required. The type of validation to be performed.
	//
	// Types that are valid to be assigned to ValidationType:
	//	*ParameterValidation_Regex
	//	*ParameterValidation_Values
	ValidationType       isParameterValidation_ValidationType `protobuf_oneof:"validation_type"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ParameterValidation) Reset()         { *m = ParameterValidation{} }
func (m *ParameterValidation) String() string { return proto.CompactTextString(m) }
func (*ParameterValidation) ProtoMessage()    {}
func (*ParameterValidation) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{6}
}

func (m *ParameterValidation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParameterValidation.Unmarshal(m, b)
}
func (m *ParameterValidation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParameterValidation.Marshal(b, m, deterministic)
}
func (m *ParameterValidation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParameterValidation.Merge(m, src)
}
func (m *ParameterValidation) XXX_Size() int {
	return xxx_messageInfo_ParameterValidation.Size(m)
}
func (m *ParameterValidation) XXX_DiscardUnknown() {
	xxx_messageInfo_ParameterValidation.DiscardUnknown(m)
}

var xxx_messageInfo_ParameterValidation proto.InternalMessageInfo

type isParameterValidation_ValidationType interface {
	isParameterValidation_ValidationType()
}

type ParameterValidation_Regex struct {
	Regex *RegexValidation `protobuf:"bytes,1,opt,name=regex,proto3,oneof"`
}

type ParameterValidation_Values struct {
	Values *ValueValidation `protobuf:"bytes,2,opt,name=values,proto3,oneof"`
}

func (*ParameterValidation_Regex) isParameterValidation_ValidationType() {}

func (*ParameterValidation_Values) isParameterValidation_ValidationType() {}

func (m *ParameterValidation) GetValidationType() isParameterValidation_ValidationType {
	if m != nil {
		return m.ValidationType
	}
	return nil
}

func (m *ParameterValidation) GetRegex() *RegexValidation {
	if x, ok := m.GetValidationType().(*ParameterValidation_Regex); ok {
		return x.Regex
	}
	return nil
}

func (m *ParameterValidation) GetValues() *ValueValidation {
	if x, ok := m.GetValidationType().(*ParameterValidation_Values); ok {
		return x.Values
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ParameterValidation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ParameterValidation_Regex)(nil),
		(*ParameterValidation_Values)(nil),
	}
}

// Validation based on regular expressions.
type RegexValidation struct {
	// Required. RE2 regular expressions used to validate the parameter's value.
	// The value must match the regex in its entirety (substring
	// matches are not sufficient).
	Regexes              []string `protobuf:"bytes,1,rep,name=regexes,proto3" json:"regexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegexValidation) Reset()         { *m = RegexValidation{} }
func (m *RegexValidation) String() string { return proto.CompactTextString(m) }
func (*RegexValidation) ProtoMessage()    {}
func (*RegexValidation) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{7}
}

func (m *RegexValidation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegexValidation.Unmarshal(m, b)
}
func (m *RegexValidation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegexValidation.Marshal(b, m, deterministic)
}
func (m *RegexValidation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegexValidation.Merge(m, src)
}
func (m *RegexValidation) XXX_Size() int {
	return xxx_messageInfo_RegexValidation.Size(m)
}
func (m *RegexValidation) XXX_DiscardUnknown() {
	xxx_messageInfo_RegexValidation.DiscardUnknown(m)
}

var xxx_messageInfo_RegexValidation proto.InternalMessageInfo

func (m *RegexValidation) GetRegexes() []string {
	if m != nil {
		return m.Regexes
	}
	return nil
}

// Validation based on a list of allowed values.
type ValueValidation struct {
	// Required. List of allowed values for the parameter.
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueValidation) Reset()         { *m = ValueValidation{} }
func (m *ValueValidation) String() string { return proto.CompactTextString(m) }
func (*ValueValidation) ProtoMessage()    {}
func (*ValueValidation) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{8}
}

func (m *ValueValidation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueValidation.Unmarshal(m, b)
}
func (m *ValueValidation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueValidation.Marshal(b, m, deterministic)
}
func (m *ValueValidation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueValidation.Merge(m, src)
}
func (m *ValueValidation) XXX_Size() int {
	return xxx_messageInfo_ValueValidation.Size(m)
}
func (m *ValueValidation) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueValidation.DiscardUnknown(m)
}

var xxx_messageInfo_ValueValidation proto.InternalMessageInfo

func (m *ValueValidation) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// A Cloud Dataproc workflow template resource.
type WorkflowMetadata struct {
	// Output only. The "resource name" of the template.
	Template string `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	// Output only. The version of template at the time of
	// workflow instantiation.
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// Output only. The create cluster operation metadata.
	CreateCluster *ClusterOperation `protobuf:"bytes,3,opt,name=create_cluster,json=createCluster,proto3" json:"create_cluster,omitempty"`
	// Output only. The workflow graph.
	Graph *WorkflowGraph `protobuf:"bytes,4,opt,name=graph,proto3" json:"graph,omitempty"`
	// Output only. The delete cluster operation metadata.
	DeleteCluster *ClusterOperation `protobuf:"bytes,5,opt,name=delete_cluster,json=deleteCluster,proto3" json:"delete_cluster,omitempty"`
	// Output only. The workflow state.
	State WorkflowMetadata_State `protobuf:"varint,6,opt,name=state,proto3,enum=google.cloud.dataproc.v1beta2.WorkflowMetadata_State" json:"state,omitempty"`
	// Output only. The name of the target cluster.
	ClusterName string `protobuf:"bytes,7,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// Map from parameter names to values that were used for those parameters.
	Parameters map[string]string `protobuf:"bytes,8,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Output only. Workflow start time.
	StartTime *timestamp.Timestamp `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Output only. Workflow end time.
	EndTime *timestamp.Timestamp `protobuf:"bytes,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Output only. The UUID of target cluster.
	ClusterUuid          string   `protobuf:"bytes,11,opt,name=cluster_uuid,json=clusterUuid,proto3" json:"cluster_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowMetadata) Reset()         { *m = WorkflowMetadata{} }
func (m *WorkflowMetadata) String() string { return proto.CompactTextString(m) }
func (*WorkflowMetadata) ProtoMessage()    {}
func (*WorkflowMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{9}
}

func (m *WorkflowMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowMetadata.Unmarshal(m, b)
}
func (m *WorkflowMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowMetadata.Marshal(b, m, deterministic)
}
func (m *WorkflowMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowMetadata.Merge(m, src)
}
func (m *WorkflowMetadata) XXX_Size() int {
	return xxx_messageInfo_WorkflowMetadata.Size(m)
}
func (m *WorkflowMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowMetadata proto.InternalMessageInfo

func (m *WorkflowMetadata) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *WorkflowMetadata) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *WorkflowMetadata) GetCreateCluster() *ClusterOperation {
	if m != nil {
		return m.CreateCluster
	}
	return nil
}

func (m *WorkflowMetadata) GetGraph() *WorkflowGraph {
	if m != nil {
		return m.Graph
	}
	return nil
}

func (m *WorkflowMetadata) GetDeleteCluster() *ClusterOperation {
	if m != nil {
		return m.DeleteCluster
	}
	return nil
}

func (m *WorkflowMetadata) GetState() WorkflowMetadata_State {
	if m != nil {
		return m.State
	}
	return WorkflowMetadata_UNKNOWN
}

func (m *WorkflowMetadata) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *WorkflowMetadata) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *WorkflowMetadata) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *WorkflowMetadata) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *WorkflowMetadata) GetClusterUuid() string {
	if m != nil {
		return m.ClusterUuid
	}
	return ""
}

// The cluster operation triggered by a workflow.
type ClusterOperation struct {
	// Output only. The id of the cluster operation.
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Output only. Error, if operation failed.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Output only. Indicates the operation is done.
	Done                 bool     `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterOperation) Reset()         { *m = ClusterOperation{} }
func (m *ClusterOperation) String() string { return proto.CompactTextString(m) }
func (*ClusterOperation) ProtoMessage()    {}
func (*ClusterOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{10}
}

func (m *ClusterOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterOperation.Unmarshal(m, b)
}
func (m *ClusterOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterOperation.Marshal(b, m, deterministic)
}
func (m *ClusterOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterOperation.Merge(m, src)
}
func (m *ClusterOperation) XXX_Size() int {
	return xxx_messageInfo_ClusterOperation.Size(m)
}
func (m *ClusterOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterOperation proto.InternalMessageInfo

func (m *ClusterOperation) GetOperationId() string {
	if m != nil {
		return m.OperationId
	}
	return ""
}

func (m *ClusterOperation) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ClusterOperation) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

// The workflow graph.
type WorkflowGraph struct {
	// Output only. The workflow nodes.
	Nodes                []*WorkflowNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WorkflowGraph) Reset()         { *m = WorkflowGraph{} }
func (m *WorkflowGraph) String() string { return proto.CompactTextString(m) }
func (*WorkflowGraph) ProtoMessage()    {}
func (*WorkflowGraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{11}
}

func (m *WorkflowGraph) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowGraph.Unmarshal(m, b)
}
func (m *WorkflowGraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowGraph.Marshal(b, m, deterministic)
}
func (m *WorkflowGraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowGraph.Merge(m, src)
}
func (m *WorkflowGraph) XXX_Size() int {
	return xxx_messageInfo_WorkflowGraph.Size(m)
}
func (m *WorkflowGraph) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowGraph.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowGraph proto.InternalMessageInfo

func (m *WorkflowGraph) GetNodes() []*WorkflowNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

// The workflow node.
type WorkflowNode struct {
	// Output only. The name of the node.
	StepId string `protobuf:"bytes,1,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	// Output only. Node's prerequisite nodes.
	PrerequisiteStepIds []string `protobuf:"bytes,2,rep,name=prerequisite_step_ids,json=prerequisiteStepIds,proto3" json:"prerequisite_step_ids,omitempty"`
	// Output only. The job id; populated after the node enters RUNNING state.
	JobId string `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Output only. The node state.
	State WorkflowNode_NodeState `protobuf:"varint,5,opt,name=state,proto3,enum=google.cloud.dataproc.v1beta2.WorkflowNode_NodeState" json:"state,omitempty"`
	// Output only. The error detail.
	Error                string   `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowNode) Reset()         { *m = WorkflowNode{} }
func (m *WorkflowNode) String() string { return proto.CompactTextString(m) }
func (*WorkflowNode) ProtoMessage()    {}
func (*WorkflowNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{12}
}

func (m *WorkflowNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowNode.Unmarshal(m, b)
}
func (m *WorkflowNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowNode.Marshal(b, m, deterministic)
}
func (m *WorkflowNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowNode.Merge(m, src)
}
func (m *WorkflowNode) XXX_Size() int {
	return xxx_messageInfo_WorkflowNode.Size(m)
}
func (m *WorkflowNode) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowNode.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowNode proto.InternalMessageInfo

func (m *WorkflowNode) GetStepId() string {
	if m != nil {
		return m.StepId
	}
	return ""
}

func (m *WorkflowNode) GetPrerequisiteStepIds() []string {
	if m != nil {
		return m.PrerequisiteStepIds
	}
	return nil
}

func (m *WorkflowNode) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *WorkflowNode) GetState() WorkflowNode_NodeState {
	if m != nil {
		return m.State
	}
	return WorkflowNode_NODE_STATUS_UNSPECIFIED
}

func (m *WorkflowNode) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// A request to create a workflow template.
type CreateWorkflowTemplateRequest struct {
	// Required. The "resource name" of the region, as described
	// in https://cloud.google.com/apis/design/resource_names of the form
	// `projects/{project_id}/regions/{region}`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The Dataproc workflow template to create.
	Template             *WorkflowTemplate `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateWorkflowTemplateRequest) Reset()         { *m = CreateWorkflowTemplateRequest{} }
func (m *CreateWorkflowTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowTemplateRequest) ProtoMessage()    {}
func (*CreateWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{13}
}

func (m *CreateWorkflowTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowTemplateRequest.Unmarshal(m, b)
}
func (m *CreateWorkflowTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowTemplateRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowTemplateRequest.Merge(m, src)
}
func (m *CreateWorkflowTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowTemplateRequest.Size(m)
}
func (m *CreateWorkflowTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowTemplateRequest proto.InternalMessageInfo

func (m *CreateWorkflowTemplateRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateWorkflowTemplateRequest) GetTemplate() *WorkflowTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

// A request to fetch a workflow template.
type GetWorkflowTemplateRequest struct {
	// Required. The "resource name" of the workflow template, as described
	// in https://cloud.google.com/apis/design/resource_names of the form
	// `projects/{project_id}/regions/{region}/workflowTemplates/{template_id}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. The version of workflow template to retrieve. Only previously
	// instatiated versions can be retrieved.
	//
	// If unspecified, retrieves the current version.
	Version              int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowTemplateRequest) Reset()         { *m = GetWorkflowTemplateRequest{} }
func (m *GetWorkflowTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowTemplateRequest) ProtoMessage()    {}
func (*GetWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{14}
}

func (m *GetWorkflowTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowTemplateRequest.Unmarshal(m, b)
}
func (m *GetWorkflowTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowTemplateRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkflowTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowTemplateRequest.Merge(m, src)
}
func (m *GetWorkflowTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowTemplateRequest.Size(m)
}
func (m *GetWorkflowTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowTemplateRequest proto.InternalMessageInfo

func (m *GetWorkflowTemplateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetWorkflowTemplateRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// A request to instantiate a workflow template.
type InstantiateWorkflowTemplateRequest struct {
	// Required. The "resource name" of the workflow template, as described
	// in https://cloud.google.com/apis/design/resource_names of the form
	// `projects/{project_id}/regions/{region}/workflowTemplates/{template_id}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. The version of workflow template to instantiate. If specified,
	// the workflow will be instantiated only if the current version of
	// the workflow template has the supplied version.
	//
	// This option cannot be used to instantiate a previous version of
	// workflow template.
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// Deprecated. Please use `request_id` field instead.
	InstanceId string `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // Deprecated: Do not use.
	// Optional. A tag that prevents multiple concurrent workflow
	// instances with the same tag from running. This mitigates risk of
	// concurrent instances started due to retries.
	//
	// It is recommended to always set this value to a
	// [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
	//
	// The tag must contain only letters (a-z, A-Z), numbers (0-9),
	// underscores (_), and hyphens (-). The maximum length is 40 characters.
	RequestId string `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Optional. Map from parameter names to values that should be used for those
	// parameters. Values may not exceed 100 characters.
	Parameters           map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InstantiateWorkflowTemplateRequest) Reset()         { *m = InstantiateWorkflowTemplateRequest{} }
func (m *InstantiateWorkflowTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*InstantiateWorkflowTemplateRequest) ProtoMessage()    {}
func (*InstantiateWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{15}
}

func (m *InstantiateWorkflowTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstantiateWorkflowTemplateRequest.Unmarshal(m, b)
}
func (m *InstantiateWorkflowTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstantiateWorkflowTemplateRequest.Marshal(b, m, deterministic)
}
func (m *InstantiateWorkflowTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstantiateWorkflowTemplateRequest.Merge(m, src)
}
func (m *InstantiateWorkflowTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_InstantiateWorkflowTemplateRequest.Size(m)
}
func (m *InstantiateWorkflowTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstantiateWorkflowTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstantiateWorkflowTemplateRequest proto.InternalMessageInfo

func (m *InstantiateWorkflowTemplateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstantiateWorkflowTemplateRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// Deprecated: Do not use.
func (m *InstantiateWorkflowTemplateRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstantiateWorkflowTemplateRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *InstantiateWorkflowTemplateRequest) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

// A request to instantiate an inline workflow template.
type InstantiateInlineWorkflowTemplateRequest struct {
	// Required. The "resource name" of the workflow template region, as described
	// in https://cloud.google.com/apis/design/resource_names of the form
	// `projects/{project_id}/regions/{region}`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The workflow template to instantiate.
	Template *WorkflowTemplate `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	// Deprecated. Please use `request_id` field instead.
	InstanceId string `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Optional. A tag that prevents multiple concurrent workflow
	// instances with the same tag from running. This mitigates risk of
	// concurrent instances started due to retries.
	//
	// It is recommended to always set this value to a
	// [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
	//
	// The tag must contain only letters (a-z, A-Z), numbers (0-9),
	// underscores (_), and hyphens (-). The maximum length is 40 characters.
	RequestId            string   `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstantiateInlineWorkflowTemplateRequest) Reset() {
	*m = InstantiateInlineWorkflowTemplateRequest{}
}
func (m *InstantiateInlineWorkflowTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*InstantiateInlineWorkflowTemplateRequest) ProtoMessage()    {}
func (*InstantiateInlineWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{16}
}

func (m *InstantiateInlineWorkflowTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstantiateInlineWorkflowTemplateRequest.Unmarshal(m, b)
}
func (m *InstantiateInlineWorkflowTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstantiateInlineWorkflowTemplateRequest.Marshal(b, m, deterministic)
}
func (m *InstantiateInlineWorkflowTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstantiateInlineWorkflowTemplateRequest.Merge(m, src)
}
func (m *InstantiateInlineWorkflowTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_InstantiateInlineWorkflowTemplateRequest.Size(m)
}
func (m *InstantiateInlineWorkflowTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstantiateInlineWorkflowTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstantiateInlineWorkflowTemplateRequest proto.InternalMessageInfo

func (m *InstantiateInlineWorkflowTemplateRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *InstantiateInlineWorkflowTemplateRequest) GetTemplate() *WorkflowTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *InstantiateInlineWorkflowTemplateRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstantiateInlineWorkflowTemplateRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// A request to update a workflow template.
type UpdateWorkflowTemplateRequest struct {
	// Required. The updated workflow template.
	//
	// The `template.version` field must match the current version.
	Template             *WorkflowTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateWorkflowTemplateRequest) Reset()         { *m = UpdateWorkflowTemplateRequest{} }
func (m *UpdateWorkflowTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkflowTemplateRequest) ProtoMessage()    {}
func (*UpdateWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{17}
}

func (m *UpdateWorkflowTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkflowTemplateRequest.Unmarshal(m, b)
}
func (m *UpdateWorkflowTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkflowTemplateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWorkflowTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkflowTemplateRequest.Merge(m, src)
}
func (m *UpdateWorkflowTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkflowTemplateRequest.Size(m)
}
func (m *UpdateWorkflowTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkflowTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkflowTemplateRequest proto.InternalMessageInfo

func (m *UpdateWorkflowTemplateRequest) GetTemplate() *WorkflowTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

// A request to list workflow templates in a project.
type ListWorkflowTemplatesRequest struct {
	// Required. The "resource name" of the region, as described
	// in https://cloud.google.com/apis/design/resource_names of the form
	// `projects/{project_id}/regions/{region}`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Optional. The maximum number of results to return in each response.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. The page token, returned by a previous call, to request the
	// next page of results.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWorkflowTemplatesRequest) Reset()         { *m = ListWorkflowTemplatesRequest{} }
func (m *ListWorkflowTemplatesRequest) String() string { return proto.CompactTextString(m) }
func (*ListWorkflowTemplatesRequest) ProtoMessage()    {}
func (*ListWorkflowTemplatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{18}
}

func (m *ListWorkflowTemplatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkflowTemplatesRequest.Unmarshal(m, b)
}
func (m *ListWorkflowTemplatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkflowTemplatesRequest.Marshal(b, m, deterministic)
}
func (m *ListWorkflowTemplatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkflowTemplatesRequest.Merge(m, src)
}
func (m *ListWorkflowTemplatesRequest) XXX_Size() int {
	return xxx_messageInfo_ListWorkflowTemplatesRequest.Size(m)
}
func (m *ListWorkflowTemplatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkflowTemplatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkflowTemplatesRequest proto.InternalMessageInfo

func (m *ListWorkflowTemplatesRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListWorkflowTemplatesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListWorkflowTemplatesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// A response to a request to list workflow templates in a project.
type ListWorkflowTemplatesResponse struct {
	// Output only. WorkflowTemplates list.
	Templates []*WorkflowTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	// Output only. This token is included in the response if there are more
	// results to fetch. To fetch additional results, provide this value as the
	// page_token in a subsequent <code>ListWorkflowTemplatesRequest</code>.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWorkflowTemplatesResponse) Reset()         { *m = ListWorkflowTemplatesResponse{} }
func (m *ListWorkflowTemplatesResponse) String() string { return proto.CompactTextString(m) }
func (*ListWorkflowTemplatesResponse) ProtoMessage()    {}
func (*ListWorkflowTemplatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{19}
}

func (m *ListWorkflowTemplatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkflowTemplatesResponse.Unmarshal(m, b)
}
func (m *ListWorkflowTemplatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkflowTemplatesResponse.Marshal(b, m, deterministic)
}
func (m *ListWorkflowTemplatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkflowTemplatesResponse.Merge(m, src)
}
func (m *ListWorkflowTemplatesResponse) XXX_Size() int {
	return xxx_messageInfo_ListWorkflowTemplatesResponse.Size(m)
}
func (m *ListWorkflowTemplatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkflowTemplatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkflowTemplatesResponse proto.InternalMessageInfo

func (m *ListWorkflowTemplatesResponse) GetTemplates() []*WorkflowTemplate {
	if m != nil {
		return m.Templates
	}
	return nil
}

func (m *ListWorkflowTemplatesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// A request to delete a workflow template.
//
// Currently started workflows will remain running.
type DeleteWorkflowTemplateRequest struct {
	// Required. The "resource name" of the workflow template, as described
	// in https://cloud.google.com/apis/design/resource_names of the form
	// `projects/{project_id}/regions/{region}/workflowTemplates/{template_id}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. The version of workflow template to delete. If specified,
	// will only delete the template if the current server version matches
	// specified version.
	Version              int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteWorkflowTemplateRequest) Reset()         { *m = DeleteWorkflowTemplateRequest{} }
func (m *DeleteWorkflowTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteWorkflowTemplateRequest) ProtoMessage()    {}
func (*DeleteWorkflowTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d658bedf9bdbee, []int{20}
}

func (m *DeleteWorkflowTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteWorkflowTemplateRequest.Unmarshal(m, b)
}
func (m *DeleteWorkflowTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteWorkflowTemplateRequest.Marshal(b, m, deterministic)
}
func (m *DeleteWorkflowTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteWorkflowTemplateRequest.Merge(m, src)
}
func (m *DeleteWorkflowTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteWorkflowTemplateRequest.Size(m)
}
func (m *DeleteWorkflowTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteWorkflowTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteWorkflowTemplateRequest proto.InternalMessageInfo

func (m *DeleteWorkflowTemplateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteWorkflowTemplateRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterEnum("google.cloud.dataproc.v1beta2.WorkflowMetadata_State", WorkflowMetadata_State_name, WorkflowMetadata_State_value)
	proto.RegisterEnum("google.cloud.dataproc.v1beta2.WorkflowNode_NodeState", WorkflowNode_NodeState_name, WorkflowNode_NodeState_value)
	proto.RegisterType((*WorkflowTemplate)(nil), "google.cloud.dataproc.v1beta2.WorkflowTemplate")
	proto.RegisterMapType((map[string]string)(nil), "google.cloud.dataproc.v1beta2.WorkflowTemplate.LabelsEntry")
	proto.RegisterType((*WorkflowTemplatePlacement)(nil), "google.cloud.dataproc.v1beta2.WorkflowTemplatePlacement")
	proto.RegisterType((*ManagedCluster)(nil), "google.cloud.dataproc.v1beta2.ManagedCluster")
	proto.RegisterMapType((map[string]string)(nil), "google.cloud.dataproc.v1beta2.ManagedCluster.LabelsEntry")
	proto.RegisterType((*ClusterSelector)(nil), "google.cloud.dataproc.v1beta2.ClusterSelector")
	proto.RegisterMapType((map[string]string)(nil), "google.cloud.dataproc.v1beta2.ClusterSelector.ClusterLabelsEntry")
	proto.RegisterType((*OrderedJob)(nil), "google.cloud.dataproc.v1beta2.OrderedJob")
	proto.RegisterMapType((map[string]string)(nil), "google.cloud.dataproc.v1beta2.OrderedJob.LabelsEntry")
	proto.RegisterType((*TemplateParameter)(nil), "google.cloud.dataproc.v1beta2.TemplateParameter")
	proto.RegisterType((*ParameterValidation)(nil), "google.cloud.dataproc.v1beta2.ParameterValidation")
	proto.RegisterType((*RegexValidation)(nil), "google.cloud.dataproc.v1beta2.RegexValidation")
	proto.RegisterType((*ValueValidation)(nil), "google.cloud.dataproc.v1beta2.ValueValidation")
	proto.RegisterType((*WorkflowMetadata)(nil), "google.cloud.dataproc.v1beta2.WorkflowMetadata")
	proto.RegisterMapType((map[string]string)(nil), "google.cloud.dataproc.v1beta2.WorkflowMetadata.ParametersEntry")
	proto.RegisterType((*ClusterOperation)(nil), "google.cloud.dataproc.v1beta2.ClusterOperation")
	proto.RegisterType((*WorkflowGraph)(nil), "google.cloud.dataproc.v1beta2.WorkflowGraph")
	proto.RegisterType((*WorkflowNode)(nil), "google.cloud.dataproc.v1beta2.WorkflowNode")
	proto.RegisterType((*CreateWorkflowTemplateRequest)(nil), "google.cloud.dataproc.v1beta2.CreateWorkflowTemplateRequest")
	proto.RegisterType((*GetWorkflowTemplateRequest)(nil), "google.cloud.dataproc.v1beta2.GetWorkflowTemplateRequest")
	proto.RegisterType((*InstantiateWorkflowTemplateRequest)(nil), "google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest")
	proto.RegisterMapType((map[string]string)(nil), "google.cloud.dataproc.v1beta2.InstantiateWorkflowTemplateRequest.ParametersEntry")
	proto.RegisterType((*InstantiateInlineWorkflowTemplateRequest)(nil), "google.cloud.dataproc.v1beta2.InstantiateInlineWorkflowTemplateRequest")
	proto.RegisterType((*UpdateWorkflowTemplateRequest)(nil), "google.cloud.dataproc.v1beta2.UpdateWorkflowTemplateRequest")
	proto.RegisterType((*ListWorkflowTemplatesRequest)(nil), "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesRequest")
	proto.RegisterType((*ListWorkflowTemplatesResponse)(nil), "google.cloud.dataproc.v1beta2.ListWorkflowTemplatesResponse")
	proto.RegisterType((*DeleteWorkflowTemplateRequest)(nil), "google.cloud.dataproc.v1beta2.DeleteWorkflowTemplateRequest")
}

func init() {
	proto.RegisterFile("google/cloud/dataproc/v1beta2/workflow_templates.proto", fileDescriptor_49d658bedf9bdbee)
}

var fileDescriptor_49d658bedf9bdbee = []byte{
	// 2038 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0xcf, 0x6f, 0xe3, 0x58,
	0x1d, 0xaf, 0xdd, 0x26, 0x4d, 0xbe, 0x99, 0x36, 0xd9, 0x37, 0x4c, 0x27, 0x64, 0xb6, 0xda, 0x8e,
	0x57, 0x2c, 0xdd, 0xee, 0x90, 0x40, 0xd0, 0xa2, 0x99, 0xce, 0x8c, 0xd8, 0xa6, 0x49, 0xa7, 0x69,
	0xd3, 0x34, 0xeb, 0xb4, 0x5d, 0x34, 0x1c, 0x22, 0x27, 0x7e, 0x4d, 0xdd, 0x3a, 0xb6, 0x6b, 0x3b,
	0xdd, 0xe9, 0xa0, 0x45, 0x02, 0xad, 0xc4, 0x85, 0x13, 0x2b, 0xed, 0x05, 0x2d, 0x9c, 0x38, 0xc3,
	0x05, 0x21, 0x71, 0x04, 0x21, 0x71, 0x43, 0x88, 0x3f, 0x60, 0x2e, 0x9c, 0xb9, 0x72, 0x45, 0xef,
	0x87, 0x1d, 0xe7, 0xa7, 0x93, 0x16, 0x69, 0x2f, 0x95, 0xdf, 0xcb, 0xfb, 0x7c, 0xde, 0xf7, 0xf7,
	0xf7, 0x6b, 0x17, 0x7e, 0xd0, 0x36, 0xcd, 0xb6, 0x8e, 0x73, 0x2d, 0xdd, 0xec, 0xaa, 0x39, 0x55,
	0x71, 0x15, 0xcb, 0x36, 0x5b, 0xb9, 0xab, 0xef, 0x35, 0xb1, 0xab, 0xe4, 0x73, 0x9f, 0x9a, 0xf6,
	0xc5, 0xa9, 0x6e, 0x7e, 0xda, 0x70, 0x71, 0xc7, 0xd2, 0x15, 0x17, 0x3b, 0x59, 0xcb, 0x36, 0x5d,
	0x13, 0xad, 0x32, 0x5c, 0x96, 0xe2, 0xb2, 0x1e, 0x2e, 0xcb, 0x71, 0x99, 0xb7, 0x39, 0xad, 0x62,
	0x69, 0x39, 0xc5, 0x30, 0x4c, 0x57, 0x71, 0x35, 0xd3, 0xe0, 0xe0, 0xcc, 0xa3, 0xc9, 0x97, 0xb6,
	0xf4, 0xae, 0xe3, 0x62, 0xdb, 0x3b, 0xbd, 0x3e, 0xf9, 0xf4, 0xb9, 0xd9, 0xf4, 0x4e, 0xbe, 0xcb,
	0x4f, 0xea, 0xa6, 0xd1, 0xb6, 0xbb, 0x86, 0xa1, 0x19, 0xed, 0x9c, 0x69, 0x61, 0xbb, 0xef, 0xf2,
	0x07, 0xfc, 0x10, 0x5d, 0x35, 0xbb, 0xa7, 0x39, 0xdc, 0xb1, 0xdc, 0x6b, 0xfe, 0xe3, 0x3b, 0x83,
	0x3f, 0xba, 0x5a, 0x07, 0x3b, 0xae, 0xd2, 0xb1, 0xd8, 0x01, 0xe9, 0xaf, 0x0b, 0x90, 0xfa, 0x84,
	0x1b, 0xe5, 0x88, 0xdb, 0x04, 0x2d, 0x83, 0xa8, 0xa9, 0x69, 0x71, 0x4d, 0x58, 0x8f, 0xcb, 0xa2,
	0xa6, 0x22, 0x04, 0x0b, 0x86, 0xd2, 0xc1, 0x69, 0x81, 0xee, 0xd0, 0x67, 0x94, 0x86, 0xc5, 0x2b,
	0x6c, 0x3b, 0x9a, 0x69, 0xa4, 0xe7, 0xd7, 0x84, 0xf5, 0x88, 0xec, 0x2d, 0xd1, 0x53, 0x48, 0xb4,
	0x6c, 0xac, 0xb8, 0xb8, 0x41, 0x2e, 0x4b, 0x2f, 0xac, 0x09, 0xeb, 0x89, 0x7c, 0x26, 0xcb, 0x0d,
	0xec, 0x49, 0x92, 0x3d, 0xf2, 0x24, 0x91, 0x81, 0x1d, 0x27, 0x1b, 0x04, 0xdc, 0xb5, 0x54, 0x1f,
	0x1c, 0x09, 0x07, 0xb3, 0xe3, 0x14, 0x5c, 0x87, 0xa8, 0xae, 0x34, 0xb1, 0xee, 0xa4, 0xa3, 0x6b,
	0xf3, 0xeb, 0x89, 0xfc, 0xd3, 0xec, 0x44, 0xaf, 0x66, 0x07, 0x15, 0xcf, 0x56, 0x28, 0xba, 0x64,
	0xb8, 0xf6, 0xb5, 0xcc, 0xa9, 0xd0, 0x09, 0xc4, 0x2d, 0x5d, 0x69, 0xe1, 0x0e, 0x36, 0xdc, 0xf4,
	0x22, 0x95, 0xe7, 0xf1, 0x8c, 0xbc, 0x35, 0x0f, 0x2f, 0xf7, 0xa8, 0xd0, 0x73, 0x58, 0x20, 0xae,
	0x4e, 0xc7, 0xa8, 0xa8, 0xef, 0x87, 0x50, 0x1e, 0xda, 0x2a, 0xb6, 0xb1, 0xba, 0x67, 0x36, 0x65,
	0x0a, 0x43, 0x35, 0x00, 0x4b, 0xb1, 0x95, 0x0e, 0x26, 0x91, 0x95, 0x8e, 0x53, 0x92, 0xef, 0x86,
	0x90, 0xf8, 0xf2, 0x78, 0x40, 0x39, 0xc0, 0x91, 0x79, 0x02, 0x89, 0x80, 0xfe, 0x28, 0x05, 0xf3,
	0x17, 0xf8, 0x9a, 0xfb, 0x9c, 0x3c, 0xa2, 0x6f, 0x40, 0xe4, 0x4a, 0xd1, 0xbb, 0x98, 0x47, 0x06,
	0x5b, 0x6c, 0x8a, 0x8f, 0x05, 0xe9, 0x8d, 0x00, 0xdf, 0x1c, 0xab, 0x34, 0xfa, 0x11, 0x24, 0x3b,
	0x8a, 0xa1, 0xb4, 0xb1, 0xda, 0xe0, 0xa9, 0x40, 0x59, 0x13, 0xf9, 0xef, 0x84, 0xc8, 0x7b, 0xc0,
	0x50, 0xdb, 0x0c, 0xb4, 0x3b, 0x27, 0x2f, 0x77, 0xfa, 0x76, 0xd0, 0x8f, 0x21, 0xc5, 0x19, 0x1b,
	0x0e, 0xd6, 0x71, 0xcb, 0x35, 0x6d, 0x2a, 0x5c, 0x22, 0x9f, 0x0d, 0xa1, 0xe6, 0x0c, 0x75, 0x8e,
	0xda, 0x9d, 0x93, 0x93, 0xad, 0xfe, 0xad, 0x42, 0x22, 0xe0, 0x78, 0xe9, 0x17, 0x22, 0x2c, 0xf7,
	0x8b, 0x83, 0x1e, 0xc2, 0x1d, 0xef, 0x72, 0x9a, 0x1d, 0xcc, 0x2a, 0x09, 0xbe, 0x57, 0x25, 0x49,
	0x52, 0x84, 0x68, 0xcb, 0x34, 0x4e, 0xb5, 0x36, 0xcd, 0x91, 0x44, 0xfe, 0xd1, 0x74, 0x52, 0x6d,
	0x53, 0x8c, 0xcc, 0xb1, 0xe8, 0x63, 0x3f, 0xac, 0x17, 0xa8, 0x9b, 0x9f, 0xcc, 0x64, 0xb6, 0x51,
	0x41, 0x7d, 0x1b, 0x5f, 0xff, 0x53, 0x80, 0xe4, 0x80, 0xf5, 0x48, 0x81, 0x78, 0x6d, 0x1a, 0x7e,
	0x81, 0x20, 0xcf, 0xe8, 0x0c, 0x96, 0x3d, 0xf3, 0x70, 0xe9, 0x45, 0x2a, 0xfd, 0xd6, 0x6c, 0x9e,
	0xf1, 0xd6, 0x41, 0x2d, 0x96, 0x5a, 0xc1, 0xbd, 0xcc, 0x47, 0x80, 0x86, 0x0f, 0xcd, 0xa4, 0xd3,
	0x7f, 0x23, 0x00, 0xbd, 0x0c, 0x43, 0xf7, 0x61, 0xd1, 0x71, 0xb1, 0xd5, 0xd0, 0x54, 0x0e, 0x8f,
	0x92, 0x65, 0x59, 0x45, 0x65, 0x80, 0x33, 0x45, 0x35, 0x4d, 0xab, 0x71, 0x6e, 0x36, 0x79, 0xa4,
	0xad, 0x87, 0xe8, 0xb3, 0x4b, 0x01, 0x7b, 0x66, 0x73, 0x77, 0x4e, 0x8e, 0x9f, 0x79, 0x0b, 0xb4,
	0x03, 0x71, 0xc7, 0x52, 0xec, 0x0b, 0xca, 0xc4, 0xa2, 0xe3, 0xdb, 0x21, 0x4c, 0x75, 0x72, 0x9e,
	0x11, 0xc5, 0x1c, 0xfe, 0x8c, 0x2a, 0x90, 0xb0, 0xae, 0x7b, 0x4c, 0xac, 0xda, 0x86, 0x55, 0x93,
	0xda, 0x75, 0x80, 0x0b, 0x38, 0x9e, 0xb0, 0x6d, 0x43, 0xec, 0x4c, 0xbb, 0xc2, 0x94, 0x8a, 0xd5,
	0xde, 0xf7, 0xc2, 0xd4, 0xd3, 0xae, 0x30, 0xe3, 0x59, 0x3c, 0x63, 0x8f, 0xe8, 0x23, 0x58, 0xb4,
	0xb4, 0x36, 0xe5, 0x88, 0x52, 0x8e, 0x6f, 0x85, 0x89, 0xa3, 0xb5, 0x19, 0x45, 0xd4, 0xa2, 0x4f,
	0xa8, 0x06, 0x4b, 0x4c, 0x25, 0xe7, 0x52, 0xa7, 0x3c, 0xac, 0xee, 0x6e, 0x4c, 0x63, 0xa0, 0xfa,
	0xa5, 0xce, 0xc8, 0x12, 0x4e, 0x6f, 0x89, 0x0e, 0xfc, 0x1c, 0x62, 0xf5, 0xf6, 0xc3, 0xa9, 0xeb,
	0xed, 0xc8, 0xa6, 0x50, 0x01, 0x70, 0x5a, 0x67, 0x58, 0xed, 0xea, 0x9a, 0xd1, 0x4e, 0xc7, 0xa7,
	0x4a, 0xee, 0x3d, 0xb3, 0x59, 0xf7, 0x31, 0x72, 0x00, 0x8f, 0xf2, 0x70, 0xcf, 0xb2, 0xb1, 0x8d,
	0x2f, 0xbb, 0x9a, 0xa3, 0xb9, 0xb8, 0xc1, 0x83, 0xcf, 0x49, 0xc3, 0xda, 0xfc, 0x7a, 0x5c, 0xbe,
	0x1b, 0xfc, 0xb1, 0x4e, 0x23, 0xf1, 0x36, 0x19, 0x5c, 0x00, 0x88, 0x9d, 0x9b, 0xcd, 0x86, 0x7b,
	0x6d, 0x61, 0xe9, 0x8f, 0x02, 0xbc, 0x35, 0xd4, 0x16, 0x46, 0x36, 0xfc, 0x15, 0x88, 0x9e, 0x6a,
	0x58, 0x57, 0x59, 0x1e, 0xc7, 0x65, 0xbe, 0x42, 0x6b, 0x90, 0x50, 0xb1, 0xd3, 0xb2, 0x35, 0xcb,
	0xf5, 0x86, 0x81, 0xb8, 0x1c, 0xdc, 0x42, 0x32, 0xc0, 0x95, 0xa2, 0x6b, 0x2a, 0x1d, 0x5b, 0x78,
	0x84, 0xe6, 0xc3, 0x42, 0xc2, 0x93, 0xe5, 0xc4, 0x47, 0xca, 0x01, 0x16, 0xe9, 0xcf, 0x02, 0xdc,
	0x1d, 0x71, 0x06, 0xed, 0x40, 0xc4, 0xc6, 0x6d, 0xfc, 0x8a, 0x77, 0x98, 0xb0, 0x36, 0x20, 0x93,
	0xb3, 0x3d, 0xf8, 0xee, 0x9c, 0xcc, 0xe0, 0x68, 0x17, 0xa2, 0xd4, 0x60, 0xce, 0x94, 0xfd, 0xe4,
	0x84, 0x1c, 0xee, 0x23, 0xe2, 0xf8, 0xc2, 0x5b, 0x90, 0xec, 0xc9, 0xcd, 0x8c, 0xfe, 0x01, 0x24,
	0x07, 0x2e, 0x26, 0xe3, 0x14, 0xbd, 0x18, 0x3b, 0x69, 0x81, 0x9a, 0xd7, 0x5b, 0x4a, 0xef, 0x43,
	0x72, 0x80, 0x9c, 0xb8, 0x82, 0x0b, 0xc7, 0xce, 0xf2, 0x95, 0xf4, 0xeb, 0x68, 0x6f, 0x98, 0x3b,
	0xc0, 0xae, 0x42, 0xa4, 0x44, 0x19, 0x88, 0x79, 0xc3, 0x2e, 0xf7, 0xa7, 0xbf, 0x0e, 0x0e, 0x71,
	0x62, 0xff, 0x10, 0x77, 0x02, 0xcb, 0x7c, 0x88, 0xf3, 0x5a, 0x36, 0xab, 0x51, 0xb9, 0xe9, 0xaa,
	0xf7, 0xa1, 0x37, 0xa5, 0xca, 0x4b, 0x8c, 0xc6, 0x6b, 0x9a, 0x05, 0x88, 0xb4, 0x6d, 0xc5, 0x3a,
	0xe3, 0x61, 0xf0, 0x68, 0xca, 0x49, 0xea, 0x05, 0xc1, 0xc8, 0x0c, 0x4a, 0x64, 0x53, 0xb1, 0x8e,
	0x03, 0xb2, 0x45, 0x6e, 0x28, 0x1b, 0xa3, 0xf1, 0x64, 0xdb, 0x87, 0x88, 0xe3, 0x12, 0x33, 0x91,
	0xaa, 0xb5, 0x1c, 0x5a, 0x22, 0x06, 0x2d, 0x9d, 0xad, 0x13, 0xb0, 0xcc, 0x38, 0x86, 0xa6, 0x83,
	0xc5, 0xe1, 0xe9, 0xa0, 0xd1, 0x37, 0xc2, 0xb1, 0xba, 0xf4, 0xc3, 0x59, 0x2f, 0xf5, 0x93, 0x80,
	0x57, 0xa8, 0x00, 0x25, 0x7a, 0x02, 0xe0, 0xb8, 0x8a, 0xed, 0xb2, 0x59, 0x3a, 0x1e, 0x3a, 0x4b,
	0xc7, 0xe9, 0x69, 0x3a, 0x4a, 0x7f, 0x08, 0x31, 0x6c, 0xa8, 0x0c, 0x08, 0xa1, 0xc0, 0x45, 0x6c,
	0xa8, 0x14, 0x16, 0xd0, 0xba, 0xdb, 0xd5, 0xd4, 0x74, 0xa2, 0x4f, 0xeb, 0xe3, 0xae, 0xa6, 0x66,
	0x9e, 0x43, 0x72, 0x40, 0xe6, 0x99, 0x5a, 0xf5, 0x63, 0x88, 0x50, 0x3b, 0xa3, 0x04, 0x2c, 0x1e,
	0x57, 0xf7, 0xab, 0x87, 0x9f, 0x54, 0x53, 0x73, 0x64, 0x51, 0x2b, 0x55, 0x8b, 0xe5, 0xea, 0x8b,
	0x94, 0x40, 0x16, 0xf2, 0x71, 0xb5, 0x4a, 0x16, 0x22, 0x8a, 0xc1, 0x42, 0xf1, 0xb0, 0x5a, 0x4a,
	0xcd, 0x4b, 0x0d, 0x48, 0x0d, 0x46, 0x00, 0x91, 0xd7, 0x7f, 0xa1, 0xea, 0xb5, 0xfb, 0x84, 0xbf,
	0x57, 0x56, 0x89, 0x28, 0xd8, 0xb6, 0xf9, 0x60, 0x19, 0x97, 0xd9, 0x82, 0x54, 0x48, 0x95, 0x4c,
	0x3c, 0x24, 0x2b, 0x62, 0x32, 0x7d, 0x96, 0x64, 0x58, 0xea, 0x8b, 0x57, 0xb4, 0x05, 0x11, 0xc3,
	0x54, 0x79, 0x9a, 0x26, 0xf2, 0x1f, 0x4c, 0xe9, 0xdb, 0xaa, 0xa9, 0x62, 0x99, 0x21, 0xa5, 0xbf,
	0x88, 0x70, 0x27, 0xb8, 0x3f, 0x7e, 0x36, 0x19, 0xdb, 0x44, 0xc4, 0xb1, 0x4d, 0x04, 0xdd, 0x83,
	0x28, 0xe9, 0x04, 0x9a, 0xca, 0xcb, 0x76, 0xe4, 0xdc, 0x6c, 0x96, 0xd5, 0x5e, 0x22, 0x44, 0x66,
	0x4a, 0x04, 0x22, 0x5f, 0x96, 0xfc, 0xe9, 0x4b, 0x04, 0xdf, 0x7e, 0xd1, 0x80, 0xfd, 0xa4, 0x0b,
	0x88, 0xfb, 0x27, 0xd1, 0x03, 0xb8, 0x5f, 0x3d, 0x2c, 0x96, 0x1a, 0xf5, 0xa3, 0xad, 0xa3, 0xe3,
	0x7a, 0xe3, 0xb8, 0x5a, 0xaf, 0x95, 0xb6, 0xcb, 0x3b, 0xe5, 0x52, 0x91, 0xb9, 0xb6, 0x50, 0x39,
	0xdc, 0xde, 0x2f, 0x15, 0x53, 0x02, 0xba, 0x03, 0x31, 0xe2, 0xda, 0xad, 0x42, 0xa5, 0x94, 0x12,
	0x83, 0x8e, 0x9e, 0x47, 0x4b, 0x10, 0xdf, 0x3e, 0x3c, 0xa8, 0x55, 0x4a, 0x47, 0xa5, 0x62, 0x6a,
	0x01, 0x01, 0x44, 0x77, 0xb6, 0xca, 0x95, 0x52, 0x31, 0x15, 0x91, 0x3e, 0x17, 0x60, 0x75, 0x9b,
	0x96, 0xa1, 0xc1, 0x97, 0x14, 0x19, 0x5f, 0x76, 0xb1, 0xe3, 0x92, 0x8a, 0x6a, 0x29, 0x36, 0x79,
	0xc3, 0xe3, 0x46, 0x65, 0x2b, 0xb4, 0x1f, 0x28, 0x9e, 0xe2, 0x54, 0x45, 0x66, 0xe8, 0x06, 0x9f,
	0x40, 0xda, 0x83, 0xcc, 0x0b, 0xec, 0x8e, 0x13, 0x21, 0xe4, 0x25, 0xbb, 0xbf, 0x3e, 0x4b, 0x7f,
	0x17, 0x41, 0x2a, 0x1b, 0x8e, 0xab, 0x18, 0xae, 0x36, 0x41, 0xaf, 0x99, 0x48, 0xd1, 0xbb, 0x90,
	0xd0, 0x28, 0x67, 0x0b, 0xfb, 0x31, 0x51, 0x10, 0xd3, 0x82, 0x0c, 0xde, 0x76, 0x59, 0x45, 0xab,
	0x00, 0x36, 0x63, 0x27, 0x67, 0x22, 0x94, 0x38, 0xce, 0x77, 0xca, 0x2a, 0xba, 0xec, 0x2b, 0x6a,
	0xec, 0x85, 0xe5, 0xe3, 0x10, 0x9b, 0x85, 0x2b, 0x32, 0xa9, 0xcc, 0xdd, 0xb6, 0xa2, 0xfc, 0x43,
	0x80, 0xf5, 0x80, 0x04, 0x65, 0x43, 0xd7, 0x8c, 0xaf, 0x35, 0x50, 0xd0, 0x3b, 0x23, 0xfc, 0x30,
	0xc1, 0x07, 0x0b, 0x03, 0x3e, 0x90, 0x74, 0x58, 0x3d, 0xa6, 0x5f, 0x45, 0xc6, 0x69, 0xb1, 0x3f,
	0x30, 0x13, 0xdc, 0x2a, 0xac, 0x6d, 0x78, 0xbb, 0xa2, 0x39, 0x43, 0x71, 0xed, 0x84, 0x99, 0xec,
	0x01, 0xc4, 0x2d, 0xa5, 0x8d, 0x1b, 0x8e, 0xf6, 0x1a, 0xf3, 0x48, 0x8c, 0x91, 0x8d, 0xba, 0xf6,
	0x1a, 0x13, 0x0d, 0xe9, 0x8f, 0xae, 0x79, 0x81, 0xbd, 0xa1, 0x92, 0x1e, 0x3f, 0x22, 0x1b, 0xd2,
	0x97, 0x02, 0xac, 0x8e, 0xb9, 0xd4, 0xb1, 0x4c, 0xc3, 0xc1, 0xe8, 0x00, 0xe2, 0xfe, 0x37, 0x3e,
	0x5e, 0x7f, 0x67, 0xd6, 0xb1, 0xc7, 0x80, 0xde, 0x83, 0xa4, 0x81, 0x5f, 0xb9, 0x8d, 0x80, 0x50,
	0x2c, 0x90, 0x96, 0xc8, 0x76, 0xcd, 0x17, 0xec, 0x00, 0x56, 0x8b, 0x74, 0xa8, 0xf8, 0xbf, 0x64,
	0x64, 0xfe, 0x4d, 0x12, 0xee, 0x0f, 0x32, 0xd5, 0xb1, 0x7d, 0xa5, 0xb5, 0x30, 0xfa, 0x4a, 0x84,
	0x95, 0xd1, 0x55, 0x0d, 0x3d, 0x0b, 0x9b, 0x84, 0x26, 0x15, 0xc3, 0xcc, 0xac, 0x76, 0x92, 0xbe,
	0x10, 0x7e, 0xfe, 0xaf, 0x7f, 0x7f, 0x21, 0xfe, 0x52, 0x90, 0x1e, 0xfb, 0x9f, 0x31, 0x7f, 0xc2,
	0xbc, 0xfc, 0xdc, 0xb2, 0xcd, 0x73, 0xdc, 0x72, 0x9d, 0xdc, 0x46, 0xce, 0xc6, 0x6d, 0xcd, 0x34,
	0x9c, 0xdc, 0xc6, 0x67, 0xfe, 0x77, 0x58, 0xdf, 0x6f, 0x9b, 0x7e, 0x3c, 0xbd, 0xdc, 0x91, 0x36,
	0x27, 0xb1, 0xe8, 0x66, 0x8b, 0x7d, 0xff, 0x0c, 0xe1, 0x41, 0x3f, 0x13, 0xe1, 0xee, 0x88, 0x7a,
	0x8b, 0xc2, 0x3e, 0x9f, 0x8c, 0xaf, 0xd1, 0xb3, 0x5b, 0xe6, 0xa7, 0xd4, 0x30, 0xaf, 0x50, 0xc0,
	0x2e, 0xc4, 0xe3, 0x23, 0xad, 0x32, 0xac, 0x4c, 0x6e, 0xe3, 0xb3, 0x97, 0xcf, 0xd0, 0xe6, 0x78,
	0x6c, 0xc0, 0x16, 0x23, 0xd1, 0xe8, 0xb7, 0x22, 0x3c, 0x98, 0x50, 0x5d, 0xd1, 0xd6, 0xad, 0x2b,
	0x73, 0x66, 0xd5, 0xa3, 0x08, 0x7c, 0xa5, 0xce, 0xfa, 0x13, 0x96, 0xf4, 0x15, 0x8b, 0x8d, 0x2f,
	0x05, 0xa9, 0x78, 0x53, 0x1b, 0x6c, 0x6a, 0x3d, 0x29, 0x36, 0x85, 0x8d, 0x97, 0xfb, 0xd2, 0xce,
	0xcd, 0x4d, 0x32, 0x40, 0x86, 0xfe, 0x26, 0xc2, 0xc3, 0xd0, 0xea, 0x8f, 0x5e, 0x4c, 0x6f, 0xa7,
	0x89, 0xfd, 0x23, 0xcc, 0x5a, 0x7f, 0x62, 0xd6, 0xfa, 0x83, 0x20, 0x55, 0x6e, 0x91, 0x03, 0xda,
	0xa0, 0x34, 0x81, 0xec, 0x3a, 0x91, 0xf6, 0x6e, 0x9c, 0xa3, 0x13, 0x78, 0xd1, 0xef, 0x45, 0x58,
	0x19, 0xdd, 0x74, 0x42, 0xab, 0xd1, 0xc4, 0x5e, 0x35, 0x7b, 0xce, 0xfd, 0x8e, 0xd9, 0xf0, 0x37,
	0x42, 0x66, 0xab, 0xa7, 0xa9, 0x27, 0x67, 0x76, 0xc6, 0xd0, 0xeb, 0x19, 0xee, 0x30, 0xb3, 0x3d,
	0x05, 0x5d, 0x68, 0xf8, 0xf5, 0x2c, 0xf6, 0x2b, 0x11, 0xee, 0x8d, 0xec, 0x61, 0x28, 0xec, 0xff,
	0x16, 0x93, 0xda, 0x6d, 0xe6, 0xd9, 0xcd, 0xc0, 0xac, 0x6d, 0x8e, 0x2a, 0x58, 0xb3, 0x05, 0x49,
	0x7f, 0xc1, 0x9a, 0x35, 0x74, 0xd1, 0x7f, 0x04, 0x58, 0x19, 0xdd, 0x40, 0x43, 0xc3, 0x68, 0x62,
	0xdf, 0xcd, 0xac, 0x0c, 0xbd, 0xbe, 0x96, 0x3a, 0x96, 0x7b, 0xed, 0x29, 0xbc, 0x71, 0x8b, 0x0a,
	0xbd, 0x71, 0x8b, 0x0a, 0x5d, 0xf8, 0x5c, 0x80, 0x87, 0x2d, 0xb3, 0x33, 0x59, 0xb7, 0xc2, 0xca,
	0x90, 0xc7, 0x6a, 0x44, 0x8d, 0x9a, 0xf0, 0xb2, 0xc4, 0x81, 0x6d, 0x53, 0x57, 0x8c, 0x76, 0xd6,
	0xb4, 0xdb, 0xb9, 0x36, 0x36, 0xa8, 0x92, 0x39, 0xf6, 0x93, 0x62, 0x69, 0xce, 0x98, 0x7f, 0x36,
	0x3e, 0xf5, 0x36, 0x9a, 0x51, 0x8a, 0xf8, 0xfe, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x16, 0x05,
	0x09, 0xf3, 0x40, 0x1d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkflowTemplateServiceClient is the client API for WorkflowTemplateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkflowTemplateServiceClient interface {
	// Creates new workflow template.
	CreateWorkflowTemplate(ctx context.Context, in *CreateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	// Retrieves the latest workflow template.
	//
	// Can retrieve previously instantiated template by specifying optional
	// version parameter.
	GetWorkflowTemplate(ctx context.Context, in *GetWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	// Instantiates a template and begins execution.
	//
	// The returned Operation can be used to track execution of
	// workflow by polling
	// [operations.get][google.longrunning.Operations.GetOperation].
	// The Operation will complete when entire workflow is finished.
	//
	// The running workflow can be aborted via
	// [operations.cancel][google.longrunning.Operations.CancelOperation].
	// This will cause any inflight jobs to be cancelled and workflow-owned
	// clusters to be deleted.
	//
	// The [Operation.metadata][google.longrunning.Operation.metadata] will be
	// [WorkflowMetadata][google.cloud.dataproc.v1beta2.WorkflowMetadata].
	//
	// On successful completion,
	// [Operation.response][google.longrunning.Operation.response] will be
	// [Empty][google.protobuf.Empty].
	InstantiateWorkflowTemplate(ctx context.Context, in *InstantiateWorkflowTemplateRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Instantiates a template and begins execution.
	//
	// This method is equivalent to executing the sequence
	// [CreateWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.CreateWorkflowTemplate], [InstantiateWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.InstantiateWorkflowTemplate],
	// [DeleteWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.DeleteWorkflowTemplate].
	//
	// The returned Operation can be used to track execution of
	// workflow by polling
	// [operations.get][google.longrunning.Operations.GetOperation].
	// The Operation will complete when entire workflow is finished.
	//
	// The running workflow can be aborted via
	// [operations.cancel][google.longrunning.Operations.CancelOperation].
	// This will cause any inflight jobs to be cancelled and workflow-owned
	// clusters to be deleted.
	//
	// The [Operation.metadata][google.longrunning.Operation.metadata] will be
	// [WorkflowMetadata][google.cloud.dataproc.v1beta2.WorkflowMetadata].
	//
	// On successful completion,
	// [Operation.response][google.longrunning.Operation.response] will be
	// [Empty][google.protobuf.Empty].
	InstantiateInlineWorkflowTemplate(ctx context.Context, in *InstantiateInlineWorkflowTemplateRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Updates (replaces) workflow template. The updated template
	// must contain version that matches the current server version.
	UpdateWorkflowTemplate(ctx context.Context, in *UpdateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	// Lists workflows that match the specified filter in the request.
	ListWorkflowTemplates(ctx context.Context, in *ListWorkflowTemplatesRequest, opts ...grpc.CallOption) (*ListWorkflowTemplatesResponse, error)
	// Deletes a workflow template. It does not cancel in-progress workflows.
	DeleteWorkflowTemplate(ctx context.Context, in *DeleteWorkflowTemplateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type workflowTemplateServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkflowTemplateServiceClient(cc *grpc.ClientConn) WorkflowTemplateServiceClient {
	return &workflowTemplateServiceClient{cc}
}

func (c *workflowTemplateServiceClient) CreateWorkflowTemplate(ctx context.Context, in *CreateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/CreateWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowTemplateServiceClient) GetWorkflowTemplate(ctx context.Context, in *GetWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/GetWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowTemplateServiceClient) InstantiateWorkflowTemplate(ctx context.Context, in *InstantiateWorkflowTemplateRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/InstantiateWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowTemplateServiceClient) InstantiateInlineWorkflowTemplate(ctx context.Context, in *InstantiateInlineWorkflowTemplateRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/InstantiateInlineWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowTemplateServiceClient) UpdateWorkflowTemplate(ctx context.Context, in *UpdateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/UpdateWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowTemplateServiceClient) ListWorkflowTemplates(ctx context.Context, in *ListWorkflowTemplatesRequest, opts ...grpc.CallOption) (*ListWorkflowTemplatesResponse, error) {
	out := new(ListWorkflowTemplatesResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/ListWorkflowTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowTemplateServiceClient) DeleteWorkflowTemplate(ctx context.Context, in *DeleteWorkflowTemplateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/DeleteWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkflowTemplateServiceServer is the server API for WorkflowTemplateService service.
type WorkflowTemplateServiceServer interface {
	// Creates new workflow template.
	CreateWorkflowTemplate(context.Context, *CreateWorkflowTemplateRequest) (*WorkflowTemplate, error)
	// Retrieves the latest workflow template.
	//
	// Can retrieve previously instantiated template by specifying optional
	// version parameter.
	GetWorkflowTemplate(context.Context, *GetWorkflowTemplateRequest) (*WorkflowTemplate, error)
	// Instantiates a template and begins execution.
	//
	// The returned Operation can be used to track execution of
	// workflow by polling
	// [operations.get][google.longrunning.Operations.GetOperation].
	// The Operation will complete when entire workflow is finished.
	//
	// The running workflow can be aborted via
	// [operations.cancel][google.longrunning.Operations.CancelOperation].
	// This will cause any inflight jobs to be cancelled and workflow-owned
	// clusters to be deleted.
	//
	// The [Operation.metadata][google.longrunning.Operation.metadata] will be
	// [WorkflowMetadata][google.cloud.dataproc.v1beta2.WorkflowMetadata].
	//
	// On successful completion,
	// [Operation.response][google.longrunning.Operation.response] will be
	// [Empty][google.protobuf.Empty].
	InstantiateWorkflowTemplate(context.Context, *InstantiateWorkflowTemplateRequest) (*longrunning.Operation, error)
	// Instantiates a template and begins execution.
	//
	// This method is equivalent to executing the sequence
	// [CreateWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.CreateWorkflowTemplate], [InstantiateWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.InstantiateWorkflowTemplate],
	// [DeleteWorkflowTemplate][google.cloud.dataproc.v1beta2.WorkflowTemplateService.DeleteWorkflowTemplate].
	//
	// The returned Operation can be used to track execution of
	// workflow by polling
	// [operations.get][google.longrunning.Operations.GetOperation].
	// The Operation will complete when entire workflow is finished.
	//
	// The running workflow can be aborted via
	// [operations.cancel][google.longrunning.Operations.CancelOperation].
	// This will cause any inflight jobs to be cancelled and workflow-owned
	// clusters to be deleted.
	//
	// The [Operation.metadata][google.longrunning.Operation.metadata] will be
	// [WorkflowMetadata][google.cloud.dataproc.v1beta2.WorkflowMetadata].
	//
	// On successful completion,
	// [Operation.response][google.longrunning.Operation.response] will be
	// [Empty][google.protobuf.Empty].
	InstantiateInlineWorkflowTemplate(context.Context, *InstantiateInlineWorkflowTemplateRequest) (*longrunning.Operation, error)
	// Updates (replaces) workflow template. The updated template
	// must contain version that matches the current server version.
	UpdateWorkflowTemplate(context.Context, *UpdateWorkflowTemplateRequest) (*WorkflowTemplate, error)
	// Lists workflows that match the specified filter in the request.
	ListWorkflowTemplates(context.Context, *ListWorkflowTemplatesRequest) (*ListWorkflowTemplatesResponse, error)
	// Deletes a workflow template. It does not cancel in-progress workflows.
	DeleteWorkflowTemplate(context.Context, *DeleteWorkflowTemplateRequest) (*empty.Empty, error)
}

func RegisterWorkflowTemplateServiceServer(s *grpc.Server, srv WorkflowTemplateServiceServer) {
	s.RegisterService(&_WorkflowTemplateService_serviceDesc, srv)
}

func _WorkflowTemplateService_CreateWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowTemplateServiceServer).CreateWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/CreateWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowTemplateServiceServer).CreateWorkflowTemplate(ctx, req.(*CreateWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowTemplateService_GetWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowTemplateServiceServer).GetWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/GetWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowTemplateServiceServer).GetWorkflowTemplate(ctx, req.(*GetWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowTemplateService_InstantiateWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstantiateWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowTemplateServiceServer).InstantiateWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/InstantiateWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowTemplateServiceServer).InstantiateWorkflowTemplate(ctx, req.(*InstantiateWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowTemplateService_InstantiateInlineWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstantiateInlineWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowTemplateServiceServer).InstantiateInlineWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/InstantiateInlineWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowTemplateServiceServer).InstantiateInlineWorkflowTemplate(ctx, req.(*InstantiateInlineWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowTemplateService_UpdateWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowTemplateServiceServer).UpdateWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/UpdateWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowTemplateServiceServer).UpdateWorkflowTemplate(ctx, req.(*UpdateWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowTemplateService_ListWorkflowTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkflowTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowTemplateServiceServer).ListWorkflowTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/ListWorkflowTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowTemplateServiceServer).ListWorkflowTemplates(ctx, req.(*ListWorkflowTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowTemplateService_DeleteWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowTemplateServiceServer).DeleteWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dataproc.v1beta2.WorkflowTemplateService/DeleteWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowTemplateServiceServer).DeleteWorkflowTemplate(ctx, req.(*DeleteWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkflowTemplateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.cloud.dataproc.v1beta2.WorkflowTemplateService",
	HandlerType: (*WorkflowTemplateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkflowTemplate",
			Handler:    _WorkflowTemplateService_CreateWorkflowTemplate_Handler,
		},
		{
			MethodName: "GetWorkflowTemplate",
			Handler:    _WorkflowTemplateService_GetWorkflowTemplate_Handler,
		},
		{
			MethodName: "InstantiateWorkflowTemplate",
			Handler:    _WorkflowTemplateService_InstantiateWorkflowTemplate_Handler,
		},
		{
			MethodName: "InstantiateInlineWorkflowTemplate",
			Handler:    _WorkflowTemplateService_InstantiateInlineWorkflowTemplate_Handler,
		},
		{
			MethodName: "UpdateWorkflowTemplate",
			Handler:    _WorkflowTemplateService_UpdateWorkflowTemplate_Handler,
		},
		{
			MethodName: "ListWorkflowTemplates",
			Handler:    _WorkflowTemplateService_ListWorkflowTemplates_Handler,
		},
		{
			MethodName: "DeleteWorkflowTemplate",
			Handler:    _WorkflowTemplateService_DeleteWorkflowTemplate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/cloud/dataproc/v1beta2/workflow_templates.proto",
}
