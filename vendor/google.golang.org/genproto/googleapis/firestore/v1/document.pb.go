// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/firestore/v1/document.proto

package firestore

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A Firestore document.
//
// Must not exceed 1 MiB - 4 bytes.
type Document struct {
	// The resource name of the document, for example
	// `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The document's fields.
	//
	// The map keys represent field names.
	//
	// A simple field name contains only characters `a` to `z`, `A` to `Z`,
	// `0` to `9`, or `_`, and must not start with `0` to `9`. For example,
	// `foo_bar_17`.
	//
	// Field names matching the regular expression `__.*__` are reserved. Reserved
	// field names are forbidden except in certain documented contexts. The map
	// keys, represented as UTF-8, must not exceed 1,500 bytes and cannot be
	// empty.
	//
	// Field paths may be used in other contexts to refer to structured fields
	// defined here. For `map_value`, the field path is represented by the simple
	// or quoted field names of the containing fields, delimited by `.`. For
	// example, the structured field
	// `"foo" : { map_value: { "x&y" : { string_value: "hello" }}}` would be
	// represented by the field path `foo.x&y`.
	//
	// Within a field path, a quoted field name starts and ends with `` ` `` and
	// may contain any character. Some characters, including `` ` ``, must be
	// escaped using a `\`. For example, `` `x&y` `` represents `x&y` and
	// `` `bak\`tik` `` represents `` bak`tik ``.
	Fields map[string]*Value `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Output only. The time at which the document was created.
	//
	// This value increases monotonically when a document is deleted then
	// recreated. It can also be compared to values from other documents and
	// the `read_time` of a query.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time at which the document was last changed.
	//
	// This value is initially set to the `create_time` then increases
	// monotonically with each change to the document. It can also be
	// compared to values from other documents and the `read_time` of a query.
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e0f854a5c2f070c, []int{0}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Document) GetFields() map[string]*Value {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Document) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Document) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// A message that can hold any of the supported value types.
type Value struct {
	// Must have a value set.
	//
	// Types that are valid to be assigned to ValueType:
	//	*Value_NullValue
	//	*Value_BooleanValue
	//	*Value_IntegerValue
	//	*Value_DoubleValue
	//	*Value_TimestampValue
	//	*Value_StringValue
	//	*Value_BytesValue
	//	*Value_ReferenceValue
	//	*Value_GeoPointValue
	//	*Value_ArrayValue
	//	*Value_MapValue
	ValueType            isValue_ValueType `protobuf_oneof:"value_type"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e0f854a5c2f070c, []int{1}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

type isValue_ValueType interface {
	isValue_ValueType()
}

type Value_NullValue struct {
	NullValue _struct.NullValue `protobuf:"varint,11,opt,name=null_value,json=nullValue,proto3,enum=google.protobuf.NullValue,oneof"`
}

type Value_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,1,opt,name=boolean_value,json=booleanValue,proto3,oneof"`
}

type Value_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,2,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Value_TimestampValue struct {
	TimestampValue *timestamp.Timestamp `protobuf:"bytes,10,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,17,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,18,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type Value_ReferenceValue struct {
	ReferenceValue string `protobuf:"bytes,5,opt,name=reference_value,json=referenceValue,proto3,oneof"`
}

type Value_GeoPointValue struct {
	GeoPointValue *latlng.LatLng `protobuf:"bytes,8,opt,name=geo_point_value,json=geoPointValue,proto3,oneof"`
}

type Value_ArrayValue struct {
	ArrayValue *ArrayValue `protobuf:"bytes,9,opt,name=array_value,json=arrayValue,proto3,oneof"`
}

type Value_MapValue struct {
	MapValue *MapValue `protobuf:"bytes,6,opt,name=map_value,json=mapValue,proto3,oneof"`
}

func (*Value_NullValue) isValue_ValueType() {}

func (*Value_BooleanValue) isValue_ValueType() {}

func (*Value_IntegerValue) isValue_ValueType() {}

func (*Value_DoubleValue) isValue_ValueType() {}

func (*Value_TimestampValue) isValue_ValueType() {}

func (*Value_StringValue) isValue_ValueType() {}

func (*Value_BytesValue) isValue_ValueType() {}

func (*Value_ReferenceValue) isValue_ValueType() {}

func (*Value_GeoPointValue) isValue_ValueType() {}

func (*Value_ArrayValue) isValue_ValueType() {}

func (*Value_MapValue) isValue_ValueType() {}

func (m *Value) GetValueType() isValue_ValueType {
	if m != nil {
		return m.ValueType
	}
	return nil
}

func (m *Value) GetNullValue() _struct.NullValue {
	if x, ok := m.GetValueType().(*Value_NullValue); ok {
		return x.NullValue
	}
	return _struct.NullValue_NULL_VALUE
}

func (m *Value) GetBooleanValue() bool {
	if x, ok := m.GetValueType().(*Value_BooleanValue); ok {
		return x.BooleanValue
	}
	return false
}

func (m *Value) GetIntegerValue() int64 {
	if x, ok := m.GetValueType().(*Value_IntegerValue); ok {
		return x.IntegerValue
	}
	return 0
}

func (m *Value) GetDoubleValue() float64 {
	if x, ok := m.GetValueType().(*Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *Value) GetTimestampValue() *timestamp.Timestamp {
	if x, ok := m.GetValueType().(*Value_TimestampValue); ok {
		return x.TimestampValue
	}
	return nil
}

func (m *Value) GetStringValue() string {
	if x, ok := m.GetValueType().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Value) GetBytesValue() []byte {
	if x, ok := m.GetValueType().(*Value_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (m *Value) GetReferenceValue() string {
	if x, ok := m.GetValueType().(*Value_ReferenceValue); ok {
		return x.ReferenceValue
	}
	return ""
}

func (m *Value) GetGeoPointValue() *latlng.LatLng {
	if x, ok := m.GetValueType().(*Value_GeoPointValue); ok {
		return x.GeoPointValue
	}
	return nil
}

func (m *Value) GetArrayValue() *ArrayValue {
	if x, ok := m.GetValueType().(*Value_ArrayValue); ok {
		return x.ArrayValue
	}
	return nil
}

func (m *Value) GetMapValue() *MapValue {
	if x, ok := m.GetValueType().(*Value_MapValue); ok {
		return x.MapValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Value) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Value_NullValue)(nil),
		(*Value_BooleanValue)(nil),
		(*Value_IntegerValue)(nil),
		(*Value_DoubleValue)(nil),
		(*Value_TimestampValue)(nil),
		(*Value_StringValue)(nil),
		(*Value_BytesValue)(nil),
		(*Value_ReferenceValue)(nil),
		(*Value_GeoPointValue)(nil),
		(*Value_ArrayValue)(nil),
		(*Value_MapValue)(nil),
	}
}

// An array value.
type ArrayValue struct {
	// Values in the array.
	Values               []*Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArrayValue) Reset()         { *m = ArrayValue{} }
func (m *ArrayValue) String() string { return proto.CompactTextString(m) }
func (*ArrayValue) ProtoMessage()    {}
func (*ArrayValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e0f854a5c2f070c, []int{2}
}

func (m *ArrayValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrayValue.Unmarshal(m, b)
}
func (m *ArrayValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrayValue.Marshal(b, m, deterministic)
}
func (m *ArrayValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrayValue.Merge(m, src)
}
func (m *ArrayValue) XXX_Size() int {
	return xxx_messageInfo_ArrayValue.Size(m)
}
func (m *ArrayValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrayValue.DiscardUnknown(m)
}

var xxx_messageInfo_ArrayValue proto.InternalMessageInfo

func (m *ArrayValue) GetValues() []*Value {
	if m != nil {
		return m.Values
	}
	return nil
}

// A map value.
type MapValue struct {
	// The map's fields.
	//
	// The map keys represent field names. Field names matching the regular
	// expression `__.*__` are reserved. Reserved field names are forbidden except
	// in certain documented contexts. The map keys, represented as UTF-8, must
	// not exceed 1,500 bytes and cannot be empty.
	Fields               map[string]*Value `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MapValue) Reset()         { *m = MapValue{} }
func (m *MapValue) String() string { return proto.CompactTextString(m) }
func (*MapValue) ProtoMessage()    {}
func (*MapValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e0f854a5c2f070c, []int{3}
}

func (m *MapValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapValue.Unmarshal(m, b)
}
func (m *MapValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapValue.Marshal(b, m, deterministic)
}
func (m *MapValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapValue.Merge(m, src)
}
func (m *MapValue) XXX_Size() int {
	return xxx_messageInfo_MapValue.Size(m)
}
func (m *MapValue) XXX_DiscardUnknown() {
	xxx_messageInfo_MapValue.DiscardUnknown(m)
}

var xxx_messageInfo_MapValue proto.InternalMessageInfo

func (m *MapValue) GetFields() map[string]*Value {
	if m != nil {
		return m.Fields
	}
	return nil
}

func init() {
	proto.RegisterType((*Document)(nil), "google.firestore.v1.Document")
	proto.RegisterMapType((map[string]*Value)(nil), "google.firestore.v1.Document.FieldsEntry")
	proto.RegisterType((*Value)(nil), "google.firestore.v1.Value")
	proto.RegisterType((*ArrayValue)(nil), "google.firestore.v1.ArrayValue")
	proto.RegisterType((*MapValue)(nil), "google.firestore.v1.MapValue")
	proto.RegisterMapType((map[string]*Value)(nil), "google.firestore.v1.MapValue.FieldsEntry")
}

func init() { proto.RegisterFile("google/firestore/v1/document.proto", fileDescriptor_8e0f854a5c2f070c) }

var fileDescriptor_8e0f854a5c2f070c = []byte{
	// 650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x4f, 0x6f, 0xd3, 0x4c,
	0x10, 0xc6, 0xe3, 0x24, 0x8d, 0x92, 0x71, 0xda, 0xbe, 0xaf, 0x7b, 0x20, 0x44, 0xa0, 0x86, 0x20,
	0xa4, 0xf4, 0x62, 0x93, 0x72, 0x41, 0xb4, 0x48, 0x34, 0xa5, 0x6d, 0x0e, 0x05, 0x55, 0x06, 0x7a,
	0x40, 0x95, 0xa2, 0x4d, 0xb2, 0x59, 0x59, 0xac, 0x77, 0xad, 0xf5, 0xba, 0x52, 0xbe, 0x0e, 0x42,
	0x42, 0xe2, 0xc8, 0x27, 0xe0, 0xcc, 0xa7, 0x42, 0xfb, 0xcf, 0x6d, 0x50, 0xd4, 0x9e, 0xb8, 0xed,
	0xce, 0xfc, 0x9e, 0x99, 0x67, 0xd7, 0x3b, 0x86, 0x3e, 0xe1, 0x9c, 0x50, 0x1c, 0x2d, 0x12, 0x81,
	0x73, 0xc9, 0x05, 0x8e, 0xae, 0x87, 0xd1, 0x9c, 0xcf, 0x8a, 0x14, 0x33, 0x19, 0x66, 0x82, 0x4b,
	0x1e, 0xec, 0x18, 0x26, 0x2c, 0x99, 0xf0, 0x7a, 0xd8, 0x7d, 0x64, 0x85, 0x1a, 0x99, 0x16, 0x8b,
	0x28, 0x97, 0xa2, 0x98, 0x59, 0x49, 0x77, 0xf7, 0xef, 0xac, 0x4c, 0x52, 0x9c, 0x4b, 0x94, 0x66,
	0x16, 0xe8, 0x58, 0x40, 0x2e, 0x33, 0x1c, 0x51, 0x24, 0x29, 0x23, 0x36, 0xe3, 0x0a, 0xa3, 0x2c,
	0x89, 0x10, 0x63, 0x5c, 0x22, 0x99, 0x70, 0x96, 0x9b, 0x6c, 0xff, 0x67, 0x15, 0x9a, 0x6f, 0xad,
	0xbd, 0x20, 0x80, 0x3a, 0x43, 0x29, 0xee, 0x78, 0x3d, 0x6f, 0xd0, 0x8a, 0xf5, 0x3a, 0x38, 0x82,
	0xc6, 0x22, 0xc1, 0x74, 0x9e, 0x77, 0xaa, 0xbd, 0xda, 0xc0, 0xdf, 0xdf, 0x0b, 0xd7, 0xb8, 0x0f,
	0x5d, 0x89, 0xf0, 0x54, 0xb3, 0x27, 0x4c, 0x8a, 0x65, 0x6c, 0x85, 0xc1, 0x01, 0xf8, 0x33, 0x81,
	0x91, 0xc4, 0x13, 0xe5, 0xba, 0x53, 0xeb, 0x79, 0x03, 0x7f, 0xbf, 0xeb, 0xea, 0xb8, 0x23, 0x85,
	0x1f, 0xdd, 0x91, 0x62, 0x30, 0xb8, 0x0a, 0x28, 0x71, 0x91, 0xcd, 0x4b, 0x71, 0xfd, 0x7e, 0xb1,
	0xc1, 0x55, 0xa0, 0xfb, 0x09, 0xfc, 0x5b, 0x86, 0x82, 0xff, 0xa0, 0xf6, 0x05, 0x2f, 0xed, 0xf1,
	0xd4, 0x32, 0x78, 0x0e, 0x1b, 0xd7, 0x88, 0x16, 0xb8, 0x53, 0x5d, 0xad, 0xbb, 0x72, 0xb8, 0x4b,
	0x45, 0xc4, 0x06, 0x7c, 0x55, 0x7d, 0xe9, 0xf5, 0x7f, 0xd5, 0x61, 0x43, 0x07, 0x83, 0x03, 0x00,
	0x56, 0x50, 0x3a, 0x31, 0x45, 0xfc, 0x9e, 0x37, 0xd8, 0x5a, 0x63, 0xee, 0x7d, 0x41, 0xa9, 0xe6,
	0xc7, 0x95, 0xb8, 0xc5, 0xdc, 0x26, 0x78, 0x06, 0x9b, 0x53, 0xce, 0x29, 0x46, 0xcc, 0xea, 0x95,
	0xb1, 0xe6, 0xb8, 0x12, 0xb7, 0x6d, 0xb8, 0xc4, 0x12, 0x26, 0x31, 0xc1, 0x62, 0x72, 0xe3, 0xb5,
	0xa6, 0x30, 0x1b, 0x36, 0xd8, 0x53, 0x68, 0xcf, 0x79, 0x31, 0xa5, 0xd8, 0x52, 0xea, 0x9a, 0xbd,
	0x71, 0x25, 0xf6, 0x4d, 0xd4, 0x40, 0x27, 0xb0, 0x5d, 0xbe, 0x1c, 0xcb, 0xc1, 0x7d, 0x37, 0x3a,
	0xae, 0xc4, 0x5b, 0xa5, 0xa8, 0xec, 0x95, 0x4b, 0x91, 0x30, 0x62, 0x6b, 0xfc, 0xaf, 0x6e, 0x54,
	0xf5, 0x32, 0x51, 0x03, 0x3d, 0x01, 0x7f, 0xba, 0x94, 0x38, 0xb7, 0x4c, 0xd0, 0xf3, 0x06, 0xed,
	0x71, 0x25, 0x06, 0x1d, 0x34, 0xc8, 0x1e, 0x6c, 0x0b, 0xbc, 0xc0, 0x02, 0xb3, 0x99, 0xb3, 0xbd,
	0x61, 0x4b, 0x6d, 0x95, 0x09, 0x83, 0xbe, 0x86, 0x6d, 0x82, 0xf9, 0x24, 0xe3, 0x09, 0x93, 0x16,
	0x6d, 0x6a, 0xe7, 0x3b, 0xce, 0xb9, 0x7a, 0xfa, 0xe1, 0x39, 0x92, 0xe7, 0x8c, 0x8c, 0x2b, 0xf1,
	0x26, 0xc1, 0xfc, 0x42, 0xc1, 0x46, 0x3e, 0x02, 0x1f, 0x09, 0x81, 0x96, 0x56, 0xda, 0xd2, 0xd2,
	0xdd, 0xb5, 0x9f, 0xfb, 0x48, 0x71, 0xee, 0x73, 0x01, 0x2a, 0x77, 0xc1, 0x21, 0xb4, 0x52, 0xe4,
	0xae, 0xad, 0xa1, 0x2b, 0x3c, 0x5e, 0x5b, 0xe1, 0x1d, 0xca, 0x9c, 0xbe, 0x99, 0xda, 0xf5, 0xa8,
	0x0d, 0xa0, 0x95, 0x13, 0xe5, 0xb3, 0xff, 0x06, 0xe0, 0xa6, 0x4f, 0xb0, 0x0f, 0x0d, 0x9d, 0xcb,
	0x3b, 0x9e, 0x1e, 0xb2, 0xbb, 0xde, 0xa1, 0x25, 0xfb, 0xdf, 0x3c, 0x68, 0xba, 0x46, 0xb7, 0xa6,
	0xd4, 0xbb, 0x63, 0x4a, 0x1d, 0xbe, 0x6e, 0x4a, 0xff, 0xd1, 0xac, 0x8c, 0xbe, 0x7b, 0xf0, 0x60,
	0xc6, 0xd3, 0x75, 0xf0, 0x68, 0xd3, 0xfd, 0x36, 0x2e, 0xd4, 0xa3, 0xbb, 0xf0, 0x3e, 0x1f, 0x5a,
	0x8a, 0x70, 0x8a, 0x18, 0x09, 0xb9, 0x20, 0x11, 0xc1, 0x4c, 0x3f, 0xc9, 0xc8, 0xa4, 0x50, 0x96,
	0xe4, 0x2b, 0x3f, 0xd7, 0x83, 0x72, 0xf3, 0xb5, 0x5a, 0x3f, 0x3b, 0x3e, 0xfd, 0xf0, 0xa3, 0xfa,
	0xf0, 0xcc, 0x54, 0x39, 0xa6, 0xbc, 0x98, 0x87, 0xa7, 0x65, 0xc7, 0xcb, 0xe1, 0x6f, 0x97, 0xbb,
	0xd2, 0xb9, 0xab, 0x32, 0x77, 0x75, 0x39, 0x9c, 0x36, 0x74, 0x9f, 0x17, 0x7f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x2d, 0x9a, 0x82, 0x39, 0xc3, 0x05, 0x00, 0x00,
}
