// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/services/campaign_feed_service.proto

package services

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	resources "google.golang.org/genproto/googleapis/ads/googleads/v1/resources"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for
// [CampaignFeedService.GetCampaignFeed][google.ads.googleads.v1.services.CampaignFeedService.GetCampaignFeed].
type GetCampaignFeedRequest struct {
	// The resource name of the campaign feed to fetch.
	ResourceName         string   `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCampaignFeedRequest) Reset()         { *m = GetCampaignFeedRequest{} }
func (m *GetCampaignFeedRequest) String() string { return proto.CompactTextString(m) }
func (*GetCampaignFeedRequest) ProtoMessage()    {}
func (*GetCampaignFeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0bfa8f03a924d02, []int{0}
}

func (m *GetCampaignFeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCampaignFeedRequest.Unmarshal(m, b)
}
func (m *GetCampaignFeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCampaignFeedRequest.Marshal(b, m, deterministic)
}
func (m *GetCampaignFeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCampaignFeedRequest.Merge(m, src)
}
func (m *GetCampaignFeedRequest) XXX_Size() int {
	return xxx_messageInfo_GetCampaignFeedRequest.Size(m)
}
func (m *GetCampaignFeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCampaignFeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCampaignFeedRequest proto.InternalMessageInfo

func (m *GetCampaignFeedRequest) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

// Request message for
// [CampaignFeedService.MutateCampaignFeeds][google.ads.googleads.v1.services.CampaignFeedService.MutateCampaignFeeds].
type MutateCampaignFeedsRequest struct {
	// The ID of the customer whose campaign feeds are being modified.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// The list of operations to perform on individual campaign feeds.
	Operations []*CampaignFeedOperation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	// If true, successful operations will be carried out and invalid
	// operations will return errors. If false, all operations will be carried
	// out in one transaction if and only if they are all valid.
	// Default is false.
	PartialFailure bool `protobuf:"varint,3,opt,name=partial_failure,json=partialFailure,proto3" json:"partial_failure,omitempty"`
	// If true, the request is validated but not executed. Only errors are
	// returned, not results.
	ValidateOnly         bool     `protobuf:"varint,4,opt,name=validate_only,json=validateOnly,proto3" json:"validate_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MutateCampaignFeedsRequest) Reset()         { *m = MutateCampaignFeedsRequest{} }
func (m *MutateCampaignFeedsRequest) String() string { return proto.CompactTextString(m) }
func (*MutateCampaignFeedsRequest) ProtoMessage()    {}
func (*MutateCampaignFeedsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0bfa8f03a924d02, []int{1}
}

func (m *MutateCampaignFeedsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateCampaignFeedsRequest.Unmarshal(m, b)
}
func (m *MutateCampaignFeedsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateCampaignFeedsRequest.Marshal(b, m, deterministic)
}
func (m *MutateCampaignFeedsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateCampaignFeedsRequest.Merge(m, src)
}
func (m *MutateCampaignFeedsRequest) XXX_Size() int {
	return xxx_messageInfo_MutateCampaignFeedsRequest.Size(m)
}
func (m *MutateCampaignFeedsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateCampaignFeedsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MutateCampaignFeedsRequest proto.InternalMessageInfo

func (m *MutateCampaignFeedsRequest) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *MutateCampaignFeedsRequest) GetOperations() []*CampaignFeedOperation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *MutateCampaignFeedsRequest) GetPartialFailure() bool {
	if m != nil {
		return m.PartialFailure
	}
	return false
}

func (m *MutateCampaignFeedsRequest) GetValidateOnly() bool {
	if m != nil {
		return m.ValidateOnly
	}
	return false
}

// A single operation (create, update, remove) on a campaign feed.
type CampaignFeedOperation struct {
	// FieldMask that determines which resource fields are modified in an update.
	UpdateMask *field_mask.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// The mutate operation.
	//
	// Types that are valid to be assigned to Operation:
	//	*CampaignFeedOperation_Create
	//	*CampaignFeedOperation_Update
	//	*CampaignFeedOperation_Remove
	Operation            isCampaignFeedOperation_Operation `protobuf_oneof:"operation"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CampaignFeedOperation) Reset()         { *m = CampaignFeedOperation{} }
func (m *CampaignFeedOperation) String() string { return proto.CompactTextString(m) }
func (*CampaignFeedOperation) ProtoMessage()    {}
func (*CampaignFeedOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0bfa8f03a924d02, []int{2}
}

func (m *CampaignFeedOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CampaignFeedOperation.Unmarshal(m, b)
}
func (m *CampaignFeedOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CampaignFeedOperation.Marshal(b, m, deterministic)
}
func (m *CampaignFeedOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampaignFeedOperation.Merge(m, src)
}
func (m *CampaignFeedOperation) XXX_Size() int {
	return xxx_messageInfo_CampaignFeedOperation.Size(m)
}
func (m *CampaignFeedOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_CampaignFeedOperation.DiscardUnknown(m)
}

var xxx_messageInfo_CampaignFeedOperation proto.InternalMessageInfo

func (m *CampaignFeedOperation) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type isCampaignFeedOperation_Operation interface {
	isCampaignFeedOperation_Operation()
}

type CampaignFeedOperation_Create struct {
	Create *resources.CampaignFeed `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type CampaignFeedOperation_Update struct {
	Update *resources.CampaignFeed `protobuf:"bytes,2,opt,name=update,proto3,oneof"`
}

type CampaignFeedOperation_Remove struct {
	Remove string `protobuf:"bytes,3,opt,name=remove,proto3,oneof"`
}

func (*CampaignFeedOperation_Create) isCampaignFeedOperation_Operation() {}

func (*CampaignFeedOperation_Update) isCampaignFeedOperation_Operation() {}

func (*CampaignFeedOperation_Remove) isCampaignFeedOperation_Operation() {}

func (m *CampaignFeedOperation) GetOperation() isCampaignFeedOperation_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *CampaignFeedOperation) GetCreate() *resources.CampaignFeed {
	if x, ok := m.GetOperation().(*CampaignFeedOperation_Create); ok {
		return x.Create
	}
	return nil
}

func (m *CampaignFeedOperation) GetUpdate() *resources.CampaignFeed {
	if x, ok := m.GetOperation().(*CampaignFeedOperation_Update); ok {
		return x.Update
	}
	return nil
}

func (m *CampaignFeedOperation) GetRemove() string {
	if x, ok := m.GetOperation().(*CampaignFeedOperation_Remove); ok {
		return x.Remove
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CampaignFeedOperation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CampaignFeedOperation_Create)(nil),
		(*CampaignFeedOperation_Update)(nil),
		(*CampaignFeedOperation_Remove)(nil),
	}
}

// Response message for a campaign feed mutate.
type MutateCampaignFeedsResponse struct {
	// Errors that pertain to operation failures in the partial failure mode.
	// Returned only when partial_failure = true and all errors occur inside the
	// operations. If any errors occur outside the operations (e.g. auth errors),
	// we return an RPC level error.
	PartialFailureError *status.Status `protobuf:"bytes,3,opt,name=partial_failure_error,json=partialFailureError,proto3" json:"partial_failure_error,omitempty"`
	// All results for the mutate.
	Results              []*MutateCampaignFeedResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MutateCampaignFeedsResponse) Reset()         { *m = MutateCampaignFeedsResponse{} }
func (m *MutateCampaignFeedsResponse) String() string { return proto.CompactTextString(m) }
func (*MutateCampaignFeedsResponse) ProtoMessage()    {}
func (*MutateCampaignFeedsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0bfa8f03a924d02, []int{3}
}

func (m *MutateCampaignFeedsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateCampaignFeedsResponse.Unmarshal(m, b)
}
func (m *MutateCampaignFeedsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateCampaignFeedsResponse.Marshal(b, m, deterministic)
}
func (m *MutateCampaignFeedsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateCampaignFeedsResponse.Merge(m, src)
}
func (m *MutateCampaignFeedsResponse) XXX_Size() int {
	return xxx_messageInfo_MutateCampaignFeedsResponse.Size(m)
}
func (m *MutateCampaignFeedsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateCampaignFeedsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MutateCampaignFeedsResponse proto.InternalMessageInfo

func (m *MutateCampaignFeedsResponse) GetPartialFailureError() *status.Status {
	if m != nil {
		return m.PartialFailureError
	}
	return nil
}

func (m *MutateCampaignFeedsResponse) GetResults() []*MutateCampaignFeedResult {
	if m != nil {
		return m.Results
	}
	return nil
}

// The result for the campaign feed mutate.
type MutateCampaignFeedResult struct {
	// Returned for successful operations.
	ResourceName         string   `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MutateCampaignFeedResult) Reset()         { *m = MutateCampaignFeedResult{} }
func (m *MutateCampaignFeedResult) String() string { return proto.CompactTextString(m) }
func (*MutateCampaignFeedResult) ProtoMessage()    {}
func (*MutateCampaignFeedResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0bfa8f03a924d02, []int{4}
}

func (m *MutateCampaignFeedResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateCampaignFeedResult.Unmarshal(m, b)
}
func (m *MutateCampaignFeedResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateCampaignFeedResult.Marshal(b, m, deterministic)
}
func (m *MutateCampaignFeedResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateCampaignFeedResult.Merge(m, src)
}
func (m *MutateCampaignFeedResult) XXX_Size() int {
	return xxx_messageInfo_MutateCampaignFeedResult.Size(m)
}
func (m *MutateCampaignFeedResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateCampaignFeedResult.DiscardUnknown(m)
}

var xxx_messageInfo_MutateCampaignFeedResult proto.InternalMessageInfo

func (m *MutateCampaignFeedResult) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func init() {
	proto.RegisterType((*GetCampaignFeedRequest)(nil), "google.ads.googleads.v1.services.GetCampaignFeedRequest")
	proto.RegisterType((*MutateCampaignFeedsRequest)(nil), "google.ads.googleads.v1.services.MutateCampaignFeedsRequest")
	proto.RegisterType((*CampaignFeedOperation)(nil), "google.ads.googleads.v1.services.CampaignFeedOperation")
	proto.RegisterType((*MutateCampaignFeedsResponse)(nil), "google.ads.googleads.v1.services.MutateCampaignFeedsResponse")
	proto.RegisterType((*MutateCampaignFeedResult)(nil), "google.ads.googleads.v1.services.MutateCampaignFeedResult")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/services/campaign_feed_service.proto", fileDescriptor_e0bfa8f03a924d02)
}

var fileDescriptor_e0bfa8f03a924d02 = []byte{
	// 714 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xfe, 0x9d, 0xfc, 0x2a, 0x74, 0x5d, 0xa8, 0xb4, 0x55, 0xc1, 0x0a, 0x08, 0x22, 0x53, 0x89,
	0x2a, 0x07, 0xaf, 0x12, 0x84, 0x8a, 0xdc, 0x46, 0x28, 0x45, 0xa4, 0xed, 0xa1, 0xb4, 0x72, 0x51,
	0x91, 0x50, 0x24, 0x6b, 0x6b, 0x6f, 0x2c, 0xab, 0xb6, 0xd7, 0xec, 0xae, 0x83, 0xaa, 0xaa, 0x17,
	0xde, 0x00, 0xf1, 0x04, 0x70, 0xe4, 0xce, 0x89, 0x37, 0xe0, 0x86, 0x78, 0x85, 0x9e, 0x78, 0x09,
	0x90, 0xbd, 0xde, 0x90, 0xb4, 0x89, 0x02, 0xbd, 0x8d, 0x67, 0xbf, 0xf9, 0x66, 0x66, 0xbf, 0xd9,
	0x31, 0xd8, 0x08, 0x28, 0x0d, 0x22, 0x82, 0xb0, 0xcf, 0x91, 0x34, 0x73, 0x6b, 0xd0, 0x44, 0x9c,
	0xb0, 0x41, 0xe8, 0x11, 0x8e, 0x3c, 0x1c, 0xa7, 0x38, 0x0c, 0x12, 0xb7, 0x4f, 0x88, 0xef, 0x96,
	0x6e, 0x2b, 0x65, 0x54, 0x50, 0x58, 0x97, 0x21, 0x16, 0xf6, 0xb9, 0x35, 0x8c, 0xb6, 0x06, 0x4d,
	0x4b, 0x45, 0xd7, 0x1e, 0x4f, 0xe3, 0x67, 0x84, 0xd3, 0x8c, 0x5d, 0x4a, 0x20, 0x89, 0x6b, 0x77,
	0x55, 0x58, 0x1a, 0x22, 0x9c, 0x24, 0x54, 0x60, 0x11, 0xd2, 0x84, 0x97, 0xa7, 0x65, 0x5a, 0x54,
	0x7c, 0x1d, 0x65, 0x7d, 0xd4, 0x0f, 0x49, 0xe4, 0xbb, 0x31, 0xe6, 0xc7, 0x25, 0xe2, 0xde, 0x45,
	0xc4, 0x5b, 0x86, 0xd3, 0x94, 0x30, 0xc5, 0x70, 0xbb, 0x3c, 0x67, 0xa9, 0x87, 0xb8, 0xc0, 0x22,
	0x2b, 0x0f, 0xcc, 0x36, 0xb8, 0xb5, 0x45, 0xc4, 0xb3, 0xb2, 0xa4, 0x2e, 0x21, 0xbe, 0x43, 0xde,
	0x64, 0x84, 0x0b, 0xf8, 0x00, 0xdc, 0x50, 0x35, 0xbb, 0x09, 0x8e, 0x89, 0xa1, 0xd5, 0xb5, 0xd5,
	0x79, 0x67, 0x41, 0x39, 0x5f, 0xe0, 0x98, 0x98, 0xe7, 0x1a, 0xa8, 0xed, 0x66, 0x02, 0x0b, 0x32,
	0x4a, 0xc1, 0x15, 0xc7, 0x7d, 0xa0, 0x7b, 0x19, 0x17, 0x34, 0x26, 0xcc, 0x0d, 0xfd, 0x92, 0x01,
	0x28, 0xd7, 0x8e, 0x0f, 0x5f, 0x01, 0x40, 0x53, 0xc2, 0x64, 0xb7, 0x46, 0xa5, 0x5e, 0x5d, 0xd5,
	0x5b, 0x6b, 0xd6, 0xac, 0x5b, 0xb6, 0x46, 0x93, 0xed, 0xa9, 0x78, 0x67, 0x84, 0x0a, 0x3e, 0x04,
	0x8b, 0x29, 0x66, 0x22, 0xc4, 0x91, 0xdb, 0xc7, 0x61, 0x94, 0x31, 0x62, 0x54, 0xeb, 0xda, 0xea,
	0x75, 0xe7, 0x66, 0xe9, 0xee, 0x4a, 0x6f, 0xde, 0xe6, 0x00, 0x47, 0xa1, 0x8f, 0x05, 0x71, 0x69,
	0x12, 0x9d, 0x18, 0xff, 0x17, 0xb0, 0x05, 0xe5, 0xdc, 0x4b, 0xa2, 0x13, 0xf3, 0x7d, 0x05, 0x2c,
	0x4f, 0xcc, 0x09, 0xd7, 0x81, 0x9e, 0xa5, 0x45, 0x70, 0xae, 0x46, 0x11, 0xac, 0xb7, 0x6a, 0xaa,
	0x03, 0x25, 0x87, 0xd5, 0xcd, 0x05, 0xdb, 0xc5, 0xfc, 0xd8, 0x01, 0x12, 0x9e, 0xdb, 0x70, 0x07,
	0xcc, 0x79, 0x8c, 0x60, 0x21, 0xef, 0x56, 0x6f, 0xa1, 0xa9, 0x9d, 0x0f, 0xa7, 0x67, 0xac, 0xf5,
	0xed, 0xff, 0x9c, 0x92, 0x20, 0xa7, 0x92, 0xc4, 0x46, 0xe5, 0xca, 0x54, 0x92, 0x00, 0x1a, 0x60,
	0x8e, 0x91, 0x98, 0x0e, 0xe4, 0x8d, 0xcd, 0xe7, 0x27, 0xf2, 0x7b, 0x53, 0x07, 0xf3, 0xc3, 0x2b,
	0x36, 0xbf, 0x6a, 0xe0, 0xce, 0x44, 0xe9, 0x79, 0x4a, 0x13, 0x4e, 0x60, 0x17, 0x2c, 0x5f, 0x50,
	0xc0, 0x25, 0x8c, 0x51, 0x56, 0xb0, 0xea, 0x2d, 0xa8, 0x0a, 0x64, 0xa9, 0x67, 0x1d, 0x14, 0x23,
	0xe9, 0x2c, 0x8d, 0x6b, 0xf3, 0x3c, 0x87, 0xc3, 0x97, 0xe0, 0x1a, 0x23, 0x3c, 0x8b, 0x84, 0x9a,
	0x0f, 0x7b, 0xf6, 0x7c, 0x5c, 0xae, 0xcb, 0x29, 0x28, 0x1c, 0x45, 0x65, 0x3e, 0x05, 0xc6, 0x34,
	0xd0, 0x5f, 0x4d, 0x7e, 0xeb, 0x63, 0x15, 0x2c, 0x8d, 0xc6, 0x1e, 0xc8, 0xdc, 0xf0, 0x8b, 0x06,
	0x16, 0x2f, 0xbc, 0x28, 0xf8, 0x64, 0x76, 0xc5, 0x93, 0x1f, 0x61, 0xed, 0x5f, 0x65, 0x34, 0xd7,
	0xde, 0xfd, 0x38, 0xff, 0x50, 0x69, 0x42, 0x94, 0xef, 0x9c, 0xd3, 0xb1, 0x36, 0xda, 0xea, 0xdd,
	0x71, 0xd4, 0x18, 0x2e, 0xa1, 0x42, 0x33, 0xd4, 0x38, 0x83, 0xdf, 0x35, 0xb0, 0x34, 0x41, 0x4e,
	0xb8, 0x71, 0x95, 0xdb, 0x56, 0x0b, 0xa0, 0xd6, 0xbe, 0x62, 0xb4, 0x9c, 0x21, 0xb3, 0x5d, 0x74,
	0xb3, 0x66, 0xb6, 0xf2, 0x6e, 0xfe, 0x94, 0x7f, 0x3a, 0xb2, 0x54, 0xda, 0x8d, 0xb3, 0xf1, 0x66,
	0xec, 0xb8, 0x20, 0xb4, 0xb5, 0xc6, 0xe6, 0x2f, 0x0d, 0xac, 0x78, 0x34, 0x9e, 0x59, 0xc3, 0xa6,
	0x31, 0x41, 0xc9, 0xfd, 0xfc, 0xed, 0xee, 0x6b, 0xaf, 0xb7, 0xcb, 0xe8, 0x80, 0x46, 0x38, 0x09,
	0x2c, 0xca, 0x02, 0x14, 0x90, 0xa4, 0x78, 0xd9, 0x6a, 0xc3, 0xa7, 0x21, 0x9f, 0xfe, 0x43, 0x59,
	0x57, 0xc6, 0xa7, 0x4a, 0x75, 0xab, 0xd3, 0xf9, 0x5c, 0xa9, 0x6f, 0x49, 0xc2, 0x8e, 0xcf, 0x2d,
	0x69, 0xe6, 0xd6, 0x61, 0xd3, 0x2a, 0x13, 0xf3, 0x6f, 0x0a, 0xd2, 0xeb, 0xf8, 0xbc, 0x37, 0x84,
	0xf4, 0x0e, 0x9b, 0x3d, 0x05, 0xf9, 0x59, 0x59, 0x91, 0x7e, 0xdb, 0xee, 0xf8, 0xdc, 0xb6, 0x87,
	0x20, 0xdb, 0x3e, 0x6c, 0xda, 0xb6, 0x82, 0x1d, 0xcd, 0x15, 0x75, 0x3e, 0xfa, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0x1c, 0x27, 0x98, 0x94, 0xf7, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CampaignFeedServiceClient is the client API for CampaignFeedService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CampaignFeedServiceClient interface {
	// Returns the requested campaign feed in full detail.
	GetCampaignFeed(ctx context.Context, in *GetCampaignFeedRequest, opts ...grpc.CallOption) (*resources.CampaignFeed, error)
	// Creates, updates, or removes campaign feeds. Operation statuses are
	// returned.
	MutateCampaignFeeds(ctx context.Context, in *MutateCampaignFeedsRequest, opts ...grpc.CallOption) (*MutateCampaignFeedsResponse, error)
}

type campaignFeedServiceClient struct {
	cc *grpc.ClientConn
}

func NewCampaignFeedServiceClient(cc *grpc.ClientConn) CampaignFeedServiceClient {
	return &campaignFeedServiceClient{cc}
}

func (c *campaignFeedServiceClient) GetCampaignFeed(ctx context.Context, in *GetCampaignFeedRequest, opts ...grpc.CallOption) (*resources.CampaignFeed, error) {
	out := new(resources.CampaignFeed)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v1.services.CampaignFeedService/GetCampaignFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignFeedServiceClient) MutateCampaignFeeds(ctx context.Context, in *MutateCampaignFeedsRequest, opts ...grpc.CallOption) (*MutateCampaignFeedsResponse, error) {
	out := new(MutateCampaignFeedsResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v1.services.CampaignFeedService/MutateCampaignFeeds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CampaignFeedServiceServer is the server API for CampaignFeedService service.
type CampaignFeedServiceServer interface {
	// Returns the requested campaign feed in full detail.
	GetCampaignFeed(context.Context, *GetCampaignFeedRequest) (*resources.CampaignFeed, error)
	// Creates, updates, or removes campaign feeds. Operation statuses are
	// returned.
	MutateCampaignFeeds(context.Context, *MutateCampaignFeedsRequest) (*MutateCampaignFeedsResponse, error)
}

func RegisterCampaignFeedServiceServer(s *grpc.Server, srv CampaignFeedServiceServer) {
	s.RegisterService(&_CampaignFeedService_serviceDesc, srv)
}

func _CampaignFeedService_GetCampaignFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCampaignFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignFeedServiceServer).GetCampaignFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v1.services.CampaignFeedService/GetCampaignFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignFeedServiceServer).GetCampaignFeed(ctx, req.(*GetCampaignFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CampaignFeedService_MutateCampaignFeeds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutateCampaignFeedsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignFeedServiceServer).MutateCampaignFeeds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v1.services.CampaignFeedService/MutateCampaignFeeds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignFeedServiceServer).MutateCampaignFeeds(ctx, req.(*MutateCampaignFeedsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CampaignFeedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v1.services.CampaignFeedService",
	HandlerType: (*CampaignFeedServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCampaignFeed",
			Handler:    _CampaignFeedService_GetCampaignFeed_Handler,
		},
		{
			MethodName: "MutateCampaignFeeds",
			Handler:    _CampaignFeedService_MutateCampaignFeeds_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v1/services/campaign_feed_service.proto",
}
