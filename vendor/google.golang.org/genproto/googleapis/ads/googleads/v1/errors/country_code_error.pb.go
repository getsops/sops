// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/errors/country_code_error.proto

package errors

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum describing country code errors.
type CountryCodeErrorEnum_CountryCodeError int32

const (
	// Enum unspecified.
	CountryCodeErrorEnum_UNSPECIFIED CountryCodeErrorEnum_CountryCodeError = 0
	// The received error code is not known in this version.
	CountryCodeErrorEnum_UNKNOWN CountryCodeErrorEnum_CountryCodeError = 1
	// The country code is invalid.
	CountryCodeErrorEnum_INVALID_COUNTRY_CODE CountryCodeErrorEnum_CountryCodeError = 2
)

var CountryCodeErrorEnum_CountryCodeError_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "UNKNOWN",
	2: "INVALID_COUNTRY_CODE",
}

var CountryCodeErrorEnum_CountryCodeError_value = map[string]int32{
	"UNSPECIFIED":          0,
	"UNKNOWN":              1,
	"INVALID_COUNTRY_CODE": 2,
}

func (x CountryCodeErrorEnum_CountryCodeError) String() string {
	return proto.EnumName(CountryCodeErrorEnum_CountryCodeError_name, int32(x))
}

func (CountryCodeErrorEnum_CountryCodeError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_69b104cf7bd804d2, []int{0, 0}
}

// Container for enum describing country code errors.
type CountryCodeErrorEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountryCodeErrorEnum) Reset()         { *m = CountryCodeErrorEnum{} }
func (m *CountryCodeErrorEnum) String() string { return proto.CompactTextString(m) }
func (*CountryCodeErrorEnum) ProtoMessage()    {}
func (*CountryCodeErrorEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_69b104cf7bd804d2, []int{0}
}

func (m *CountryCodeErrorEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryCodeErrorEnum.Unmarshal(m, b)
}
func (m *CountryCodeErrorEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryCodeErrorEnum.Marshal(b, m, deterministic)
}
func (m *CountryCodeErrorEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryCodeErrorEnum.Merge(m, src)
}
func (m *CountryCodeErrorEnum) XXX_Size() int {
	return xxx_messageInfo_CountryCodeErrorEnum.Size(m)
}
func (m *CountryCodeErrorEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryCodeErrorEnum.DiscardUnknown(m)
}

var xxx_messageInfo_CountryCodeErrorEnum proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("google.ads.googleads.v1.errors.CountryCodeErrorEnum_CountryCodeError", CountryCodeErrorEnum_CountryCodeError_name, CountryCodeErrorEnum_CountryCodeError_value)
	proto.RegisterType((*CountryCodeErrorEnum)(nil), "google.ads.googleads.v1.errors.CountryCodeErrorEnum")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/errors/country_code_error.proto", fileDescriptor_69b104cf7bd804d2)
}

var fileDescriptor_69b104cf7bd804d2 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4a, 0xc3, 0x30,
	0x1c, 0xc6, 0x5d, 0x05, 0x85, 0xec, 0x60, 0x29, 0x13, 0x44, 0x64, 0x87, 0x3e, 0x40, 0x42, 0xf1,
	0x20, 0xc4, 0x53, 0xd6, 0xd6, 0x51, 0x95, 0x6c, 0xa8, 0xab, 0x28, 0x85, 0xd2, 0x2d, 0x25, 0x0c,
	0xb6, 0xfc, 0x47, 0xd2, 0x0d, 0x7c, 0x1d, 0x8f, 0x3e, 0x8a, 0x8f, 0xe2, 0xc9, 0x47, 0x90, 0x36,
	0xb6, 0x87, 0x81, 0x9e, 0xf2, 0xf1, 0xf1, 0xfb, 0xbe, 0x7c, 0xfc, 0xd1, 0x95, 0x04, 0x90, 0xab,
	0x92, 0x14, 0xc2, 0x10, 0x2b, 0x6b, 0xb5, 0x0b, 0x48, 0xa9, 0x35, 0x68, 0x43, 0x16, 0xb0, 0x55,
	0x95, 0x7e, 0xcb, 0x17, 0x20, 0xca, 0xbc, 0xf1, 0xf0, 0x46, 0x43, 0x05, 0xde, 0xd0, 0xd2, 0xb8,
	0x10, 0x06, 0x77, 0x41, 0xbc, 0x0b, 0xb0, 0x0d, 0x9e, 0x5f, 0xb4, 0xc5, 0x9b, 0x25, 0x29, 0x94,
	0x82, 0xaa, 0xa8, 0x96, 0xa0, 0x8c, 0x4d, 0xfb, 0x73, 0x34, 0x08, 0x6d, 0x73, 0x08, 0xa2, 0x8c,
	0xeb, 0x48, 0xac, 0xb6, 0x6b, 0xff, 0x16, 0xb9, 0xfb, 0xbe, 0x77, 0x82, 0xfa, 0x33, 0xfe, 0x38,
	0x8d, 0xc3, 0xe4, 0x26, 0x89, 0x23, 0xf7, 0xc0, 0xeb, 0xa3, 0xe3, 0x19, 0xbf, 0xe3, 0x93, 0x67,
	0xee, 0xf6, 0xbc, 0x33, 0x34, 0x48, 0x78, 0xca, 0xee, 0x93, 0x28, 0x0f, 0x27, 0x33, 0xfe, 0xf4,
	0xf0, 0x92, 0x87, 0x93, 0x28, 0x76, 0x9d, 0xd1, 0x77, 0x0f, 0xf9, 0x0b, 0x58, 0xe3, 0xff, 0x87,
	0x8e, 0x4e, 0xf7, 0x3f, 0x9c, 0xd6, 0x0b, 0xa7, 0xbd, 0xd7, 0xe8, 0x37, 0x28, 0x61, 0x55, 0x28,
	0x89, 0x41, 0x4b, 0x22, 0x4b, 0xd5, 0xec, 0x6f, 0x4f, 0xb5, 0x59, 0x9a, 0xbf, 0x2e, 0x77, 0x6d,
	0x9f, 0x77, 0xe7, 0x70, 0xcc, 0xd8, 0x87, 0x33, 0x1c, 0xdb, 0x32, 0x26, 0x0c, 0xb6, 0xb2, 0x56,
	0x69, 0x80, 0x9b, 0x2f, 0xcd, 0x67, 0x0b, 0x64, 0x4c, 0x98, 0xac, 0x03, 0xb2, 0x34, 0xc8, 0x2c,
	0xf0, 0xe5, 0xf8, 0xd6, 0xa5, 0x94, 0x09, 0x43, 0x69, 0x87, 0x50, 0x9a, 0x06, 0x94, 0x5a, 0x68,
	0x7e, 0xd4, 0xac, 0xbb, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x26, 0x72, 0x76, 0xd6, 0x01,
	0x00, 0x00,
}
