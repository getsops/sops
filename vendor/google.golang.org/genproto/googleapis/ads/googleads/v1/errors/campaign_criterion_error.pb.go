// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/errors/campaign_criterion_error.proto

package errors

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum describing possible campaign criterion errors.
type CampaignCriterionErrorEnum_CampaignCriterionError int32

const (
	// Enum unspecified.
	CampaignCriterionErrorEnum_UNSPECIFIED CampaignCriterionErrorEnum_CampaignCriterionError = 0
	// The received error code is not known in this version.
	CampaignCriterionErrorEnum_UNKNOWN CampaignCriterionErrorEnum_CampaignCriterionError = 1
	// Concrete type of criterion (keyword v.s. placement) is required for
	// CREATE and UPDATE operations.
	CampaignCriterionErrorEnum_CONCRETE_TYPE_REQUIRED CampaignCriterionErrorEnum_CampaignCriterionError = 2
	// Invalid placement URL.
	CampaignCriterionErrorEnum_INVALID_PLACEMENT_URL CampaignCriterionErrorEnum_CampaignCriterionError = 3
	// Criteria type can not be excluded for the campaign by the customer. like
	// AOL account type cannot target site type criteria
	CampaignCriterionErrorEnum_CANNOT_EXCLUDE_CRITERIA_TYPE CampaignCriterionErrorEnum_CampaignCriterionError = 4
	// Cannot set the campaign criterion status for this criteria type.
	CampaignCriterionErrorEnum_CANNOT_SET_STATUS_FOR_CRITERIA_TYPE CampaignCriterionErrorEnum_CampaignCriterionError = 5
	// Cannot set the campaign criterion status for an excluded criteria.
	CampaignCriterionErrorEnum_CANNOT_SET_STATUS_FOR_EXCLUDED_CRITERIA CampaignCriterionErrorEnum_CampaignCriterionError = 6
	// Cannot target and exclude the same criterion.
	CampaignCriterionErrorEnum_CANNOT_TARGET_AND_EXCLUDE CampaignCriterionErrorEnum_CampaignCriterionError = 7
	// The mutate contained too many operations.
	CampaignCriterionErrorEnum_TOO_MANY_OPERATIONS CampaignCriterionErrorEnum_CampaignCriterionError = 8
	// This operator cannot be applied to a criterion of this type.
	CampaignCriterionErrorEnum_OPERATOR_NOT_SUPPORTED_FOR_CRITERION_TYPE CampaignCriterionErrorEnum_CampaignCriterionError = 9
	// The Shopping campaign sales country is not supported for
	// ProductSalesChannel targeting.
	CampaignCriterionErrorEnum_SHOPPING_CAMPAIGN_SALES_COUNTRY_NOT_SUPPORTED_FOR_SALES_CHANNEL CampaignCriterionErrorEnum_CampaignCriterionError = 10
	// The existing field can't be updated with CREATE operation. It can be
	// updated with UPDATE operation only.
	CampaignCriterionErrorEnum_CANNOT_ADD_EXISTING_FIELD CampaignCriterionErrorEnum_CampaignCriterionError = 11
	// Negative criteria are immutable, so updates are not allowed.
	CampaignCriterionErrorEnum_CANNOT_UPDATE_NEGATIVE_CRITERION CampaignCriterionErrorEnum_CampaignCriterionError = 12
)

var CampaignCriterionErrorEnum_CampaignCriterionError_name = map[int32]string{
	0:  "UNSPECIFIED",
	1:  "UNKNOWN",
	2:  "CONCRETE_TYPE_REQUIRED",
	3:  "INVALID_PLACEMENT_URL",
	4:  "CANNOT_EXCLUDE_CRITERIA_TYPE",
	5:  "CANNOT_SET_STATUS_FOR_CRITERIA_TYPE",
	6:  "CANNOT_SET_STATUS_FOR_EXCLUDED_CRITERIA",
	7:  "CANNOT_TARGET_AND_EXCLUDE",
	8:  "TOO_MANY_OPERATIONS",
	9:  "OPERATOR_NOT_SUPPORTED_FOR_CRITERION_TYPE",
	10: "SHOPPING_CAMPAIGN_SALES_COUNTRY_NOT_SUPPORTED_FOR_SALES_CHANNEL",
	11: "CANNOT_ADD_EXISTING_FIELD",
	12: "CANNOT_UPDATE_NEGATIVE_CRITERION",
}

var CampaignCriterionErrorEnum_CampaignCriterionError_value = map[string]int32{
	"UNSPECIFIED":                               0,
	"UNKNOWN":                                   1,
	"CONCRETE_TYPE_REQUIRED":                    2,
	"INVALID_PLACEMENT_URL":                     3,
	"CANNOT_EXCLUDE_CRITERIA_TYPE":              4,
	"CANNOT_SET_STATUS_FOR_CRITERIA_TYPE":       5,
	"CANNOT_SET_STATUS_FOR_EXCLUDED_CRITERIA":   6,
	"CANNOT_TARGET_AND_EXCLUDE":                 7,
	"TOO_MANY_OPERATIONS":                       8,
	"OPERATOR_NOT_SUPPORTED_FOR_CRITERION_TYPE": 9,
	"SHOPPING_CAMPAIGN_SALES_COUNTRY_NOT_SUPPORTED_FOR_SALES_CHANNEL": 10,
	"CANNOT_ADD_EXISTING_FIELD":                                       11,
	"CANNOT_UPDATE_NEGATIVE_CRITERION":                                12,
}

func (x CampaignCriterionErrorEnum_CampaignCriterionError) String() string {
	return proto.EnumName(CampaignCriterionErrorEnum_CampaignCriterionError_name, int32(x))
}

func (CampaignCriterionErrorEnum_CampaignCriterionError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3abd0050e308ff58, []int{0, 0}
}

// Container for enum describing possible campaign criterion errors.
type CampaignCriterionErrorEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampaignCriterionErrorEnum) Reset()         { *m = CampaignCriterionErrorEnum{} }
func (m *CampaignCriterionErrorEnum) String() string { return proto.CompactTextString(m) }
func (*CampaignCriterionErrorEnum) ProtoMessage()    {}
func (*CampaignCriterionErrorEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_3abd0050e308ff58, []int{0}
}

func (m *CampaignCriterionErrorEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CampaignCriterionErrorEnum.Unmarshal(m, b)
}
func (m *CampaignCriterionErrorEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CampaignCriterionErrorEnum.Marshal(b, m, deterministic)
}
func (m *CampaignCriterionErrorEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampaignCriterionErrorEnum.Merge(m, src)
}
func (m *CampaignCriterionErrorEnum) XXX_Size() int {
	return xxx_messageInfo_CampaignCriterionErrorEnum.Size(m)
}
func (m *CampaignCriterionErrorEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_CampaignCriterionErrorEnum.DiscardUnknown(m)
}

var xxx_messageInfo_CampaignCriterionErrorEnum proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("google.ads.googleads.v1.errors.CampaignCriterionErrorEnum_CampaignCriterionError", CampaignCriterionErrorEnum_CampaignCriterionError_name, CampaignCriterionErrorEnum_CampaignCriterionError_value)
	proto.RegisterType((*CampaignCriterionErrorEnum)(nil), "google.ads.googleads.v1.errors.CampaignCriterionErrorEnum")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/errors/campaign_criterion_error.proto", fileDescriptor_3abd0050e308ff58)
}

var fileDescriptor_3abd0050e308ff58 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xd1, 0x6a, 0xd4, 0x40,
	0x14, 0x86, 0xed, 0xae, 0xb6, 0x3a, 0x15, 0x0c, 0x23, 0x56, 0x5a, 0x6b, 0x29, 0xab, 0x50, 0x44,
	0x4c, 0x58, 0xbc, 0x8b, 0x88, 0x4c, 0x27, 0xa7, 0xe9, 0x60, 0x3a, 0x33, 0x4e, 0x26, 0xab, 0x95,
	0x85, 0x21, 0x76, 0x97, 0x10, 0xe8, 0x26, 0x4b, 0xb2, 0xf6, 0x81, 0xbc, 0xf4, 0x51, 0x7c, 0x00,
	0x1f, 0xc2, 0x7b, 0xbd, 0x96, 0x64, 0xb2, 0x6b, 0x91, 0xd5, 0xab, 0x9c, 0xe4, 0x7c, 0xff, 0x7f,
	0x7e, 0xc8, 0x8f, 0x5e, 0x67, 0x65, 0x99, 0x5d, 0x4e, 0xbd, 0x74, 0x52, 0x7b, 0x76, 0x6c, 0xa6,
	0xab, 0xa1, 0x37, 0xad, 0xaa, 0xb2, 0xaa, 0xbd, 0x8b, 0x74, 0x36, 0x4f, 0xf3, 0xac, 0x30, 0x17,
	0x55, 0xbe, 0x98, 0x56, 0x79, 0x59, 0x98, 0x76, 0xe3, 0xce, 0xab, 0x72, 0x51, 0xe2, 0x03, 0xab,
	0x71, 0xd3, 0x49, 0xed, 0xae, 0xe4, 0xee, 0xd5, 0xd0, 0xb5, 0xf2, 0xbd, 0xfd, 0xa5, 0xfd, 0x3c,
	0xf7, 0xd2, 0xa2, 0x28, 0x17, 0xe9, 0x22, 0x2f, 0x8b, 0xda, 0xaa, 0x07, 0x3f, 0xfb, 0x68, 0x8f,
	0x76, 0x07, 0xe8, 0xd2, 0x1f, 0x1a, 0x25, 0x14, 0x9f, 0x67, 0x83, 0xef, 0x7d, 0xb4, 0xb3, 0x7e,
	0x8d, 0xef, 0xa1, 0xed, 0x84, 0xc7, 0x12, 0x28, 0x3b, 0x61, 0x10, 0x38, 0x37, 0xf0, 0x36, 0xda,
	0x4a, 0xf8, 0x5b, 0x2e, 0xde, 0x73, 0x67, 0x03, 0xef, 0xa1, 0x1d, 0x2a, 0x38, 0x55, 0xa0, 0xc1,
	0xe8, 0x73, 0x09, 0x46, 0xc1, 0xbb, 0x84, 0x29, 0x08, 0x9c, 0x1e, 0xde, 0x45, 0x0f, 0x18, 0x1f,
	0x91, 0x88, 0x05, 0x46, 0x46, 0x84, 0xc2, 0x19, 0x70, 0x6d, 0x12, 0x15, 0x39, 0x7d, 0x7c, 0x88,
	0xf6, 0x29, 0xe1, 0x5c, 0x68, 0x03, 0x1f, 0x68, 0x94, 0x04, 0x60, 0xa8, 0x62, 0x1a, 0x14, 0x23,
	0xad, 0x8b, 0x73, 0x13, 0x1f, 0xa1, 0x27, 0x1d, 0x11, 0x83, 0x36, 0xb1, 0x26, 0x3a, 0x89, 0xcd,
	0x89, 0x50, 0x7f, 0x81, 0xb7, 0xf0, 0x73, 0x74, 0xb4, 0x1e, 0xec, 0x9c, 0x83, 0x95, 0xc2, 0xd9,
	0xc4, 0x8f, 0xd1, 0x6e, 0x07, 0x6b, 0xa2, 0x42, 0xd0, 0x86, 0xf0, 0x60, 0x09, 0x3a, 0x5b, 0xf8,
	0x21, 0xba, 0xaf, 0x85, 0x30, 0x67, 0x84, 0x9f, 0x1b, 0x21, 0x41, 0x11, 0xcd, 0x04, 0x8f, 0x9d,
	0xdb, 0xf8, 0x05, 0x7a, 0x66, 0xdf, 0x85, 0x32, 0xed, 0xa9, 0x44, 0x4a, 0xa1, 0x34, 0x04, 0xd7,
	0x23, 0x09, 0x6e, 0x33, 0xdd, 0xc1, 0x14, 0xbd, 0x89, 0x4f, 0x85, 0x94, 0x8c, 0x87, 0x86, 0x92,
	0x33, 0x49, 0x58, 0xc8, 0x4d, 0x4c, 0x22, 0x88, 0x0d, 0x15, 0x09, 0xd7, 0xea, 0x7c, 0x8d, 0x4b,
	0xb7, 0x3f, 0x25, 0x9c, 0x43, 0xe4, 0xa0, 0x6b, 0x59, 0x49, 0xd0, 0x84, 0x64, 0xb1, 0x6e, 0xfc,
	0x4e, 0x18, 0x44, 0x81, 0xb3, 0x8d, 0x9f, 0xa2, 0xc3, 0x6e, 0x9d, 0xc8, 0x80, 0x68, 0x30, 0x1c,
	0x42, 0xa2, 0xd9, 0x08, 0xfe, 0xc4, 0x71, 0xee, 0x1e, 0xff, 0xda, 0x40, 0x83, 0x8b, 0x72, 0xe6,
	0xfe, 0xbf, 0x3c, 0xc7, 0x8f, 0xd6, 0xff, 0x7c, 0xd9, 0x74, 0x47, 0x6e, 0x7c, 0x0c, 0x3a, 0x79,
	0x56, 0x5e, 0xa6, 0x45, 0xe6, 0x96, 0x55, 0xe6, 0x65, 0xd3, 0xa2, 0x6d, 0xd6, 0xb2, 0xca, 0xf3,
	0xbc, 0xfe, 0x57, 0xb3, 0x5f, 0xd9, 0xc7, 0x97, 0x5e, 0x3f, 0x24, 0xe4, 0x6b, 0xef, 0x20, 0xb4,
	0x66, 0x64, 0x52, 0xbb, 0x76, 0x6c, 0xa6, 0xd1, 0xd0, 0x6d, 0x4f, 0xd6, 0xdf, 0x96, 0xc0, 0x98,
	0x4c, 0xea, 0xf1, 0x0a, 0x18, 0x8f, 0x86, 0x63, 0x0b, 0xfc, 0xe8, 0x0d, 0xec, 0x57, 0xdf, 0x27,
	0x93, 0xda, 0xf7, 0x57, 0x88, 0xef, 0x8f, 0x86, 0xbe, 0x6f, 0xa1, 0x4f, 0x9b, 0x6d, 0xba, 0x97,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x6b, 0xc7, 0xa8, 0x76, 0x03, 0x00, 0x00,
}
