// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/errors/conversion_adjustment_upload_error.proto

package errors

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum describing possible conversion adjustment upload errors.
type ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError int32

const (
	// Not specified.
	ConversionAdjustmentUploadErrorEnum_UNSPECIFIED ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 0
	// The received error code is not known in this version.
	ConversionAdjustmentUploadErrorEnum_UNKNOWN ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 1
	// The specified conversion action was created too recently.
	// Please try the upload again after 4-6 hours have passed since the
	// conversion action was created.
	ConversionAdjustmentUploadErrorEnum_TOO_RECENT_CONVERSION_ACTION ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 2
	// No conversion action of a supported ConversionActionType that matches the
	// provided information can be found for the customer.
	ConversionAdjustmentUploadErrorEnum_INVALID_CONVERSION_ACTION ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 3
	// A retraction was already reported for this conversion.
	ConversionAdjustmentUploadErrorEnum_CONVERSION_ALREADY_RETRACTED ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 4
	// A conversion for the supplied combination of conversion
	// action and conversion identifier could not be found.
	ConversionAdjustmentUploadErrorEnum_CONVERSION_NOT_FOUND ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 5
	// The specified conversion has already expired. Conversions expire after 55
	// days, after which adjustments cannot be reported against them.
	ConversionAdjustmentUploadErrorEnum_CONVERSION_EXPIRED ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 6
	// The supplied adjustment date time precedes that of the original
	// conversion.
	ConversionAdjustmentUploadErrorEnum_ADJUSTMENT_PRECEDES_CONVERSION ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 7
	// A restatement with a more recent adjustment date time was already
	// reported for this conversion.
	ConversionAdjustmentUploadErrorEnum_MORE_RECENT_RESTATEMENT_FOUND ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 8
	// The conversion was created too recently.
	ConversionAdjustmentUploadErrorEnum_TOO_RECENT_CONVERSION ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 9
	// Restatements cannot be reported for a conversion action that always uses
	// the default value.
	ConversionAdjustmentUploadErrorEnum_CANNOT_RESTATE_CONVERSION_ACTION_THAT_ALWAYS_USES_DEFAULT_CONVERSION_VALUE ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError = 10
)

var ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError_name = map[int32]string{
	0:  "UNSPECIFIED",
	1:  "UNKNOWN",
	2:  "TOO_RECENT_CONVERSION_ACTION",
	3:  "INVALID_CONVERSION_ACTION",
	4:  "CONVERSION_ALREADY_RETRACTED",
	5:  "CONVERSION_NOT_FOUND",
	6:  "CONVERSION_EXPIRED",
	7:  "ADJUSTMENT_PRECEDES_CONVERSION",
	8:  "MORE_RECENT_RESTATEMENT_FOUND",
	9:  "TOO_RECENT_CONVERSION",
	10: "CANNOT_RESTATE_CONVERSION_ACTION_THAT_ALWAYS_USES_DEFAULT_CONVERSION_VALUE",
}

var ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError_value = map[string]int32{
	"UNSPECIFIED":                    0,
	"UNKNOWN":                        1,
	"TOO_RECENT_CONVERSION_ACTION":   2,
	"INVALID_CONVERSION_ACTION":      3,
	"CONVERSION_ALREADY_RETRACTED":   4,
	"CONVERSION_NOT_FOUND":           5,
	"CONVERSION_EXPIRED":             6,
	"ADJUSTMENT_PRECEDES_CONVERSION": 7,
	"MORE_RECENT_RESTATEMENT_FOUND":  8,
	"TOO_RECENT_CONVERSION":          9,
	"CANNOT_RESTATE_CONVERSION_ACTION_THAT_ALWAYS_USES_DEFAULT_CONVERSION_VALUE": 10,
}

func (x ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError) String() string {
	return proto.EnumName(ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError_name, int32(x))
}

func (ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c800024a3df9b728, []int{0, 0}
}

// Container for enum describing possible conversion adjustment upload errors.
type ConversionAdjustmentUploadErrorEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConversionAdjustmentUploadErrorEnum) Reset()         { *m = ConversionAdjustmentUploadErrorEnum{} }
func (m *ConversionAdjustmentUploadErrorEnum) String() string { return proto.CompactTextString(m) }
func (*ConversionAdjustmentUploadErrorEnum) ProtoMessage()    {}
func (*ConversionAdjustmentUploadErrorEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_c800024a3df9b728, []int{0}
}

func (m *ConversionAdjustmentUploadErrorEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConversionAdjustmentUploadErrorEnum.Unmarshal(m, b)
}
func (m *ConversionAdjustmentUploadErrorEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConversionAdjustmentUploadErrorEnum.Marshal(b, m, deterministic)
}
func (m *ConversionAdjustmentUploadErrorEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConversionAdjustmentUploadErrorEnum.Merge(m, src)
}
func (m *ConversionAdjustmentUploadErrorEnum) XXX_Size() int {
	return xxx_messageInfo_ConversionAdjustmentUploadErrorEnum.Size(m)
}
func (m *ConversionAdjustmentUploadErrorEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_ConversionAdjustmentUploadErrorEnum.DiscardUnknown(m)
}

var xxx_messageInfo_ConversionAdjustmentUploadErrorEnum proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("google.ads.googleads.v1.errors.ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError", ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError_name, ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError_value)
	proto.RegisterType((*ConversionAdjustmentUploadErrorEnum)(nil), "google.ads.googleads.v1.errors.ConversionAdjustmentUploadErrorEnum")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/errors/conversion_adjustment_upload_error.proto", fileDescriptor_c800024a3df9b728)
}

var fileDescriptor_c800024a3df9b728 = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x86, 0x59, 0x0b, 0x1b, 0x78, 0x17, 0x44, 0x16, 0x20, 0x86, 0xb6, 0x02, 0x85, 0xeb, 0x44,
	0x11, 0x77, 0xe1, 0xca, 0x8b, 0x4f, 0x4b, 0x46, 0xe6, 0x44, 0x89, 0x93, 0x31, 0x54, 0xc9, 0x0a,
	0x4b, 0x14, 0x15, 0xb5, 0x71, 0x15, 0xa7, 0x7d, 0x04, 0x1e, 0x84, 0x4b, 0x2e, 0x78, 0x10, 0x1e,
	0x85, 0x97, 0x00, 0x25, 0x5e, 0xa3, 0x22, 0x06, 0xbb, 0xca, 0x91, 0xfd, 0x9d, 0xff, 0xff, 0x9d,
	0x73, 0xd0, 0xb4, 0x94, 0xb2, 0x5c, 0x14, 0x56, 0x96, 0x2b, 0x4b, 0x97, 0x6d, 0xb5, 0xb1, 0xad,
	0xa2, 0xae, 0x65, 0xad, 0xac, 0x2b, 0x59, 0x6d, 0x8a, 0x5a, 0xcd, 0x65, 0x25, 0xb2, 0xfc, 0xf3,
	0x5a, 0x35, 0xcb, 0xa2, 0x6a, 0xc4, 0x7a, 0xb5, 0x90, 0x59, 0x2e, 0x3a, 0xc6, 0x5c, 0xd5, 0xb2,
	0x91, 0x78, 0xa4, 0xbb, 0xcd, 0x2c, 0x57, 0x66, 0x2f, 0x64, 0x6e, 0x6c, 0x53, 0x0b, 0x3d, 0x3b,
	0xde, 0x1a, 0xad, 0xe6, 0x56, 0x56, 0x55, 0xb2, 0xc9, 0x9a, 0xb9, 0xac, 0x94, 0xee, 0x1e, 0x7f,
	0x1f, 0xa2, 0x57, 0x6e, 0x6f, 0x45, 0x7a, 0xa7, 0xa4, 0x33, 0x82, 0x56, 0x02, 0xaa, 0xf5, 0x72,
	0xfc, 0x65, 0x88, 0x9e, 0xdf, 0xc2, 0xe1, 0x87, 0xe8, 0x30, 0x61, 0x71, 0x08, 0xae, 0x37, 0xf1,
	0x80, 0x1a, 0x77, 0xf0, 0x21, 0x3a, 0x48, 0xd8, 0x7b, 0x16, 0x5c, 0x30, 0x63, 0x0f, 0xbf, 0x40,
	0xc7, 0x3c, 0x08, 0x44, 0x04, 0x2e, 0x30, 0x2e, 0xdc, 0x80, 0xa5, 0x10, 0xc5, 0x5e, 0xc0, 0x04,
	0x71, 0xb9, 0x17, 0x30, 0x63, 0x80, 0x4f, 0xd0, 0x91, 0xc7, 0x52, 0xe2, 0x7b, 0xf4, 0x86, 0xeb,
	0x61, 0x2b, 0xb0, 0x7b, 0xec, 0x47, 0x40, 0xe8, 0xa5, 0x88, 0x80, 0x47, 0xc4, 0xe5, 0x40, 0x8d,
	0xbb, 0xf8, 0x29, 0x7a, 0xb4, 0x43, 0xb0, 0x80, 0x8b, 0x49, 0x90, 0x30, 0x6a, 0xdc, 0xc3, 0x4f,
	0x10, 0xde, 0xb9, 0x81, 0x0f, 0xa1, 0x17, 0x01, 0x35, 0xf6, 0xf1, 0x18, 0x8d, 0x08, 0x3d, 0x4b,
	0x62, 0x7e, 0xde, 0x86, 0x0a, 0xdb, 0x70, 0x14, 0xe2, 0x1d, 0x7b, 0xe3, 0x00, 0xbf, 0x44, 0x27,
	0xe7, 0x41, 0x04, 0xdb, 0xe4, 0x11, 0xc4, 0x9c, 0x70, 0xe8, 0x1a, 0xb4, 0xfc, 0x7d, 0x7c, 0x84,
	0x1e, 0xdf, 0xf8, 0x36, 0xe3, 0x01, 0x66, 0xe8, 0xcc, 0x25, 0xac, 0xcd, 0x72, 0xdd, 0xf8, 0xf7,
	0xdb, 0x04, 0x7f, 0x47, 0xb8, 0x20, 0xfe, 0x05, 0xb9, 0x8c, 0x45, 0x12, 0x43, 0x2c, 0x28, 0x4c,
	0x48, 0xe2, 0xff, 0xf1, 0x97, 0x52, 0xe2, 0x27, 0x60, 0xa0, 0xd3, 0x5f, 0x7b, 0x68, 0x7c, 0x25,
	0x97, 0xe6, 0xff, 0xa7, 0x7e, 0xfa, 0xfa, 0x96, 0x61, 0x85, 0xed, 0xf4, 0xc3, 0xbd, 0x8f, 0xf4,
	0x5a, 0xa7, 0x94, 0x8b, 0xac, 0x2a, 0x4d, 0x59, 0x97, 0x56, 0x59, 0x54, 0xdd, 0x6e, 0x6c, 0xd7,
	0x72, 0x35, 0x57, 0xff, 0xda, 0xd2, 0xb7, 0xfa, 0xf3, 0x75, 0x30, 0x9c, 0x12, 0xf2, 0x6d, 0x30,
	0x9a, 0x6a, 0x31, 0x92, 0x2b, 0x53, 0x97, 0x6d, 0x95, 0xda, 0x66, 0x67, 0xa9, 0x7e, 0x6c, 0x81,
	0x19, 0xc9, 0xd5, 0xac, 0x07, 0x66, 0xa9, 0x3d, 0xd3, 0xc0, 0xcf, 0xc1, 0x58, 0x9f, 0x3a, 0x0e,
	0xc9, 0x95, 0xe3, 0xf4, 0x88, 0xe3, 0xa4, 0xb6, 0xe3, 0x68, 0xe8, 0xd3, 0x7e, 0x97, 0xee, 0xcd,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x23, 0x00, 0x6b, 0x77, 0x42, 0x03, 0x00, 0x00,
}
