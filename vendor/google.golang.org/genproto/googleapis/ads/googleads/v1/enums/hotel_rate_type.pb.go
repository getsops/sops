// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/enums/hotel_rate_type.proto

package enums

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum describing possible hotel rate types.
type HotelRateTypeEnum_HotelRateType int32

const (
	// Not specified.
	HotelRateTypeEnum_UNSPECIFIED HotelRateTypeEnum_HotelRateType = 0
	// The value is unknown in this version.
	HotelRateTypeEnum_UNKNOWN HotelRateTypeEnum_HotelRateType = 1
	// Rate type information is unavailable.
	HotelRateTypeEnum_UNAVAILABLE HotelRateTypeEnum_HotelRateType = 2
	// Rates available to everyone.
	HotelRateTypeEnum_PUBLIC_RATE HotelRateTypeEnum_HotelRateType = 3
	// A membership program rate is available and satisfies basic requirements
	// like having a public rate available. UI treatment will strikethrough the
	// public rate and indicate that a discount is available to the user. See
	// https://developers.google.com/hotels/hotel-ads/dev-guide/qualified-rates
	// for more information.
	HotelRateTypeEnum_QUALIFIED_RATE HotelRateTypeEnum_HotelRateType = 4
	// Rates available to users that satisfy some eligibility criteria. e.g.
	// all signed-in users, 20% of mobile users, all mobile users in Canada,
	// etc.
	HotelRateTypeEnum_PRIVATE_RATE HotelRateTypeEnum_HotelRateType = 5
)

var HotelRateTypeEnum_HotelRateType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "UNKNOWN",
	2: "UNAVAILABLE",
	3: "PUBLIC_RATE",
	4: "QUALIFIED_RATE",
	5: "PRIVATE_RATE",
}

var HotelRateTypeEnum_HotelRateType_value = map[string]int32{
	"UNSPECIFIED":    0,
	"UNKNOWN":        1,
	"UNAVAILABLE":    2,
	"PUBLIC_RATE":    3,
	"QUALIFIED_RATE": 4,
	"PRIVATE_RATE":   5,
}

func (x HotelRateTypeEnum_HotelRateType) String() string {
	return proto.EnumName(HotelRateTypeEnum_HotelRateType_name, int32(x))
}

func (HotelRateTypeEnum_HotelRateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_691e03bf10b9d5b0, []int{0, 0}
}

// Container for enum describing possible hotel rate types.
type HotelRateTypeEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HotelRateTypeEnum) Reset()         { *m = HotelRateTypeEnum{} }
func (m *HotelRateTypeEnum) String() string { return proto.CompactTextString(m) }
func (*HotelRateTypeEnum) ProtoMessage()    {}
func (*HotelRateTypeEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_691e03bf10b9d5b0, []int{0}
}

func (m *HotelRateTypeEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HotelRateTypeEnum.Unmarshal(m, b)
}
func (m *HotelRateTypeEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HotelRateTypeEnum.Marshal(b, m, deterministic)
}
func (m *HotelRateTypeEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HotelRateTypeEnum.Merge(m, src)
}
func (m *HotelRateTypeEnum) XXX_Size() int {
	return xxx_messageInfo_HotelRateTypeEnum.Size(m)
}
func (m *HotelRateTypeEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_HotelRateTypeEnum.DiscardUnknown(m)
}

var xxx_messageInfo_HotelRateTypeEnum proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("google.ads.googleads.v1.enums.HotelRateTypeEnum_HotelRateType", HotelRateTypeEnum_HotelRateType_name, HotelRateTypeEnum_HotelRateType_value)
	proto.RegisterType((*HotelRateTypeEnum)(nil), "google.ads.googleads.v1.enums.HotelRateTypeEnum")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/enums/hotel_rate_type.proto", fileDescriptor_691e03bf10b9d5b0)
}

var fileDescriptor_691e03bf10b9d5b0 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x50, 0xdf, 0x4a, 0xf3, 0x30,
	0x1c, 0xfd, 0xda, 0x7d, 0x2a, 0x64, 0xfe, 0xa9, 0xb9, 0x14, 0x77, 0xb1, 0x3d, 0x40, 0x4a, 0xd9,
	0x5d, 0xbc, 0x4a, 0x67, 0x9d, 0xc5, 0x52, 0xeb, 0x5c, 0x2b, 0x48, 0x61, 0x44, 0x1b, 0xea, 0x60,
	0x4b, 0xca, 0x92, 0x0d, 0xf6, 0x0a, 0x3e, 0x86, 0x97, 0x3e, 0x8a, 0x2f, 0x22, 0xf8, 0x14, 0x92,
	0xc4, 0x0d, 0x76, 0xa1, 0x37, 0xe1, 0x70, 0xce, 0xef, 0x1c, 0x72, 0x0e, 0xe8, 0xd7, 0x42, 0xd4,
	0x33, 0xe6, 0xd3, 0x4a, 0xfa, 0x16, 0x6a, 0xb4, 0x0a, 0x7c, 0xc6, 0x97, 0x73, 0xe9, 0xbf, 0x08,
	0xc5, 0x66, 0x93, 0x05, 0x55, 0x6c, 0xa2, 0xd6, 0x0d, 0x43, 0xcd, 0x42, 0x28, 0x01, 0x3b, 0xf6,
	0x12, 0xd1, 0x4a, 0xa2, 0xad, 0x09, 0xad, 0x02, 0x64, 0x4c, 0x67, 0xe7, 0x9b, 0xcc, 0x66, 0xea,
	0x53, 0xce, 0x85, 0xa2, 0x6a, 0x2a, 0xb8, 0xb4, 0xe6, 0xde, 0xab, 0x03, 0x4e, 0xaf, 0x75, 0xec,
	0x88, 0x2a, 0x36, 0x5e, 0x37, 0x2c, 0xe2, 0xcb, 0x79, 0x6f, 0x09, 0x8e, 0x76, 0x48, 0x78, 0x02,
	0xda, 0x79, 0x7a, 0x9f, 0x45, 0x83, 0xf8, 0x2a, 0x8e, 0x2e, 0xbd, 0x7f, 0xb0, 0x0d, 0x0e, 0xf2,
	0xf4, 0x26, 0xbd, 0x7d, 0x48, 0x3d, 0xc7, 0xaa, 0xa4, 0x20, 0x71, 0x42, 0xc2, 0x24, 0xf2, 0x5c,
	0x4d, 0x64, 0x79, 0x98, 0xc4, 0x83, 0xc9, 0x88, 0x8c, 0x23, 0xaf, 0x05, 0x21, 0x38, 0xbe, 0xcb,
	0x49, 0x62, 0xdc, 0x96, 0xfb, 0x0f, 0x3d, 0x70, 0x98, 0x8d, 0xe2, 0x82, 0x8c, 0x23, 0xcb, 0xec,
	0x85, 0x9f, 0x0e, 0xe8, 0x3e, 0x8b, 0x39, 0xfa, 0xb3, 0x50, 0x08, 0x77, 0xbe, 0x96, 0xe9, 0x1a,
	0x99, 0xf3, 0x18, 0xfe, 0x98, 0x6a, 0x31, 0xa3, 0xbc, 0x46, 0x62, 0x51, 0xfb, 0x35, 0xe3, 0xa6,
	0xe4, 0x66, 0xca, 0x66, 0x2a, 0x7f, 0x59, 0xf6, 0xc2, 0xbc, 0x6f, 0x6e, 0x6b, 0x48, 0xc8, 0xbb,
	0xdb, 0x19, 0xda, 0x28, 0x52, 0x49, 0x64, 0xa1, 0x46, 0x45, 0x80, 0xf4, 0x36, 0xf2, 0x63, 0xa3,
	0x97, 0xa4, 0x92, 0xe5, 0x56, 0x2f, 0x8b, 0xa0, 0x34, 0xfa, 0x97, 0xdb, 0xb5, 0x24, 0xc6, 0xa4,
	0x92, 0x18, 0x6f, 0x2f, 0x30, 0x2e, 0x02, 0x8c, 0xcd, 0xcd, 0xd3, 0xbe, 0xf9, 0x58, 0xff, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0xd7, 0x62, 0x65, 0x7c, 0xf1, 0x01, 0x00, 0x00,
}
